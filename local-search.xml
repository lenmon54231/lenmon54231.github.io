<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git操作（常用置顶）</title>
    <link href="/2026/09/22/Git%E5%B8%B8%E8%A7%81%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <url>/2026/09/22/Git%E5%B8%B8%E8%A7%81%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="Git操作（常用置顶）"><a href="#Git操作（常用置顶）" class="headerlink" title="Git操作（常用置顶）"></a>Git操作（常用置顶）</h2><p>git remote update origin –prune</p><span id="more"></span><h3 id="Git-更新远程分支列表"><a href="#Git-更新远程分支列表" class="headerlink" title="Git 更新远程分支列表"></a>Git 更新远程分支列表</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">git remote update origin --prune<br></code></pre></td></tr></table></figure><h3 id="本地代码关联远程仓库"><a href="#本地代码关联远程仓库" class="headerlink" title="本地代码关联远程仓库"></a>本地代码关联远程仓库</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">git init<br><br>git add .<br><br>git commit -m <span class="hljs-string">&quot;备注信息&quot;</span><br><br>git remote add origin 你的远程仓库地址<br><br>git pull --rebase origin master<br><br>git push -u origin master<br><span class="hljs-comment">// 当push报错时：behind的错误信息代表着需要重新执行 git pull --rebase origin master</span><br></code></pre></td></tr></table></figure><h3 id="Git-删除文件"><a href="#Git-删除文件" class="headerlink" title="Git 删除文件"></a>Git 删除文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 工作过程中若误提交了文件到仓库上，比如node_modules,此时想只删除远程仓库文件，不删除本地文件，可使用下面命令</span><br><br> git rm --cached 文件（夹）名，此时只删除了仓库中的缓存，实际文件不会删除<br> git commit -m <span class="hljs-string">&#x27;备注&#x27;</span><br> git push origin 分支<br><br></code></pre></td></tr></table></figure><p>注意：</p><p>上述 git commit -m ‘备注’之前不能使用 git add .命令,因为用了命令相当于把第一步已删除的文件从新添加进入了暂存区，从而形成新的</p><p>缓存。后面再使用 gitcommit 和 git push，相当于删除缓存又重新添加缓存，文件仍然存在，提交的时候会提示已经是最新的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 若本地和远程都想删除</span><br><br><span class="hljs-comment">// 使用一开始介绍的删除文件或者文件夹的两个命令。</span><br><span class="hljs-comment">// 或者直接删除文件，随后会看到vscode中有个 git变动</span><br>git add .<br>git commit -m <span class="hljs-string">&#x27;备注&#x27;</span><br>git push origin 分支<br><br></code></pre></td></tr></table></figure><h3 id="Git-删除分支"><a href="#Git-删除分支" class="headerlink" title="Git 删除分支"></a>Git 删除分支</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">git branch -a<br>git branch -d &lt;<span class="hljs-title class_">BranchName</span>&gt; <span class="hljs-comment">// 删除本地分支</span><br>git push origin --<span class="hljs-keyword">delete</span> &lt;<span class="hljs-title class_">BranchName</span>&gt; <span class="hljs-comment">// 删除远端分支</span><br>git branch -a<br><br><br></code></pre></td></tr></table></figure><h3 id="Git-获取其他分支的-commit"><a href="#Git-获取其他分支的-commit" class="headerlink" title="Git 获取其他分支的 commit"></a>Git 获取其他分支的 commit</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 将其他分支的commit合并到master</span><br>git checkout master<br>git cherry-pick 62ecb3<br></code></pre></td></tr></table></figure><h3 id="Git-忽略文件失效"><a href="#Git-忽略文件失效" class="headerlink" title="Git 忽略文件失效"></a>Git 忽略文件失效</h3><p>.gitignore 只能忽略没有被跟踪的文件(就是没有被纳入版本管理的文件),如果已经被纳入版本管理是无法忽略的。</p><blockquote><p>全部文件重新管理</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">git rm -r --cached .    <span class="hljs-comment">//清除缓存区，注意最后有个&quot;.&quot;</span><br><br>git add .                    <span class="hljs-comment">//重新纳入版本管理，注意最后有个&quot;.&quot;</span><br><br>git commit -m <span class="hljs-string">&#x27;update .gitignore&#x27;</span>    <span class="hljs-comment">//提交新的忽略文件。</span><br><br>git push<br></code></pre></td></tr></table></figure><blockquote><p>部分文件管理</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">git rm --cached temp.<span class="hljs-property">php</span>  <span class="hljs-comment">//表示将temp.php移除版本管理。</span><br><br>git commit -m <span class="hljs-string">&#x27;fix&#x27;</span><br><br>git push<br></code></pre></td></tr></table></figure><blockquote><p>.gitignore 文件忽略规则</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"># 忽略*.<span class="hljs-property">o</span>和*.<span class="hljs-property">a</span>文件<br>*.[oa]<br># 忽略*.<span class="hljs-property">b</span>和*.<span class="hljs-property">B</span>文件，my.<span class="hljs-property">b</span>除外  -》<br>*.[bB]<br>!my.<span class="hljs-property">b</span><br># 忽略dbg文件和dbg目录<br>dbg<br># 只忽略dbg目录，不忽略dbg文件<br>dbg/<br># 只忽略dbg文件，不忽略dbg目录<br>dbg<br>!dbg/<br># 只忽略当前目录下的dbg文件和目录，子目录的dbg不在忽略范围内<br>/dbg<br></code></pre></td></tr></table></figure><h3 id="Git-Stash-的应用"><a href="#Git-Stash-的应用" class="headerlink" title="Git Stash 的应用"></a>Git Stash 的应用</h3><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><p>当有新的改动加入到本地时，常常会遇到提示，让你先做 stash 缓存到本地。然后 pull 代码到本地后，再通过 git stash pop 将最近的一个 stash 合并到 本地代码<br>常用代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js">git stash<br>git stash save <span class="hljs-string">&quot;save message&quot;</span>   <span class="hljs-comment">// 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</span><br><br>git stash list <span class="hljs-comment">//查看stash了哪些存储</span><br><br>git stash show <span class="hljs-comment">//显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@&#123;$num&#125;，比如第二个 git stash show stash@&#123;1&#125;</span><br><br>git stash show -p<span class="hljs-comment">// 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show  stash@&#123;$num&#125;  -p ，比如第二个：git stash show  stash@&#123;1&#125;  -p</span><br><br>git stash apply<span class="hljs-comment">//应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@&#123;0&#125;，如果要使用其他个，git stash apply stash@&#123;$num&#125; ， 比如第二个：git stash apply stash@&#123;1&#125;</span><br><br>git stash pop <span class="hljs-comment">//命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@&#123;0&#125;，如果要应用并删除其他stash，命令：git stash pop stash@&#123;$num&#125; ，比如应用并删除第二个：git stash pop stash@&#123;1&#125;</span><br><br>git stash drop stash@&#123;$num&#125; <span class="hljs-comment">//丢弃stash@&#123;$num&#125;存储，从列表中删除这个存储</span><br><br>git stash clear <span class="hljs-comment">//删除所有缓存的stash</span><br></code></pre></td></tr></table></figure><h4 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h4><p>当配置了 Eslint 后，如果某些 代码不能通过 Eslint 的检测，就会报警。并且会出现 本次 commit 修改的代码 被全部恢复的情况，此时，可以去 stash 缓存区去查看下，一般会被自动放置到 stash 中。<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/vscode%E4%B8%AD%E6%9F%A5%E7%9C%8Bstash.png" alt="vscode中如何查看"></p><h3 id="git-pull-拉取后冲突"><a href="#git-pull-拉取后冲突" class="headerlink" title="git pull 拉取后冲突"></a>git pull 拉取后冲突</h3><p>有长期未使用的分支，可能已经被删除掉了，当你切换到其他分支，并且拉取 pull 后，可能会产生冲突<br>此时，不需要保留本地的代码，只需要同步 远程的分支代码<br>则需要以下操作：</p><blockquote><p>git clean -d -f // 这一步会强制清空本地的修改，应该是无法找回，需要谨慎处理<br>git pull origin master</p></blockquote><h3 id="git-pull-拉取后冲突-2"><a href="#git-pull-拉取后冲突-2" class="headerlink" title="git pull 拉取后冲突 2"></a>git pull 拉取后冲突 2</h3><p>本地代码如果确定修改或者不需要保存的，可以直接回退版本。</p><blockquote><p>git 仓库中复制 SHA<br>git reset –hard 40a9a83</p></blockquote><h3 id="git-branch-–edit-description-描述一个分支的情况"><a href="#git-branch-–edit-description-描述一个分支的情况" class="headerlink" title="git branch –edit-description  描述一个分支的情况"></a>git branch –edit-description <BranchName> 描述一个分支的情况</h3><p>某些情况下，分支可能很多，并且要长时间保存，需要做一个描述记录，则可以用 description 命令</p><blockquote><p>git branch –edit-description <BranchName><br>按下 s，输入内容（注意：前面有#代表着不显示，需要去掉#)<br>按下 esc，输入:wq，则保存完毕<br>查看命令： git config branch.<BranchName>.description</p></blockquote><h3 id="git-修改已经-push-上去的变更"><a href="#git-修改已经-push-上去的变更" class="headerlink" title="git 修改已经 push 上去的变更"></a>git 修改已经 push 上去的变更</h3><h4 id="获取前一次的提交-id（commitID）"><a href="#获取前一次的提交-id（commitID）" class="headerlink" title="获取前一次的提交 id（commitID）"></a>获取前一次的提交 id（commitID）</h4><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">git <span class="hljs-keyword">log</span> <span class="hljs-variable">&lt;filename&gt;</span><br></code></pre></td></tr></table></figure><p>注意： <strong>是上一次的 commitID</strong>，不是最新的 commitID</p><h4 id="reset-已经提交的文件"><a href="#reset-已经提交的文件" class="headerlink" title="reset 已经提交的文件"></a>reset 已经提交的文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git reset <span class="hljs-tag">&lt;<span class="hljs-name">commit</span> <span class="hljs-attr">id</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">filename</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="撤销对此文件的修改"><a href="#撤销对此文件的修改" class="headerlink" title="撤销对此文件的修改"></a>撤销对此文件的修改</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git checkout <span class="hljs-comment">-- &lt;filename&gt;</span><br></code></pre></td></tr></table></figure><h4 id="重新-push"><a href="#重新-push" class="headerlink" title="重新 push"></a>重新 push</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">git <span class="hljs-built_in">add</span> &lt;<span class="hljs-built_in">file</span>&gt;<br>git commit <span class="hljs-comment">--amend</span><br>git push origin &lt;remote branch&gt; <span class="hljs-comment">--force</span><br></code></pre></td></tr></table></figure><p>因为版本回退，导致落后于远程仓库，所以 push 需要添加–force 进行强制覆盖！该命名需要慎重使用</p><h3 id="git-撤销本地的所有变动"><a href="#git-撤销本地的所有变动" class="headerlink" title="git 撤销本地的所有变动"></a>git 撤销本地的所有变动</h3><p>当本地有操作过 merge，回退 commit 等操作时，恢复本地初始状态可以使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">git check .<br></code></pre></td></tr></table></figure><h3 id="git-合并两个本地库"><a href="#git-合并两个本地库" class="headerlink" title="git 合并两个本地库"></a>git 合并两个本地库</h3><p>当你本地复制了一套代码作为初始备份时候，并且没有将.git 文件一起复制的话，当你做完你的新功能，需要 push 上去的时候，就需要做一些额外的操作</p><!-- more --><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">关键词：git pull origin master --allow-unrelated-histories<br></code></pre></td></tr></table></figure></blockquote><h4 id="本地已经初始化仓库"><a href="#本地已经初始化仓库" class="headerlink" title="本地已经初始化仓库"></a>本地已经初始化仓库</h4><p>先将本地的项目初始化为一个 git 仓库，然后再强行合并本地仓库和远程仓库，由于这两个仓库是完全不同的两个仓库，所以直接 pull 都会报错，需要在 pull 的时候假加上–allow-unrelated-histories 才可以 pull 成功。<strong>此方法适用于本地项目已经是一个 git 仓库的情况。</strong></p><ol><li>git init</li><li>git add .</li><li>git commit -m ‘fix’</li><li>git remote add origin <a href="mailto:&#x67;&#x69;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#111;&#x6d;">&#x67;&#x69;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:yuanmingchen/tensorflow_study.git</li><li>git pull origin master –allow-unrelated-histories</li><li>git push -u origin master</li></ol><p>当然，这样你 push 上去，实际上会有很多冲突，解决冲突然后提交就欧克了。</p><p>参考如下：<a href="https://www.cnblogs.com/presleyren/p/11715218.html">将本地已有的一个项目上传到新建的 git 仓库的方法</a></p><h3 id="GitHub-的-SSH-密钥配置"><a href="#GitHub-的-SSH-密钥配置" class="headerlink" title="GitHub 的 SSH 密钥配置"></a>GitHub 的 SSH 密钥配置</h3><!-- more --><h4 id="生成本地电脑的-SSH"><a href="#生成本地电脑的-SSH" class="headerlink" title="生成本地电脑的 SSH"></a>生成本地电脑的 SSH</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">name</span> <span class="hljs-string">&quot;limeng&quot;</span><br>git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">email</span> <span class="hljs-string">&quot;limeng54231@163.com&quot;</span><br>ssh-keygen -t rsa -C limeng54231@<span class="hljs-number">163.</span>com<br></code></pre></td></tr></table></figure><h4 id="找到本地的公钥和私钥"><a href="#找到本地的公钥和私钥" class="headerlink" title="找到本地的公钥和私钥"></a>找到本地的公钥和私钥</h4><blockquote><p>C:\Users\lee.ssh<br>id_rsa.pub 文件通过记事本打开，可复制到粘贴板</p></blockquote><h4 id="添加到-GitHub"><a href="#添加到-GitHub" class="headerlink" title="添加到 GitHub"></a>添加到 GitHub</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Settings</span> -&gt; 左栏点击 <span class="hljs-variable constant_">SSH</span> and <span class="hljs-variable constant_">GPG</span> keys -&gt; 点击 <span class="hljs-title class_">New</span> <span class="hljs-variable constant_">SSH</span> key<br></code></pre></td></tr></table></figure><p>验证是否正常工作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">ssh -T git@github.<span class="hljs-property">com</span><br><span class="hljs-title class_">Hi</span> xxx! <span class="hljs-title class_">You</span><span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not # provide shell access.</span><br></code></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol><li><p>每次电脑生成本地的 SSH，会将之前的公钥替换掉，导致之前在 github 上添加的 SSH key 失效。<br>如果需要管理多个 SSH 和代码仓库的对应关系，需要做以下配置:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.<span class="hljs-property">pub</span>   <span class="hljs-comment">//查看已生成的公钥</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;limeng54231@163.com&#x27;</span> -f ~<span class="hljs-regexp">/.ssh/gi</span>tee_id_rsa <span class="hljs-comment">// gitee_id_rsa 为生成的公钥文件名称</span><br></code></pre></td></tr></table></figure><p>将生成的 SSH 去添加到对应的代码仓库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">touch ~<span class="hljs-regexp">/.ssh/</span>config <span class="hljs-comment">// ssh文件夹下生成一个config文件</span><br></code></pre></td></tr></table></figure><p>打开 config 后，添加以下内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"># gitee<br>  <span class="hljs-title class_">Host</span> gitee.<span class="hljs-property">com</span><br>  <span class="hljs-title class_">HostName</span> gitee.<span class="hljs-property">com</span><br>  <span class="hljs-title class_">PreferredAuthentications</span> publickey<br>  <span class="hljs-title class_">IdentityFile</span> ~<span class="hljs-regexp">/.ssh/gi</span>tee_id_rsa<br>  # github<br>  <span class="hljs-title class_">Host</span> github.<span class="hljs-property">com</span><br>  <span class="hljs-title class_">HostName</span> github.<span class="hljs-property">com</span><br>  <span class="hljs-title class_">PreferredAuthentications</span> publickey<br>  <span class="hljs-title class_">IdentityFile</span> ~<span class="hljs-regexp">/.ssh/i</span>d_rsa<br>  <span class="hljs-comment">//其中Host和HostName填写git服务器的域名，IdentityFile填写私钥的路径。</span><br></code></pre></td></tr></table></figure><p>使用以下命令分别测试 GitHub 和 Gitee，查看 SSH Key 是否添加成功。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">ssh -T git@gitee.<span class="hljs-property">com</span><br>ssh -T git@github.<span class="hljs-property">com</span><br></code></pre></td></tr></table></figure></li><li><p>todo</p></li></ol><h3 id="git-commit-报错"><a href="#git-commit-报错" class="headerlink" title="git commit 报错"></a>git commit 报错</h3><p>如果 gitcommit 提交时，可以输入内容，但是 wq 保存后，报错。</p><p>报错类似于：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// SyntaxError: Unexpected token &#x27;.&#x27;</span><br><span class="hljs-comment">//并且报错的文件是位于node_modules中，则考虑是node版本不正确导致</span><br></code></pre></td></tr></table></figure><p>同时可以看下 npm install 时是否有报错，应该会有推荐 node 版本的提示</p><p>通过 nvm 下载并且安装新的 node 版本</p><ol><li>下载 node<a href="https://nodejs.org/zh-cn/download/releases">地址</a></li><li>把文件夹名称改为 v14.21.3，并且放入 nvm 中(C:\nvm)</li><li>执行 nvm use 14.21.3</li></ol><p>可以正常 git commit 了</p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器使用和配置</title>
    <link href="/2025/09/16/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/09/16/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器使用和配置"><a href="#服务器使用和配置" class="headerlink" title="服务器使用和配置"></a>服务器使用和配置</h1><p>之前已经实现了利用node实现前端代码更新和部署，现在要实现后端代码和部署，因为后端代码不需要打包，所以准备采用WebHook的形式来更新部署，后续还会有更多的功能陆续实现。</p><span id="more"></span><h2 id="服务器后端Node代码自动更新"><a href="#服务器后端Node代码自动更新" class="headerlink" title="服务器后端Node代码自动更新"></a>服务器后端Node代码自动更新</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>只需要本地提交代码git push，就会自动更新服务器上的Node后端代码</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>通过GitHub的WebHook + 宝塔WebHook可以轻松实现上述目标</p><h4 id="1-首先去GitHub添加SSH-Key，使服务器有git-pull的权限"><a href="#1-首先去GitHub添加SSH-Key，使服务器有git-pull的权限" class="headerlink" title="1. 首先去GitHub添加SSH Key，使服务器有git pull的权限"></a>1. 首先去GitHub添加SSH Key，使服务器有git pull的权限</h4><p>我们这里采用的公共SSH Key，如果不想要使用公共SSH Key的形式，可以使用Deploy keys</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1. 切换到 www 用户</span><br>sudo -u www bash<br><span class="hljs-meta prompt_"># </span><span class="language-bash">2. 生成新钥匙（若已有可跳过）</span><br>ssh-keygen -t ed25519 -C &quot;www-webhook&quot; -N &quot;&quot; -f ~/.ssh/id_ed25519<br><span class="hljs-meta prompt_"># </span><span class="language-bash">3. 把公钥加到 GitHub Deploy keys</span><br>cat ~/.ssh/id_ed25519.pub<br></code></pre></td></tr></table></figure><p>在 GitHub → Settings → SSH and GPG keys → New SSH key 里添加这把公钥（个人级别）。</p><h5 id="备选：如果你不想要将所有的仓库都赋予git-pull权限，则需要使用-Deploy-keys-这一步是让服务器有git-pull拉取仓库代码的权限"><a href="#备选：如果你不想要将所有的仓库都赋予git-pull权限，则需要使用-Deploy-keys-这一步是让服务器有git-pull拉取仓库代码的权限" class="headerlink" title="备选：如果你不想要将所有的仓库都赋予git pull权限，则需要使用 Deploy keys(这一步是让服务器有git pull拉取仓库代码的权限)"></a>备选：如果你不想要将所有的仓库都赋予git pull权限，则需要使用 Deploy keys(这一步是让服务器有git pull拉取仓库代码的权限)</h5><blockquote><p>进入对应的仓库，然后在setting里找到Deploy keys菜单，将cat输出的公钥添加到Deploy keys中即可</p></blockquote><blockquote><p>但是这里的key不能重复在其他仓库中添加了，会报错，说这个key已经被使用掉了</p></blockquote><h4 id="2-去服务器中新建文件夹并从GitHub上pull-仓库到服务器上"><a href="#2-去服务器中新建文件夹并从GitHub上pull-仓库到服务器上" class="headerlink" title="2. 去服务器中新建文件夹并从GitHub上pull 仓库到服务器上"></a>2. 去服务器中新建文件夹并从GitHub上pull 仓库到服务器上</h4><ol><li><p>在/www/wwwroot目录下，新建api文件夹</p></li><li><p>在终端中cd /www/wwwroot/api并执行git pull，建立与GitHub的仓库地址链接(其中可能会遇到git账号登录、权限之类的问题，按照正常git配置操作公钥、邮箱即可)</p></li></ol><h4 id="3-去宝塔中添加WebHook"><a href="#3-去宝塔中添加WebHook" class="headerlink" title="3. 去宝塔中添加WebHook"></a>3. 去宝塔中添加WebHook</h4><ol><li>安装“宝塔WebHook”</li><li>打开WebHook，并添加Hook</li></ol><p>名称可以用：node-deploy</p><p>执行脚本如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">cd</span> /www/wwwroot/api<br><span class="hljs-built_in">whoami</span><br>sudo -u www git fetch --depth=1<br>sudo -u www git reset --hard origin/main<br>sudo -u www npm ci --omit=dev<br>sudo -u www pm2 reload app --update-env || \<br>sudo -u www pm2 start server.js --name app --<span class="hljs-built_in">env</span> production --update-env<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----------------------done-----------------------&quot;</span><br></code></pre></td></tr></table></figure><p>这里使用的是www用户，根据AI的说法，使用root用户来执行WebHook是有注入风险的</p><p>以上脚本推荐先由自己手动ssh上服务器操作一次，中间可能会遇到很多提示，需要用户手动配置，比如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[www@VM-4-3-opencloudos api]$ git remote -v<br>fatal: detected dubious ownership in repository at &#x27;/www/wwwroot/api&#x27;<br>To add an exception for this directory, call:<br><br>        git config --global --add safe.directory /www/wwwroot/api<br></code></pre></td></tr></table></figure><p>这里就会有权限问题，需要使用root账号手动操作一次，后续才能正常执行git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">退出 www 用户</span><br>exit<br><span class="hljs-meta prompt_"># </span><span class="language-bash">用刚才能 sudo 的账号执行</span><br>sudo chown -R www:www /www/wwwroot/api<br></code></pre></td></tr></table></figure><p><strong>另一个更新网站的脚本website-deploy.sh</strong>也放在这里参考：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo -u www bash<br>cd /www/wwwroot/main-web-site<br><span class="hljs-meta prompt_"># </span><span class="language-bash">带时间戳的 git pull 进度</span><br>echo &quot;[$(date +&quot;%F %T&quot;)] 正在 git pull ...&quot;<br>git pull origin main 2&gt;&amp;1 | while IFS= read -r line; do<br>  printf &quot;[%s] %s\n&quot; &quot;$(date +&quot;%F %T&quot;)&quot; &quot;$line&quot;<br>done<br>echo &quot;[$(date +&quot;%F %T&quot;)] git pull done&quot;<br>npm ci<br>echo &quot;[$(date +&quot;%F %T&quot;)] npm install done&quot;<br>npm run build<br>echo &quot;[$(date +&quot;%F %T&quot;)] npm run build done&quot;<br>rm -rf /www/wwwroot/www.3dweb.top/*<br>cp -r dist/* /www/wwwroot/www.3dweb.top/<br>echo &quot;[$(date +&quot;%F %T&quot;)] done&quot;<br></code></pre></td></tr></table></figure><ol start="3"><li>宝塔webhook添加成功后，在菜单栏可以看到“查看密钥”选项，可以获取到形如：<a href="https://xx.xxx.xx.253:37874/hook?access_key=xxxxxx&amp;param=aaa的数据">https://xx.xxx.xx.253:37874/hook?access_key=xxxxxx&amp;param=aaa的数据</a></li></ol><h4 id="4-去GitHub中添加WebHook"><a href="#4-去GitHub中添加WebHook" class="headerlink" title="4. 去GitHub中添加WebHook"></a>4. 去GitHub中添加WebHook</h4><ol><li><p>进入GitHub对应仓库</p></li><li><p>左侧有webhook选项，进入配置：1. Payload URL（即上面在宝塔中获取的链接）；2.Content type （选择json即可）；3.SSL verification可以直接选择disabled，然后add webhook即完成</p></li></ol><h2 id="ffmpeg-处理视频功能"><a href="#ffmpeg-处理视频功能" class="headerlink" title="ffmpeg 处理视频功能"></a>ffmpeg 处理视频功能</h2><p>本次是因为更新 ffmpeg 处理视频功能，上传 server 后，引入的 fluent-ffmpeg 没有在 centOS 中安装。需要安装后再启动 node</p><ol><li><p><a href="https://johnvansickle.com/ffmpeg/release-source/">官网下载 linux 版本的 ffmpeg 源码包 ffmpeg-4.1.tar.xz</a></p></li><li><p>使用 xftp 将源码包 ffmpeg-4.1.tar.xz 上传至 linux 主机，解压源码包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">cd /usr/local/<br>mkdir ffmpeg    #在usr/local目录下创建ffmpeg目录<br>cd /usr/local/ffmpeg<br>tar xvJf ffmpeg-<span class="hljs-number">4.1</span>.<span class="hljs-property">tar</span>.<span class="hljs-property">xz</span><br>cd ffmpeg-<span class="hljs-number">4.1</span><br>yum install gcc<br>yum install yasm<br>./configure --enable-shared --prefix=<span class="hljs-regexp">/usr/</span>local/ffmpeg<br>make<br>make install<br></code></pre></td></tr></table></figure></li><li><p>编译完成后，需要修改 path</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">vim / etc / ld.<span class="hljs-property">so</span>.<span class="hljs-property">conf</span>;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">内容如下：<br>include ld.<span class="hljs-property">so</span>.<span class="hljs-property">conf</span>.<span class="hljs-property">d</span><span class="hljs-comment">/*.conf</span><br><span class="hljs-comment">/usr/local/ffmpeg/lib/</span><br></code></pre></td></tr></table></figure><p>输入<strong>ldconfig</strong>使修改生效。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">ldconfig;<br></code></pre></td></tr></table></figure></li><li><p>查看版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JS">/usr/local/ffmpeg/ffmpeg-<span class="hljs-number">4.1</span>/ffmpeg -version<br></code></pre></td></tr></table></figure></li><li><p>配置环境变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JS"># vim /etc/profile<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">内容如下：<br>#set ffmpeg environment<br><span class="hljs-variable constant_">PATH</span>=<span class="hljs-attr">$PATH</span>:<span class="hljs-regexp">/usr/</span>local/ffmpeg/bin<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">PATH</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">source /etc/profile #使配置生效<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">ffmpeg - version;<br></code></pre></td></tr></table></figure><p>最终展示如下：可以在任意地方使用 ffmpeg</p><p><img src="https://img2018.cnblogs.com/blog/1486162/201907/1486162-20190710113208809-336235091.png" alt="img"></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>node</tag>
      
      <tag>server</tag>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AICode工具使用</title>
    <link href="/2025/07/23/AICode%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/07/23/AICode%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="AICode工具使用"><a href="#AICode工具使用" class="headerlink" title="AICode工具使用"></a>AICode工具使用</h2><p>我们有理由相信AI编程最终能够达到一个很高的水平（预计两年之内？），所以，从现在开始就可以时刻关注AI编程的发展，现在需要记录一下使用的AI编程工具。</p><p>目前主要使用记录：Cursor、Copilot、TRAE IDE、Qwen Code、Augment Code</p><span id="more"></span><h3 id="Cursor使用"><a href="#Cursor使用" class="headerlink" title="Cursor使用"></a>Cursor使用</h3><p><a href="https://lenmon54231.github.io/2025/07/08/%E4%BD%BF%E7%94%A8AI%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%9F%E5%BA%94%E8%AF%A5%E6%9C%89%E6%8A%80%E5%B7%A7/">之前的Cursor使用记录</a></p><h3 id="Copilot使用"><a href="#Copilot使用" class="headerlink" title="Copilot使用"></a>Copilot使用</h3><h3 id="TRAE-IDE使用"><a href="#TRAE-IDE使用" class="headerlink" title="TRAE IDE使用"></a>TRAE IDE使用</h3><h3 id="Qwen-Code使用"><a href="#Qwen-Code使用" class="headerlink" title="Qwen Code使用"></a>Qwen Code使用</h3><p><a href="https://qwenlm.github.io/zh/blog/qwen3-coder/">使用步骤</a></p><p>Cline<br>配置 Qwen3-Coder-480B-A35B-instruct 以使用 cline </p><p>‒ 进入 cline 的配置设置 </p><p>‒ 选择“OpenAI Compatible”模式 </p><p>‒ 在 OpenAI Compatible API tokens处，输入从 Dashscope 获取的密钥 </p><p>‒ 勾选“使用自定义基础 URL”，并输入：<a href="https://dashscope.aliyuncs.com/compatible-mode/v1">https://dashscope.aliyuncs.com/compatible-mode/v1</a> </p><p>‒ 输入模型名称：qwen3-coder-plus</p><h4 id="如何从DashScope-获取-API-密钥"><a href="#如何从DashScope-获取-API-密钥" class="headerlink" title="如何从DashScope 获取 API 密钥"></a>如何从DashScope 获取 API 密钥</h4><p>要从 DashScope 获取 API 密钥，请按照以下步骤操作：</p><ol><li>访问 DashScope 平台：<br>打开浏览器，访问 DashScope 官网<br>如果没有账号，需要先注册阿里云账号</li><li>创建和获取 API 密钥：<br>通过控制台获取<br>登录 DashScope 控制台<br>在左侧导航栏找到「API 密钥」或「AccessKey 管理」<br>点击「创建密钥」或「新增 AccessKey」<br>保存生成的 API 密钥</li></ol><h3 id="Augment-Code使用"><a href="#Augment-Code使用" class="headerlink" title="Augment Code使用"></a>Augment Code使用</h3><h3 id="kiro-使用"><a href="#kiro-使用" class="headerlink" title="kiro 使用"></a>kiro 使用</h3><p><a href="https://kiro.dev/">地址</a></p><h3 id="7月份AI编程进入一个爆发期，太多类似的项目出来了，后续稳定了再更新"><a href="#7月份AI编程进入一个爆发期，太多类似的项目出来了，后续稳定了再更新" class="headerlink" title="7月份AI编程进入一个爆发期，太多类似的项目出来了，后续稳定了再更新"></a>7月份AI编程进入一个爆发期，太多类似的项目出来了，后续稳定了再更新</h3>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用AI编辑器也应该有技巧</title>
    <link href="/2025/07/08/%E4%BD%BF%E7%94%A8AI%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%9F%E5%BA%94%E8%AF%A5%E6%9C%89%E6%8A%80%E5%B7%A7/"/>
    <url>/2025/07/08/%E4%BD%BF%E7%94%A8AI%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%9F%E5%BA%94%E8%AF%A5%E6%9C%89%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="使用AI编辑器也应该有技巧"><a href="#使用AI编辑器也应该有技巧" class="headerlink" title="使用AI编辑器也应该有技巧"></a>使用AI编辑器也应该有技巧</h2><p>AI编辑器可以直接根据用户输入的自然语言进行代码生成。</p><p>那么，如何<strong>组织好提示词</strong>或者<strong>使用一些技巧来帮助AI更准确的理解并生成代码</strong>就变得十分重要！</p><p>同时，Cursor作为一个工具，必然有一些<strong>配置或者使用技巧</strong>，我们会跟随Cursor新版本的发布，一起同步更新。</p><p>这里记录一下对AI工具的一些使用技巧，目前主要使用<strong>cursor</strong>。</p><span id="more"></span><h3 id="以下内容主要针对Cursor的使用"><a href="#以下内容主要针对Cursor的使用" class="headerlink" title="以下内容主要针对Cursor的使用"></a>以下内容主要针对Cursor的使用</h3><h3 id="配置rules（给AI指定一个代码规范）"><a href="#配置rules（给AI指定一个代码规范）" class="headerlink" title="配置rules（给AI指定一个代码规范）"></a>配置rules（给AI指定一个代码规范）</h3><p>在项目根目录下新建文件夹/.cursor/rules，里面添加如下文件</p><p><a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/css.mdc">css.mdc</a></p><p><a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/general.mdc">general.mdc</a></p><p><a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/react.mdc">react.mdc</a></p><p><a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/tailwind.mdc">tailwind.mdc</a></p><p><a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/css.mdc">css.mdc</a></p><p><a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/vue.mdc">vue.mdc</a></p><blockquote><p>当我们配置了rules 后，cursor生成的代码则会按照mdc的规则来生成代码。</p></blockquote><blockquote><p>当然实际上测试过程中也会发生不按照规则生成的情况，这种情况可以让他重新根据规则修改。</p></blockquote><p>我们可以在cursor设置》rules中看到规则配置</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/rules.png" alt="rules"></p><h3 id="Cursor的几大模式分别代表着什么？"><a href="#Cursor的几大模式分别代表着什么？" class="headerlink" title="Cursor的几大模式分别代表着什么？"></a>Cursor的几大模式分别代表着什么？</h3><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/ai/%E6%A8%A1%E5%BC%8F.png" alt="模式"></p><h4 id="Ask模式：不只是问答-主要用于搜索方案"><a href="#Ask模式：不只是问答-主要用于搜索方案" class="headerlink" title="Ask模式：不只是问答(主要用于搜索方案)"></a>Ask模式：不只是问答(主要用于搜索方案)</h4><ul><li><p>允许Cursor理解和索引你的整个代码库</p></li><li><p>允许Cursor连接互联网，检索最新的技术信息、文档和解决方案</p></li><li><p>在项目中快速定位特定代码模式，比系统自带的搜索功能更智能</p></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">// 使用Grep功能<br>在项目中找出所有未处理Promise错误的代码段<br></code></pre></td></tr></table></figure><ul><li>允许Cursor在对话中直接引用和分析项目中的特定文件，无需你手动复制内容。</li></ul><h4 id="Manual模式：精准控制（主要用于局部代码修改）"><a href="#Manual模式：精准控制（主要用于局部代码修改）" class="headerlink" title="Manual模式：精准控制（主要用于局部代码修改）"></a>Manual模式：精准控制（主要用于局部代码修改）</h4><ul><li><p>聚焦于代码修改</p></li><li><p>批量修改、重构和Reapply（重新应用之前的修改）。</p></li><li><p>允许你在Manual模式下直接删除文件，这在重构和清理项目时特别有用。</p></li></ul><h4 id="Agent模式：全能开发（整个项目都可以使用Agent模式开发）"><a href="#Agent模式：全能开发（整个项目都可以使用Agent模式开发）" class="headerlink" title="Agent模式：全能开发（整个项目都可以使用Agent模式开发）"></a>Agent模式：全能开发（整个项目都可以使用Agent模式开发）</h4><ul><li><p>Agent模式集成了所有搜索功能（Codebase、Web、Grep、Read File），并能够在任务过程中自主决定何时使用哪种搜索方式</p></li><li><p>Agent模式拥有完整的代码编辑能力，可以创建、修改、重构和删除代码，同时保持代码质量和一致性。</p></li><li><p>Run能力是Agent模式独有的，它允许Cursor执行代码、运行测试、启动服务，并根据结果调整实现。</p></li></ul><h4 id="不同模式组合使用"><a href="#不同模式组合使用" class="headerlink" title="不同模式组合使用"></a>不同模式组合使用</h4><ol><li><p>使用Ask模式+Web功能探索最佳实现方法</p></li><li><p>使用Agent模式规划和执行主要开发工作</p></li><li><p>使用Manual模式+Rules功能进行精细调整</p></li><li><p>使用Agent模式+Run功能进行测试和修复</p></li></ol><h3 id="使用AI编辑器的几个建议"><a href="#使用AI编辑器的几个建议" class="headerlink" title="使用AI编辑器的几个建议"></a>使用AI编辑器的几个建议</h3><h4 id="1-尽量不要自己修改代码，而是让AI去修改"><a href="#1-尽量不要自己修改代码，而是让AI去修改" class="headerlink" title="1. 尽量不要自己修改代码，而是让AI去修改"></a>1. 尽量不要自己修改代码，而是让AI去修改</h4><p>经过测试可以发现，AI是不会每时每刻都关注代码有了哪些变化。</p><p>也就是说有时候，你自己修改了一些代码，比如：将延迟settimeout从500改成了1000，后面AI修改新的需求时又涉及到这部分代码，AI很有可能会将1000的延迟改回500，因为AI还停留在之前的延迟500的需求之上。</p><h4 id="2-将commit的频率增加，方便回退代码"><a href="#2-将commit的频率增加，方便回退代码" class="headerlink" title="2. 将commit的频率增加，方便回退代码"></a>2. 将commit的频率增加，方便回退代码</h4><p>AI有时候会进行大量的代码修改并且产生新的bug，此时你觉得已经无法继续往下生成代码了，想让AI返回到某个版本或者某个功能时。</p><p>AI并不会真的像reset那样返回到某个版本，而是类似重新思考一阵后，再将新思考的代码替换上去。</p><p>也就是说，AI并没有严格的类似git的版本逻辑，而是更像一个人类的操作，凭借自己的记忆或者经验来恢复某些代码。</p><h4 id="3-。。。"><a href="#3-。。。" class="headerlink" title="3. 。。。"></a>3. 。。。</h4><h3 id="AI有时候会头脑混乱，如何去引导AI？"><a href="#AI有时候会头脑混乱，如何去引导AI？" class="headerlink" title="AI有时候会头脑混乱，如何去引导AI？"></a>AI有时候会头脑混乱，如何去引导AI？</h3><h4 id="当你让AI生成某些特定功能时，AI会反复的生成一些之前的错误代码。此时，你的提示词已经无法再引导AI往正确的方向进行操作。"><a href="#当你让AI生成某些特定功能时，AI会反复的生成一些之前的错误代码。此时，你的提示词已经无法再引导AI往正确的方向进行操作。" class="headerlink" title="当你让AI生成某些特定功能时，AI会反复的生成一些之前的错误代码。此时，你的提示词已经无法再引导AI往正确的方向进行操作。"></a>当你让AI生成某些特定功能时，AI会反复的生成一些之前的错误代码。此时，你的提示词已经无法再引导AI往正确的方向进行操作。</h4><p>那么，你可以尝试这么操作：</p><ol><li>让AI新生成一个空白页面；</li><li>给AI提示词，让他把最核心的功能添加进去（保持最少、最小的代码），让其运行成功，并完成你的需求后；</li><li>让AI参考新页面的代码，将正确代码同步到之前的页面中去；</li></ol><p>实际上，不止AI这么操作，如果是我们人类遇到了复杂的需求，无法在复杂的代码中直接找出问题来，我们有时候也采用的这种方式：</p><blockquote><ol><li>新起一个页面只保留基础功能，其他无关功能都去掉；</li><li>然后在基础页面上添加需要的功能，并且进行debug。</li></ol></blockquote><h4 id="AI会根据你的反馈，逐步生成正确代码，但之前的错误代码AI也会记录，这些之前的错误代码有时候也会导致AI思路混乱"><a href="#AI会根据你的反馈，逐步生成正确代码，但之前的错误代码AI也会记录，这些之前的错误代码有时候也会导致AI思路混乱" class="headerlink" title="AI会根据你的反馈，逐步生成正确代码，但之前的错误代码AI也会记录，这些之前的错误代码有时候也会导致AI思路混乱"></a>AI会根据你的反馈，逐步生成正确代码，但之前的错误代码AI也会记录，这些之前的错误代码有时候也会导致AI思路混乱</h4><p>如果你发现AI的后续思路是正确的，但是之前生成的代码是明显有缺陷的。</p><p>这种情况下，之前的代码反而会扰乱AI当前的思路。</p><p>此时，你可以尝试这么做：</p><ol><li>告诉AI：我准备将代码还原到某个版本了，你可以<strong>先记录一下正确的代码生成步骤</strong>，后续我们要重新生成这块的代码；</li><li>然后将本地代码还原到上一个commit版本；</li><li>告诉AI版本已经回退了，<strong>让AI重新按照步骤1、2、3、4去生成代码</strong>，此时，AI的思路就不会受到之前错误代码的干扰，</li></ol><blockquote><p>由此我们可以得到一个结论：<strong>在AI编程的过程中，频繁的将正确代码进行commit是一件非常有必要的事情</strong>，可以方便我们随时回退到上一个正确版本</p></blockquote><h4 id="经常创建新的对话"><a href="#经常创建新的对话" class="headerlink" title="经常创建新的对话"></a>经常创建新的对话</h4><p>当你新的功能跟之前的代码没有任何关系时，最好新开对话，避免之前的上下文对后面的功能开发造成污染。</p><p>当然，现在Cursor也提供了记忆模式，可以通过用户手动输入：”记住……” 类似这种关键词来保留之前的一些逻辑，同时，Cursor自身也会自动的记忆某些重要代码。</p><p>所以，我们生成代码时，更倾向于小范围变动代码，而不是输入一个很大很宽泛的需求。</p><h3 id="有现成代码给AI作参考会是很高效的一种方式"><a href="#有现成代码给AI作参考会是很高效的一种方式" class="headerlink" title="有现成代码给AI作参考会是很高效的一种方式"></a>有现成代码给AI作参考会是很高效的一种方式</h3><p>当你能够找到一份已经实现了功能的代码，你只是需要将其移植过来，并进行一些修改时。</p><p>这种情况下，将两个项目都放入同一个工作区（同一个文件夹下），用AI编辑器打开，AI编辑器就能够读取两个项目的文件。</p><p>你可以让<strong>AI读取某些已完成的功能并进行移植</strong>。</p><p>根据实际的测试，发现AI极其擅长干这种事情，比如： </p><ol><li>已经用vue3+tresjs实现了一个自发光的平面mesh，让AI将其改造成 react 组件；</li><li>分析之前的模型效果，将其效果应用到新的项目模型中来；</li></ol><h3 id="自己debug修复问题后，如何继续跟AI沟通？"><a href="#自己debug修复问题后，如何继续跟AI沟通？" class="headerlink" title="自己debug修复问题后，如何继续跟AI沟通？"></a>自己debug修复问题后，如何继续跟AI沟通？</h3><p>有时候，AI排查问题是很精准的，但是大多数时间AI遇到复杂问题时的debug能力都不够，此时，还是要依靠人工排查bug。</p><p>当你排查出了bug之后，推荐跟AI进行沟通，否则可能会出现AI在后续的迭代中偷偷将代码还原的问题。</p><p>沟通内容可以是：我通过XXX实现了YYY功能，为什么XXX可以实现功能？</p><p>这样，后续AI也可以同步当前你修改的这部分代码。</p><h3 id="Cursor已经提供了MCP的使用配置项，未来MCP会如何发展？"><a href="#Cursor已经提供了MCP的使用配置项，未来MCP会如何发展？" class="headerlink" title="Cursor已经提供了MCP的使用配置项，未来MCP会如何发展？"></a>Cursor已经提供了MCP的使用配置项，未来MCP会如何发展？</h3><p>之前尝试<strong>Cursor + MCP + Blender</strong>，设想可以改变项目中建模和模型设计的工作流。</p><p>实际上，现阶段的Blender所提供的api功能，无法支撑复杂的建模需求，特别是修改模型形状的需求。</p><p>但是，MCP的发展不是一蹴而就的，一开始必然是一些简单、机械、重复的工作被MCP替代。</p><p>在可以预见的未来，我们的工作模式很可能会通过多个Service来完成，</p><p>比如操作Figma，那么就使用Figma Service，生成设计图；</p><p>操作高德地图，那么就使用Tmap Service，生成地图；</p><p>操作Git，那么就使用Git Service，进行版本管理；</p><p>操作CI/CD，那么就使用CI/CD Service，进行服务更新部署；</p>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Blender的基础入门</title>
    <link href="/2025/05/22/Blender%E7%9A%84%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
    <url>/2025/05/22/Blender%E7%9A%84%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="熟悉Blender建模流程"><a href="#熟悉Blender建模流程" class="headerlink" title="熟悉Blender建模流程"></a>熟悉Blender建模流程</h2><p>通过MCP控制Blender建模的前提是：熟悉Blender的建模流程！在此熟悉建模流程的基础上，你才能使用正确的命令提示词让AI帮你去做Blender的命令操作。所以，学习一下Blender是很有必要的事情。</p><span id="more"></span><h3 id="如何生成白模"><a href="#如何生成白模" class="headerlink" title="如何生成白模"></a>如何生成白模</h3><p>布局模式下 》 添加 》 网格 》 立方体，此时会在游标处生成模型（快捷键：shift + A）</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/mesh.png" alt="生成白模"></p><p>游标如图所示</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E6%B8%B8%E6%A0%87.png" alt="游标"></p><p>模型大小配置参数如下：</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E6%A8%A1%E5%9E%8B%E5%A4%A7%E5%B0%8F.png" alt="模型大小"></p><h3 id="如何给白模上色（给白模添加材质、纹理贴图）"><a href="#如何给白模上色（给白模添加材质、纹理贴图）" class="headerlink" title="如何给白模上色（给白模添加材质、纹理贴图）"></a>如何给白模上色（给白模添加材质、纹理贴图）</h3><p>选中需要上色的白模，并切换到编辑模式（快捷键Tab）</p><p>注意：需要在布局模式下，才可以选择和切换到编辑模式</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%88%87%E6%8D%A2%E5%88%B0%E7%BC%96%E8%BE%91%E6%A8%A1%E5%BC%8F.png" alt="编辑模式"></p><p>此时，再切换到uv编辑菜单，就能够看到左侧已经有对应的uv了</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/uv%E7%BC%96%E8%BE%91.png" alt="uv"></p><p>将uv图片导出<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%AF%BC%E5%87%BAUV%E5%9B%BE.png" alt="导出"></p><p>在PS中或者其他软件中，将uv图添加上对应的颜色<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/uv%E5%9B%BE%E4%B8%8A%E8%89%B2.png" alt="加上对应的颜色"></p><p>回到布局菜单栏，将底部左下角的时间线切换为着色编辑器<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E6%96%B0%E5%BB%BA%E6%9D%90%E8%B4%A8.png" alt="着色编辑器"></p><p>添加材质<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E6%96%B0%E5%BB%BA%E6%9D%90%E8%B4%A8.png" alt="添加材质"></p><p>将刚才填充颜色的uv图片拖拽到blender中来，blender会自动加载成图片纹理<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E6%8B%96%E6%8B%BD%E7%BA%B9%E7%90%86%E8%B4%B4%E5%9B%BE.png" alt="加载成图片纹理"></p><p>将图片纹理的颜色圆点连线到BSDF的基础色原点上去<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E9%A2%9C%E8%89%B2%E8%BF%9E%E7%BA%BF.png" alt="连线到BSDF的基础色"></p><p>右上角切换成材质预览模式，此时，柱状图已经添加了图片纹理，显示出了颜色<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%88%87%E6%8D%A2%E6%9D%90%E8%B4%A8%E9%A2%84%E8%A7%88.png" alt="显示出了颜色"></p><p>切换到纹理绘制菜单<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6.png" alt="纹理绘制"></p><p>Blender提供了多种绘制工具，类似笔刷、填充、分割等工具，此时我们试下填充工具<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E9%80%89%E6%8B%A9%E9%A2%9C%E8%89%B2.png" alt="填充工具"></p><p>将其对应位置填充为红色<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%A1%AB%E5%85%85%E9%A2%9C%E8%89%B2.png" alt="填充为红色"></p><p>也可以使用数位板等工具绘制<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E7%AC%94%E5%88%B7%E7%BB%98%E5%88%B6.png" alt="绘制"></p><h3 id="如何导出正确的模型文件"><a href="#如何导出正确的模型文件" class="headerlink" title="如何导出正确的模型文件"></a>如何导出正确的模型文件</h3><p>导出glb模型<br><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%AF%BC%E5%87%BAglb.png" alt="导出glb模型"></p><h3 id="要点记录"><a href="#要点记录" class="headerlink" title="要点记录"></a>要点记录</h3><h4 id="如何配置纹理贴图和UV的比例"><a href="#如何配置纹理贴图和UV的比例" class="headerlink" title="如何配置纹理贴图和UV的比例"></a>如何配置纹理贴图和UV的比例</h4><p>在着色编辑器中，添加映射转化器</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/uv%E5%92%8C%E8%B4%B4%E5%9B%BE%E6%98%A0%E5%B0%84/%E6%98%A0%E5%B0%84.png" alt="映射转化器"></p><p>映射转换器中修改缩放比例</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/uv%E5%92%8C%E8%B4%B4%E5%9B%BE%E6%98%A0%E5%B0%84/%E6%98%A0%E5%B0%84%E6%AF%94%E4%BE%8B.png" alt="修改缩放比例"></p><h4 id="如何导出整个模型和对应的模型纹理贴图"><a href="#如何导出整个模型和对应的模型纹理贴图" class="headerlink" title="如何导出整个模型和对应的模型纹理贴图"></a>如何导出整个模型和对应的模型纹理贴图</h4><p>当场景中添加了多个模型，并将所有模型添对应的纹理贴图后，我们发现此时所有的纹理贴图都是单独的、分散的。但实际上，正常情况下，整个模型的纹理贴图都是类似以下这种样式：</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/bakedDay.jpg" alt="纹理贴图"></p><p>那么，这种纹理贴图是如何生成的呢？</p><p>步骤如下： </p><h5 id="选择模型（不要将灯光等非mesh元素选择进去）"><a href="#选择模型（不要将灯光等非mesh元素选择进去）" class="headerlink" title="选择模型（不要将灯光等非mesh元素选择进去）"></a>选择模型（不要将灯光等非mesh元素选择进去）</h5><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%A6%82%E4%BD%95%E7%83%98%E7%84%99/%E9%80%89%E6%8B%A9mesh.png" alt="选择模型"></p><h5 id="确认模型已经有UV"><a href="#确认模型已经有UV" class="headerlink" title="确认模型已经有UV"></a>确认模型已经有UV</h5><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%A6%82%E4%BD%95%E7%83%98%E7%84%99/%E7%A1%AE%E4%BF%9D%E6%A8%A1%E5%9E%8Buv.png" alt="UV"></p><h5 id="配置烘焙"><a href="#配置烘焙" class="headerlink" title="配置烘焙"></a>配置烘焙</h5><p><strong>注意： Blender中必须要使用Cycles进行烘焙，否则菜单栏不会出现烘焙按钮</strong></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E5%A6%82%E4%BD%95%E7%83%98%E7%84%99/%E7%83%98%E7%84%99%E7%B1%BB%E5%9E%8B.png" alt="烘焙"></p><p>配置好之后，点击烘焙，则底部会出现烘焙进度条，鼠标移动上去，可以查看烘焙所需时间，一般需要烘焙几个小时左右</p><h4 id="灯光篇"><a href="#灯光篇" class="headerlink" title="灯光篇"></a>灯光篇</h4><p>配置真实的灯光</p><p>3600k-温暖的灯光</p><p>5500k-日光</p><p>8000k-阴天灯光</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/blender%E5%85%A5%E9%97%A8/%E7%81%AF%E5%85%89%E7%AF%87/%E6%A8%A1%E6%8B%9F%E7%81%AF%E5%85%89.png" alt="配置真实的灯光"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Blender</tag>
      
      <tag>模型</tag>
      
      <tag>3D</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node、工程化、自动化、脚本（效率工具）</title>
    <link href="/2025/05/20/Node%E3%80%81%E5%B7%A5%E7%A8%8B%E5%8C%96%E3%80%81%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%81%E8%84%9A%E6%9C%AC%EF%BC%88%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7%EF%BC%89/"/>
    <url>/2025/05/20/Node%E3%80%81%E5%B7%A5%E7%A8%8B%E5%8C%96%E3%80%81%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%81%E8%84%9A%E6%9C%AC%EF%BC%88%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="Node、工程化、自动化、脚本（效率工具）"><a href="#Node、工程化、自动化、脚本（效率工具）" class="headerlink" title="Node、工程化、自动化、脚本（效率工具）"></a>Node、工程化、自动化、脚本（效率工具）</h2><p>Node可以操作文件、登录服务器、请求接口、操作数据库等等，Node可以做的事情太多了。</p><p>基于此，可以实现很多工程上的自动化处理、检测、替换、上传、更新、配置等业务。</p><span id="more"></span><h3 id="利用Node脚本生成一个最简单的CI-CD？或许还缺少test步骤"><a href="#利用Node脚本生成一个最简单的CI-CD？或许还缺少test步骤" class="headerlink" title="利用Node脚本生成一个最简单的CI/CD？或许还缺少test步骤"></a>利用Node脚本生成一个最简单的CI/CD？或许还缺少test步骤</h3><p>新配置了一个完全由AI编辑器生成的网站，地址如下：<a href="https://www.3dweb.top/">3dweb</a></p><p>那么我们就有了自动将打包好的dist文件上传到服务器对应文件夹的需求，这个可以通过Node脚本来实现。</p><blockquote><p>或许我们需要一个最简单的CI/CD流程？</p></blockquote><blockquote><p>一个完整的CI/CD应该包括：代码提交，触发自动化构建、测试和部署。</p></blockquote><blockquote><p>现在我们包含了：代码提交、本地build、服务器部署</p></blockquote><p>脚本如下：</p><p>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm run deploy<br></code></pre></td></tr></table></figure><p>package.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vite&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tsc -b &amp;&amp; vite build&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;deploy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npm run push &amp;&amp; npm run build &amp;&amp; node deploy&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;push&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;node d&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>d.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// @ts-nocheck</span><br><span class="hljs-keyword">import</span> shell <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;shelljs&#x27;</span><br><br><span class="hljs-keyword">const</span> runGit = <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> currentTime = <span class="hljs-title class_">String</span>(<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">toLocaleString</span>(<span class="hljs-string">&quot;chinese&quot;</span>, &#123; <span class="hljs-attr">hour12</span>: <span class="hljs-literal">false</span> &#125;)<br>  );<br>  <span class="hljs-keyword">let</span> commitStr = <span class="hljs-string">`git commit -m &quot;<span class="hljs-subst">$&#123;currentTime&#125;</span>&quot;`</span>;<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;git pull&quot;</span>, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git pull完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;git add .&quot;</span>, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git add .完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(commitStr, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git commit完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;git push&quot;</span>);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git操作完成&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;;<br><br><span class="hljs-title function_">runGit</span>();<br></code></pre></td></tr></table></figure><p>deploy.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> fs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;fs&#x27;</span>;<br><span class="hljs-keyword">import</span> ora <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ora&#x27;</span>;<br><span class="hljs-keyword">import</span> path, &#123; dirname &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Client</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ssh2-sftp-client&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; fileURLToPath &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span>;<br><br><span class="hljs-keyword">let</span> spinner = <span class="hljs-literal">null</span>; <span class="hljs-comment">// 加载动画实例</span><br><br><span class="hljs-comment">// 获取当前模块的目录路径</span><br><span class="hljs-keyword">const</span> __dirname = <span class="hljs-title function_">dirname</span>(<span class="hljs-title function_">fileURLToPath</span>(<span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">url</span>));<br><span class="hljs-comment">// 统计目录中的文件总数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">countFiles</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">const</span> files = fs.<span class="hljs-title function_">readdirSync</span>(dir);<br>  files.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">file</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> filePath = path.<span class="hljs-title function_">join</span>(dir, file);<br>    <span class="hljs-keyword">const</span> stats = fs.<span class="hljs-title function_">statSync</span>(filePath);<br>    <span class="hljs-keyword">if</span> (stats.<span class="hljs-title function_">isDirectory</span>()) &#123;<br>      count += <span class="hljs-title function_">countFiles</span>(filePath); <span class="hljs-comment">// 递归统计子目录中的文件</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      count++;<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> count;<br>&#125;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadDist</span>(<span class="hljs-params"></span>) &#123;<br>  spinner = <span class="hljs-title function_">ora</span>(<span class="hljs-string">&#x27;连接到服务器...&#x27;</span>).<span class="hljs-title function_">start</span>();<br><br>  <span class="hljs-keyword">const</span> sftp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Client</span>();<br>  <span class="hljs-keyword">const</span> serverIp = <span class="hljs-string">&#x27;xxx&#x27;</span>; <span class="hljs-comment">// 替换为你的服务器 IP</span><br>  <span class="hljs-keyword">const</span> username = <span class="hljs-string">&#x27;xxx&#x27;</span>; <span class="hljs-comment">// 替换为你的服务器用户名</span><br>  <span class="hljs-keyword">const</span> password = <span class="hljs-string">&#x27;xxx!&#x27;</span>; <span class="hljs-comment">// 替换为你的服务器密码</span><br>  <span class="hljs-keyword">const</span> localPath = path.<span class="hljs-title function_">join</span>(__dirname, <span class="hljs-string">&#x27;dist&#x27;</span>); <span class="hljs-comment">// 本地 dist 文件夹路径</span><br>  <span class="hljs-keyword">const</span> remotePath = <span class="hljs-string">&#x27;/www/wwwroot/xxx&#x27;</span>; <span class="hljs-comment">// 服务器上的目标文件夹路径</span><br><br>  <span class="hljs-keyword">let</span> deployNum = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">const</span> totalNum = <span class="hljs-title function_">countFiles</span>(localPath);<br><br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">await</span> sftp.<span class="hljs-title function_">connect</span>(&#123;<br>      <span class="hljs-attr">host</span>: serverIp,<br>      <span class="hljs-attr">username</span>: username,<br>      <span class="hljs-attr">password</span>: password,<br>    &#125;);<br>    spinner.<span class="hljs-title function_">succeed</span>(<span class="hljs-string">&#x27;云服务器连接成功&#x27;</span>);<br><br>    spinner.<span class="hljs-title function_">start</span>();<br>    spinner.<span class="hljs-property">text</span> = <span class="hljs-string">&#x27;开始上传dist文件夹...&#x27;</span>;<br><br>    <span class="hljs-comment">// 监听 upload 事件</span><br>    sftp.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;upload&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">info</span>) =&gt;</span> &#123;<br>      deployNum++;<br>      spinner.<span class="hljs-property">text</span> = <span class="hljs-string">`上传文件进度: (<span class="hljs-subst">$&#123;deployNum&#125;</span>/<span class="hljs-subst">$&#123;totalNum&#125;</span>)`</span>;<br>    &#125;);<br><br>    <span class="hljs-keyword">await</span> sftp.<span class="hljs-title function_">uploadDir</span>(localPath, remotePath);<br>    spinner.<span class="hljs-title function_">succeed</span>(<span class="hljs-string">&#x27;文件上传完成&#x27;</span>);<br>  &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Error:&#x27;</span>, err);<br>  &#125; <span class="hljs-keyword">finally</span> &#123;<br>    <span class="hljs-keyword">await</span> sftp.<span class="hljs-title function_">end</span>();<br>  &#125;<br>&#125;<br><br><span class="hljs-title function_">uploadDist</span>();<br></code></pre></td></tr></table></figure><h3 id="微信小程序压缩文件并上传到服务器"><a href="#微信小程序压缩文件并上传到服务器" class="headerlink" title="微信小程序压缩文件并上传到服务器"></a>微信小程序压缩文件并上传到服务器</h3><p>微信小程序有一个很常见的需求：将静态文件放到oss或者服务器上，减少微信小程序打包体积。</p><p>这个需求很适合用Node来实现。</p><h4 id="压缩文件"><a href="#压缩文件" class="headerlink" title="压缩文件"></a>压缩文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// index.js</span><br><span class="hljs-keyword">const</span> uploadModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./upload.js&quot;</span>);<br><br><span class="hljs-keyword">const</span> sharp = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;sharp&quot;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>);<br><br><span class="hljs-keyword">const</span> fsp = fs.<span class="hljs-property">promises</span>;<br><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><span class="hljs-comment">// 要压缩的图片文件夹路径</span><br><span class="hljs-keyword">const</span> inputDirectory = <span class="hljs-string">&quot;../server-static&quot;</span>;<br><span class="hljs-comment">// 压缩后的图片存放的文件夹路径</span><br><span class="hljs-keyword">const</span> outputDirectory = <span class="hljs-string">&quot;./output/server-static&quot;</span>;<br><br><span class="hljs-keyword">const</span> filterImageList = [<span class="hljs-string">&quot;png&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;jpeg&quot;</span>];<br><br><span class="hljs-comment">// 递归读取目录中的所有文件</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">processFiles</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-keyword">const</span> entries = <span class="hljs-keyword">await</span> fsp.<span class="hljs-title function_">readdir</span>(dir, &#123; <span class="hljs-attr">withFileTypes</span>: <span class="hljs-literal">true</span> &#125;);<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> entry <span class="hljs-keyword">of</span> entries) &#123;<br>    <span class="hljs-keyword">const</span> res = path.<span class="hljs-title function_">resolve</span>(dir, entry.<span class="hljs-property">name</span>);<br>    <span class="hljs-keyword">if</span> (entry.<span class="hljs-title function_">isDirectory</span>()) &#123;<br>      <span class="hljs-comment">// 如果是目录，则递归调用processFiles</span><br>      <span class="hljs-keyword">await</span> <span class="hljs-title function_">processFiles</span>(res);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (entry.<span class="hljs-title function_">isFile</span>()) &#123;<br>      <span class="hljs-keyword">const</span> inputPath = path.<span class="hljs-title function_">join</span>(<br>        inputDirectory,<br>        path.<span class="hljs-title function_">relative</span>(inputDirectory, res)<br>      );<br><br>      <span class="hljs-comment">// 如果是文件且是图片格式，则进行压缩</span><br>      <span class="hljs-keyword">const</span> outputPath = path.<span class="hljs-title function_">join</span>(<br>        outputDirectory,<br>        path.<span class="hljs-title function_">relative</span>(inputDirectory, res)<br>      );<br>      <span class="hljs-keyword">const</span> outputDir = path.<span class="hljs-title function_">dirname</span>(outputPath);<br><br>      <span class="hljs-comment">// 确保输出目录存在，如果不存在则创建</span><br>      <span class="hljs-keyword">await</span> <span class="hljs-title function_">ensureDir</span>(outputDir);<br><br>      <span class="hljs-keyword">if</span> (filterImageList.<span class="hljs-title function_">includes</span>(entry.<span class="hljs-property">name</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-title function_">pop</span>())) &#123;<br>        <span class="hljs-keyword">await</span> <span class="hljs-title function_">sharp</span>(res)<br>          .<span class="hljs-title function_">toFormat</span>(entry.<span class="hljs-property">name</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-title function_">pop</span>(), &#123; <span class="hljs-attr">quality</span>: <span class="hljs-number">80</span> &#125;) <span class="hljs-comment">// 可以设置你想要的格式和质量，这里以JPEG格式和80%的质量为例</span><br>          .<span class="hljs-title function_">toFile</span>(outputPath)<br>          .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-comment">// console.log(`Image $&#123;entry.name&#125; has been compressed and saved to $&#123;outputPath&#125;`);</span><br>          &#125;)<br>          .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`Error compressing image <span class="hljs-subst">$&#123;entry.name&#125;</span>`</span>, err);<br>          &#125;);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;inputPath&#125;</span>该文件类型无法被压缩，直接复制到对应文件夹下`</span>);<br>        fs.<span class="hljs-title function_">copyFile</span>(res, outputPath, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">if</span> (err) <span class="hljs-keyword">throw</span> err;<br>        &#125;);<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 确保目录存在，如果不存在则创建</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">ensureDir</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">await</span> fsp.<span class="hljs-title function_">access</span>(dir);<br>  &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>    <span class="hljs-keyword">await</span> fsp.<span class="hljs-title function_">mkdir</span>(dir, &#123; <span class="hljs-attr">recursive</span>: <span class="hljs-literal">true</span> &#125;);<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 开始处理文件</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">startProcessing</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`开始执行压缩`</span>);<br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">ensureDir</span>(outputDirectory);<br>    <span class="hljs-keyword">await</span> <span class="hljs-title function_">processFiles</span>(inputDirectory);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`压缩完成`</span>);<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;开始上传&quot;</span>);<br>    <span class="hljs-keyword">await</span> uploadModule.<span class="hljs-title function_">uploadFiles</span>(outputDirectory);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;上传结束&quot;</span>);<br>  &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;An error occurred:&quot;</span>, err);<br>  &#125;<br>&#125;<br><br><span class="hljs-title function_">startProcessing</span>();<br><br></code></pre></td></tr></table></figure><h4 id="上传图片到服务器"><a href="#上传图片到服务器" class="headerlink" title="上传图片到服务器"></a>上传图片到服务器</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// upload.js</span><br><span class="hljs-keyword">const</span> axios = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;axios&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">FormData</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;form-data&quot;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>);<br><br><span class="hljs-keyword">const</span> fsp = fs.<span class="hljs-property">promises</span>;<br><span class="hljs-keyword">const</span> outputDirectory = <span class="hljs-string">&quot;./output/server-static&quot;</span>;<br><br><span class="hljs-comment">// 配置请求参数</span><br><span class="hljs-keyword">const</span> uploadUrl = <span class="hljs-string">&quot;https://www.baidu.com/api/user/upload&quot;</span>;<br><span class="hljs-keyword">let</span> token = <span class="hljs-string">&quot;1&quot;</span>;<br><br><span class="hljs-comment">// 递归读取目录中的所有文件</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">uploadFiles</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-keyword">const</span> entries = <span class="hljs-keyword">await</span> fsp.<span class="hljs-title function_">readdir</span>(dir, &#123; <span class="hljs-attr">withFileTypes</span>: <span class="hljs-literal">true</span> &#125;);<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> entry <span class="hljs-keyword">of</span> entries) &#123;<br>    <span class="hljs-keyword">const</span> fileAbsolutePath = path.<span class="hljs-title function_">resolve</span>(dir, entry.<span class="hljs-property">name</span>);<br>    <span class="hljs-keyword">if</span> (entry.<span class="hljs-title function_">isDirectory</span>()) &#123;<br>      <span class="hljs-comment">// 如果是目录，则递归调用processFiles</span><br>      <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadFiles</span>(fileAbsolutePath);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (entry.<span class="hljs-title function_">isFile</span>()) &#123;<br>      <span class="hljs-comment">// 获取完整的相对路径</span><br>      <span class="hljs-keyword">const</span> fileRelativePath = path.<span class="hljs-title function_">relative</span>(outputDirectory, fileAbsolutePath);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fileRelativePath: &quot;</span>, fileRelativePath);<br>      <span class="hljs-comment">// 获取相对路径文件目录</span><br>      <span class="hljs-keyword">const</span> fileRelativeDirectoryPath = path.<span class="hljs-title function_">dirname</span>(fileRelativePath);<br>      <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">upload</span>(&#123;<br>        fileAbsolutePath,<br>        fileRelativeDirectoryPath,<br>        <span class="hljs-attr">filename</span>: entry.<span class="hljs-property">name</span>,<br>      &#125;);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(fileRelativePath, res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span>, res.<span class="hljs-property">data</span>.<span class="hljs-property">msg</span>);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;-----------------------------&quot;</span>);<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">upload</span>(<span class="hljs-params">&#123;</span><br><span class="hljs-params">  fileAbsolutePath,</span><br><span class="hljs-params">  fileRelativeDirectoryPath,</span><br><span class="hljs-params">  filename,</span><br><span class="hljs-params">&#125;</span>) &#123;<br>  <span class="hljs-comment">// 写入文件和请求参数</span><br>  <span class="hljs-keyword">const</span> formData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FormData</span>();<br>  <span class="hljs-keyword">let</span> imgFile = fs.<span class="hljs-title function_">createReadStream</span>(fileAbsolutePath);<br>  formData.<span class="hljs-title function_">append</span>(<span class="hljs-string">&quot;file&quot;</span>, imgFile, filename);<br>  formData.<span class="hljs-title function_">append</span>(<span class="hljs-string">&quot;path&quot;</span>, fileRelativeDirectoryPath);<br><br>  <span class="hljs-comment">// 配置请求参数</span><br>  <span class="hljs-keyword">const</span> config = &#123;<br>    <span class="hljs-attr">headers</span>: &#123;<br>      ...formData.<span class="hljs-title function_">getHeaders</span>(), <span class="hljs-comment">// 自动从form-data获取正确的Content-Type</span><br>      <span class="hljs-title class_">Authorization</span>: <span class="hljs-string">&quot;Bearer&quot;</span> + <span class="hljs-string">&quot; &quot;</span> + token,<br>      <span class="hljs-string">&quot;X-Requested-With&quot;</span>: <span class="hljs-string">&quot;XMLHttpRequest&quot;</span>,<br>    &#125;,<br>  &#125;;<br><br>  <span class="hljs-comment">// 发起请求</span><br>  <span class="hljs-keyword">return</span> axios.<span class="hljs-title function_">post</span>(uploadUrl, formData, config);<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123; uploadFiles &#125;;<br><br></code></pre></td></tr></table></figure><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><p>package.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;axios&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^1.7.7&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;form-data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^4.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;sharp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.33.5&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Hexo-和-Github-页面实现个人博客"><a href="#Hexo-和-Github-页面实现个人博客" class="headerlink" title="Hexo 和 Github 页面实现个人博客"></a>Hexo 和 Github 页面实现个人博客</h3><p>之前使用 express 和 vue 搭建的博客所使用的云服务器到期，导致个人博客无处安放，用 GitHub 和 Hexo 做个人博客，这下应该就不会再折腾博客了。</p><p><strong>流程如下：</strong></p><h4 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install -g hexo-cli<br>hexo init blog<br>hexo <span class="hljs-keyword">new</span> test_my_site<br>hexo g<br>hexo s<br></code></pre></td></tr></table></figure><p>生成项目的_config.yml 文件中，修改配置如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">deploy</span>:<br>  <span class="hljs-attr">type</span>: git<br>  <span class="hljs-attr">repo</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/lenmon54231/lenmon54231.github.io.git</span><br>  <span class="hljs-attr">branch</span>: master<br><br><span class="hljs-attr">root</span>: /<br></code></pre></td></tr></table></figure><p>最后，配置下 git 提交的插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>以后的新增和修改了文章，就可以通过以下的命令来更新 Hexo 博客：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>经过以上命令，就可以打开 localhost:4000，来本地访问 hexo 博客</p><h4 id="GitHub-配置"><a href="#GitHub-配置" class="headerlink" title="GitHub 配置"></a>GitHub 配置</h4><p>GitHub 需要两个仓库，1、Hexo 博客源码仓库；2、GitHub 的.github.io 仓库</p><ol><li>GitHub 的.github.io 仓库<br>新建一个名为你的用户名.github.io 的仓库，比如说，如果你的 github 用户名是 test，那么你就新建 test.github.io 的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了，是不是很方便？</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">注册的邮箱一定要验证，否则不会成功；<br>仓库名字必须是：username.<span class="hljs-property">github</span>.<span class="hljs-property">io</span>，其中username是你的用户名；<br>仓库创建成功不会立即生效，需要过一段时间，大概<span class="hljs-number">10</span>-<span class="hljs-number">30</span>分钟，或者更久，我的等了半个小时才生效；<br><span class="hljs-attr">deploy</span>:<br>  <span class="hljs-attr">type</span>: git<br>  <span class="hljs-attr">repo</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/lenmon54231/lenmon54231.github.io.git</span><br>  <span class="hljs-attr">branch</span>: master<br></code></pre></td></tr></table></figure><p>2.Hexo 博客源码仓库<br>这个就省略了，就是新建一个普通仓库用来放 Hexo 的源码，后面方便其他电脑的 clone。</p><p>通过 hexo d 来推送数据到 GitHub 的时候，可能会需求添加 SSH Key，参考<a href="https://lenmon54231.github.io/2021/03/21/GitHub%E7%9A%84SSH%E5%AF%86%E9%92%A5%E9%85%8D%E7%BD%AE/">SSH 配置</a></p><h4 id="通过-node-来执行重复操作"><a href="#通过-node-来执行重复操作" class="headerlink" title="通过 node 来执行重复操作"></a>通过 node 来执行重复操作</h4><p>每次修改或者新增文章都会执行以下的操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo clean<br>hexo g<br>hexo d<br>git pull<br>git add .<br>git commit -m <span class="hljs-string">&#x27;xxx&#x27;</span><br>git push<br></code></pre></td></tr></table></figure><p>网上都是用的 GitHub 的 hook 来自动化部署，即：通过 git push 的命令来更新 hexo 博客。但是走到密钥配置这一步，发现有点问题，因为有用公司项目，不清楚如何配置。为了避免和公司项目冲突，采用 node 去代替重复操作。</p><p>通过 shelljs 的库，可以以 Promise 的形式执行 shell，代码很简单，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// @ts-nocheck</span><br><span class="hljs-keyword">const</span> shell = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;shelljs&quot;</span>);<br><span class="hljs-keyword">const</span> program = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;commander&quot;</span>);<br><span class="hljs-comment">// const iconv = require(&quot;iconv-lite&quot;);</span><br><br><span class="hljs-keyword">const</span> runGit = <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> currentTime = <span class="hljs-title class_">String</span>(<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">toLocaleString</span>(<span class="hljs-string">&quot;chinese&quot;</span>, &#123; <span class="hljs-attr">hour12</span>: <span class="hljs-literal">false</span> &#125;)<br>  );<br>  <span class="hljs-keyword">let</span> commitStr = <span class="hljs-string">`git commit -m &quot;<span class="hljs-subst">$&#123;currentTime&#125;</span>&quot;`</span>;<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;git pull&quot;</span>, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git pull完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;git add .&quot;</span>, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git add .完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(commitStr, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git commit完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;git push&quot;</span>);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;git操作完成&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;;<br><br><span class="hljs-keyword">const</span> runHexo = <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// shell.exec(</span><br>  <span class="hljs-comment">//   &quot;ipconfig&quot;,</span><br>  <span class="hljs-comment">//   &#123; silent: true, encoding: &quot;buffer&quot; &#125;,</span><br>  <span class="hljs-comment">//   (err, stdout, stderr) =&gt; &#123;</span><br>  <span class="hljs-comment">//     // @ts-ignore</span><br>  <span class="hljs-comment">//     shell.echo(</span><br>  <span class="hljs-comment">//       &quot;ipconfig ---------------------------&quot;,</span><br>  <span class="hljs-comment">//       // @ts-ignore</span><br>  <span class="hljs-comment">//       iconv.decode(stdout, &quot;cp936&quot;),</span><br>  <span class="hljs-comment">//       &quot;ipconfig ---------------------------&quot;</span><br>  <span class="hljs-comment">//     );</span><br>  <span class="hljs-comment">//   &#125;</span><br>  <span class="hljs-comment">// );</span><br>  <span class="hljs-keyword">if</span> (!shell.<span class="hljs-title function_">which</span>(<span class="hljs-string">&quot;hexo&quot;</span>)) &#123;<br>    <span class="hljs-comment">//在控制台输出内容</span><br>    shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;Sorry, this script requires hexo&quot;</span>);<br>    shell.<span class="hljs-title function_">exit</span>(<span class="hljs-number">1</span>);<br>  &#125;<br>  shell.<span class="hljs-title function_">cd</span>(<span class="hljs-string">&quot;blog&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;hexo clean&quot;</span>, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;hexo clean完成&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;hexo g&quot;</span>, &#123; <span class="hljs-attr">silent</span>: <span class="hljs-literal">true</span> &#125;);<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;hexo g完成&quot;</span>);<br>  <span class="hljs-keyword">if</span> (shell.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;hexo d&quot;</span>).<span class="hljs-property">code</span> !== <span class="hljs-number">0</span>) &#123;<br>    shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;Error: hexo d failed&quot;</span>);<br>    shell.<span class="hljs-title function_">exit</span>(<span class="hljs-number">1</span>);<br>  &#125;<br>  shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;hexo操作完成&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;;<br><br><span class="hljs-keyword">const</span> runNewHexo = <span class="hljs-keyword">function</span> (<span class="hljs-params">newPageHexoWithTitle</span>) &#123;<br>  shell.<span class="hljs-title function_">cd</span>(<span class="hljs-string">&quot;blog&quot;</span>);<br>  shell.<span class="hljs-title function_">exec</span>(newPageHexoWithTitle);<br>&#125;;<br><br><span class="hljs-keyword">const</span> runHexoCI = <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    program<br>      .<span class="hljs-title function_">version</span>(<span class="hljs-string">&quot;0.0.1&quot;</span>) <span class="hljs-comment">//定义版本号</span><br>      .<span class="hljs-title function_">option</span>(<span class="hljs-string">&quot;-g, --gitCI&quot;</span>, <span class="hljs-string">&quot;gitCI&quot;</span>) <span class="hljs-comment">//参数定义</span><br>      .<span class="hljs-title function_">option</span>(<span class="hljs-string">&quot;-h, --hexoCI&quot;</span>, <span class="hljs-string">&quot;hexoCI&quot;</span>)<br>      .<span class="hljs-title function_">option</span>(<span class="hljs-string">&quot;-n, --hexoNewPage&quot;</span>, <span class="hljs-string">&quot;hexoNewPage&quot;</span>)<br>      .<span class="hljs-title function_">parse</span>(process.<span class="hljs-property">argv</span>); <span class="hljs-comment">//解析命令行参数,参数定义完成后才能调用</span><br>    <span class="hljs-keyword">if</span> (program?.<span class="hljs-property">_optionValues</span>?.<span class="hljs-property">gitCI</span>) &#123;<br>      shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;命中git&quot;</span>);<br>      <span class="hljs-title function_">runGit</span>();<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (program?.<span class="hljs-property">_optionValues</span>?.<span class="hljs-property">hexoCI</span>) &#123;<br>      shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;命中hexo&quot;</span>);<br>      <span class="hljs-title function_">runHexo</span>();<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (program?.<span class="hljs-property">_optionValues</span>?.<span class="hljs-property">hexoNewPage</span>) &#123;<br>      shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;命中新建文章页面&quot;</span>);<br>      <span class="hljs-keyword">if</span> (program?.<span class="hljs-property">rawArgs</span>[<span class="hljs-number">3</span>]) &#123;<br>        <span class="hljs-keyword">let</span> newPageHexoWithTitle = <span class="hljs-string">`hexo n &quot;<span class="hljs-subst">$&#123;program?.rawArgs[<span class="hljs-number">3</span>]&#125;</span>&quot;`</span>;<br>        <span class="hljs-title function_">runNewHexo</span>(newPageHexoWithTitle);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;输入最后一个参数，即：文章名称&quot;</span>);<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">await</span> <span class="hljs-title function_">runGit</span>();<br>      <span class="hljs-keyword">await</span> <span class="hljs-title function_">runHexo</span>();<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>    shell.<span class="hljs-title function_">echo</span>(<span class="hljs-string">&quot;CI流程报错!!!!!&quot;</span>, error);<br>  &#125;<br>&#125;;<br><br><span class="hljs-title function_">runHexoCI</span>();<br></code></pre></td></tr></table></figure><h3 id="node-实现自动备份数据库"><a href="#node-实现自动备份数据库" class="headerlink" title="node 实现自动备份数据库"></a>node 实现自动备份数据库</h3><p>在 Mongodb 中我们使用 mongodump 命令来备份 MongoDB 数据。该命令可以导出所有数据到指定目录中。</p><p>mongodump 命令可以通过参数指定导出的数据量级转存的服务器</p><!-- more --><blockquote><p>手动备份比较麻烦并且没有必要。所以找了下自动备份的实现代码</p></blockquote><h4 id="备份命令"><a href="#备份命令" class="headerlink" title="备份命令"></a>备份命令</h4><p>mongodump 命令脚本语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">mongodump -h dbhost -d dbname -o dbdirectory</span><br></code></pre></td></tr></table></figure><p>在 mongodb/bin 目录下，直接备份到当前目录可以简写：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">mongodump</span><br></code></pre></td></tr></table></figure><h4 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h4><p>mongodb 使用 mongorestore 命令来恢复备份的数据。</p><figure class="highlight bnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bnf">&gt;mongorestore -h <span class="hljs-attribute">&lt;hostname&gt;</span><span class="hljs-attribute">&lt;:port&gt;</span> -d dbname <span class="hljs-attribute">&lt;path&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">mongorestore</span><br></code></pre></td></tr></table></figure><h4 id="自动备份"><a href="#自动备份" class="headerlink" title="自动备份"></a>自动备份</h4><ol><li>创建一个定时任务</li><li>调用 cmd</li><li>执行命令后打包</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install node-schedule -S<br>npm install child_process -S<br>npm i fs -S<br>npm i compressing -S<br></code></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> schedule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;node-schedule&quot;</span>); <span class="hljs-comment">//引入定时任务模块</span><br><span class="hljs-keyword">const</span> process = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;child_process&quot;</span>); <span class="hljs-comment">//引入cmd模块</span><br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>); <span class="hljs-comment">//引入fs模块</span><br><span class="hljs-keyword">const</span> compressing = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;compressing&quot;</span>);<br><span class="hljs-comment">//cmd执行内容</span><br><span class="hljs-comment">//数据库地址及端口 如:127.0.0.1:27017</span><br><span class="hljs-comment">//要备份的数据库名称 如:test</span><br><span class="hljs-comment">//备份路径如:C:\\backup</span><br><span class="hljs-comment">// const cmd = &#x27;mongodump -h [数据库地址:端口] -d [要备份的数据库名称] -o [备份路径]&#x27;;</span><br><span class="hljs-keyword">const</span> cdIn = <span class="hljs-string">&quot;cd /www/server/mongodb/bin&quot;</span>;<br><span class="hljs-keyword">const</span> cmd = <span class="hljs-string">&quot;mongodump&quot;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">scheduleCronstyle</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;start....&quot;</span>);<br>  schedule.<span class="hljs-title function_">scheduleJob</span>(<span class="hljs-string">&quot;0 30 5 * * *&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//每周日的23时整</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;scheduleJob....&quot;</span>);<br>    process.<span class="hljs-title function_">exec</span>(cdIn, <span class="hljs-keyword">function</span> (<span class="hljs-params">error, stdout, stderr</span>) &#123;<br>      <span class="hljs-comment">//在cmd中执行上方定义的命令</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;exec....&quot;</span>, cdIn);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;exec....&quot;</span>, cmd);<br>      process.<span class="hljs-title function_">exec</span>(cmd, <span class="hljs-keyword">function</span> (<span class="hljs-params">error, stdout, stderr</span>) &#123;<br>        <span class="hljs-comment">//在cmd中执行上方定义的命令</span><br>        <span class="hljs-keyword">if</span> (error) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Error:&quot;</span> + error); <span class="hljs-comment">//错误</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (stderr.<span class="hljs-property">lenght</span> &gt; <span class="hljs-number">0</span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Stderr:&quot;</span> + stderr.<span class="hljs-title function_">toString</span>()); <span class="hljs-comment">//标准性错误</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-comment">//成功之后写入时间</span><br>          <span class="hljs-keyword">let</span> year = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getFullYear</span>(); <span class="hljs-comment">//获取年</span><br>          <span class="hljs-keyword">let</span> month =<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span> &gt; <span class="hljs-number">9</span><br>              ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span><br>              : <span class="hljs-string">&quot;0&quot;</span> + (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>); <span class="hljs-comment">//获取月</span><br>          <span class="hljs-keyword">let</span> date =<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getDate</span>() &gt; <span class="hljs-number">9</span><br>              ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getDate</span>()<br>              : <span class="hljs-string">&quot;0&quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getDate</span>(); <span class="hljs-comment">//获取日</span><br>          <span class="hljs-keyword">let</span> hour =<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getHours</span>() &gt; <span class="hljs-number">9</span><br>              ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getHours</span>()<br>              : <span class="hljs-string">&quot;0&quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getHours</span>(); <span class="hljs-comment">//获取时</span><br>          <span class="hljs-keyword">let</span> minute =<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getMinutes</span>() &gt; <span class="hljs-number">9</span><br>              ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getMinutes</span>()<br>              : <span class="hljs-string">&quot;0&quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getMinutes</span>(); <span class="hljs-comment">//获取分</span><br>          <span class="hljs-keyword">let</span> seconds =<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getSeconds</span>() &gt; <span class="hljs-number">9</span><br>              ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getSeconds</span>()<br>              : <span class="hljs-string">&quot;0&quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getSeconds</span>(); <span class="hljs-comment">//获取秒</span><br>          <span class="hljs-keyword">let</span> str = <span class="hljs-string">`<span class="hljs-subst">$&#123;year&#125;</span>-<span class="hljs-subst">$&#123;month&#125;</span>-<span class="hljs-subst">$&#123;date&#125;</span> <span class="hljs-subst">$&#123;hour&#125;</span>:<span class="hljs-subst">$&#123;minute&#125;</span>:<span class="hljs-subst">$&#123;seconds&#125;</span> 备份`</span>;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str, <span class="hljs-string">&quot;srt&quot;</span>);<br>          compressing.<span class="hljs-property">zip</span><br>            .<span class="hljs-title function_">compressDir</span>(<span class="hljs-string">&quot;./dump&quot;</span>, <span class="hljs-string">&quot;./&quot;</span> + str + <span class="hljs-string">&quot;.zip&quot;</span>)<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;success&quot;</span>);<br>            &#125;)<br>            .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(err);<br>            &#125;);<br>        &#125;<br>      &#125;);<br>    &#125;);<br>  &#125;);<br>&#125;<br><br><span class="hljs-title function_">scheduleCronstyle</span>();<br></code></pre></td></tr></table></figure><p>将文件放入 node 环境下，执行 node index.js,在规定时间会在当前目录下生成数据库 zip 压缩包</p><h4 id="定时任务-scheduleCronstyle"><a href="#定时任务-scheduleCronstyle" class="headerlink" title="定时任务 scheduleCronstyle"></a>定时任务 scheduleCronstyle</h4><p>传入参数的意思:</p><p>每分钟的第 30 秒触发： ‘30 * * * * *‘</p><p>每小时的 1 分 30 秒触发 ：’30 1 * * * *‘</p><p>每天的凌晨 1 点 1 分 30 触发 ：’30 1 1 * * *‘</p><p>每月的 1 日 1 点 1 分 30 秒触发 ：’30 1 1 1 * *‘</p><p>2016 年的 1 月 1 日 1 点 1 分 30 秒触发 ：’30 1 1 1 2016 *‘</p><p>每周 1 的 1 点 1 分 30 秒触发 ：’30 1 1 * * 1’</p><h3 id="使用-node-上传和下载文件"><a href="#使用-node-上传和下载文件" class="headerlink" title="使用 node 上传和下载文件"></a>使用 node 上传和下载文件</h3><p>前后端分离的情况下，如何上传和下载不同格式的文件，环境：node+vue+elementUI+press</p><!-- more --><blockquote><p>blob = new Blob([res.data], { type: ‘image/png’ });</p><p>​ objectUrl = URL.createObjectURL(blob);</p></blockquote><p><code>Blob</code> 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream"><code>ReadableStream</code></a> 来用于数据操作</p><h4 id="上传前端"><a href="#上传前端" class="headerlink" title="上传前端"></a>上传前端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;el-upload<br>  class=&quot;upload-demo&quot;<br>  :action=&quot;uploadUrl&quot;<br>  :on-success=&quot;uploadSuccess&quot;<br>  :file-list=&quot;fileList&quot;<br>&gt;<br>            &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;<br>          &lt;/el-upload&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">uploadUrl</span>: <span class="hljs-string">&quot;/api/infor&quot;</span>,<br><span class="hljs-title function_">uploadSuccess</span>(<span class="hljs-params">res, file, fileList</span>) &#123;<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> == <span class="hljs-number">200</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fileList</span> = fileList;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">submitForm</span>.<span class="hljs-property">fileName</span> = res.<span class="hljs-property">rows</span>.<span class="hljs-property">originalname</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">submitForm</span>.<span class="hljs-property">IDName</span> = res.<span class="hljs-property">rows</span>.<span class="hljs-property">IDName</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$message</span>.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;上传成功&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> == <span class="hljs-number">999</span>) &#123;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fileList</span> = [];<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$message</span>.<span class="hljs-title function_">error</span>(res.<span class="hljs-property">msg</span>);<br>  &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><ol><li><p>elemengtUI 上传组件，填写 action，当上传成功后，回调函数中记录下文件<strong>”本身名称类型“</strong>和服务器中的<strong>”被更改后的文件名称“</strong></p></li><li><p>file list 接收到赋值，用于回显</p></li></ol><h4 id="上传后端"><a href="#上传后端" class="headerlink" title="上传后端"></a>上传后端</h4><p>安装 multer</p><blockquote><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save multer</span><br></code></pre></td></tr></table></figure></blockquote><p>引入 multer</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> objMulter = <span class="hljs-title function_">multer</span>(&#123; <span class="hljs-attr">dest</span>: <span class="hljs-string">&quot;../static/files&quot;</span> &#125;); <span class="hljs-comment">//指定存放位置</span><br><br>app.<span class="hljs-title function_">use</span>(objMulter.<span class="hljs-title function_">any</span>());<br></code></pre></td></tr></table></figure><p>处理上传来的文件</p><blockquote><p>Multer 会添加一个 <code>body</code> 对象 以及 <code>file</code> 或 <code>files</code> 对象 到 express 的 <code>request</code> 对象中。 <code>body</code> 对象包含表单的文本域信息，<code>file</code> 或 <code>files</code> 对象包含对象表单上传的文件信息。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-comment">//上传的文件</span><br>router.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/api/infor&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;传递来的数据&#x27;</span>)<br>  <span class="hljs-keyword">const</span> newname = req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>].<span class="hljs-property">path</span> + path.<span class="hljs-title function_">parse</span>(req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>].<span class="hljs-property">originalname</span>).<span class="hljs-property">ext</span><br>  <span class="hljs-keyword">let</span> fileName = req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>].<span class="hljs-property">filename</span> + path.<span class="hljs-title function_">parse</span>(req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>].<span class="hljs-property">originalname</span>).<span class="hljs-property">ext</span>;<br>  <span class="hljs-keyword">let</span> info = &#123;<br>    <span class="hljs-attr">originalname</span>: req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>].<span class="hljs-property">originalname</span>,<br>    <span class="hljs-title class_">IDName</span>: fileName<br>  &#125;<br>  fs.<span class="hljs-title function_">rename</span>(req.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>].<span class="hljs-property">path</span>, newname, <span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) &#123;<br>    <span class="hljs-keyword">if</span> (err) &#123;<br>      res.<span class="hljs-title function_">send</span>(&#123; <span class="hljs-attr">code</span>: <span class="hljs-number">999</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;上传失败&#x27;</span> &#125;)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      res.<span class="hljs-title function_">send</span>(&#123; <span class="hljs-attr">code</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;上传成功&#x27;</span>, <span class="hljs-attr">rows</span>: info &#125;)<br>    &#125;<br>  &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><ol><li>调用 fs 的 rename 方法，用来对文件进行重命名，保证文件的唯一性。</li></ol><h4 id="下载前端"><a href="#下载前端" class="headerlink" title="下载前端"></a>下载前端</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; exportInfo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../../static/js/export.js&quot;</span>;<br><br><span class="hljs-title function_">download</span>(<span class="hljs-params">index, row</span>) &#123;<br>      <span class="hljs-keyword">let</span> <span class="hljs-title class_">Tem</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(row));<br>      <span class="hljs-keyword">let</span> infoTem = <span class="hljs-title class_">Tem</span>.<span class="hljs-property">fileName</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>      <span class="hljs-keyword">let</span> nameTem = infoTem.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> a + <span class="hljs-string">&quot;.&quot;</span> + b;<br>      &#125;);<br>      <span class="hljs-keyword">let</span> info = &#123;<br>        <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;POST&quot;</span>,<br>        <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/api/download/&quot;</span> + row.<span class="hljs-property">_id</span>,<br>        <span class="hljs-attr">responseType</span>: <span class="hljs-string">&quot;blob&quot;</span>,<br>        <span class="hljs-attr">type</span>: infoTem[infoTem.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>],<br>        <span class="hljs-attr">name</span>: nameTem,<br>      &#125;;<br>      <span class="hljs-title function_">exportInfo</span>(info)<br>        .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;&#125;)<br>        .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> &#123;&#125;);<br>    &#125;,<br></code></pre></td></tr></table></figure><p>export.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setUrlParam</span>(<span class="hljs-params">data</span>) &#123;<br>  <span class="hljs-keyword">let</span> _str = <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">in</span> data) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isNull</span>(data[i])) &#123;<br>      _str += i + <span class="hljs-string">&quot;=&quot;</span> + <span class="hljs-built_in">encodeURIComponent</span>(data[i]) + <span class="hljs-string">&quot;&amp;&quot;</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;?&quot;</span> + _str.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, _str.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isNull</span>(<span class="hljs-params">e</span>) &#123;<br>  <span class="hljs-comment">// 排除为0 或者其他情况</span><br>  <span class="hljs-keyword">let</span> _ = <span class="hljs-title class_">String</span>(e);<br>  <span class="hljs-keyword">return</span> _ === <span class="hljs-string">&quot;null&quot;</span> || _ === <span class="hljs-string">&quot;NaN&quot;</span> || _ === <span class="hljs-string">&quot;undefined&quot;</span> || _.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">whatType</span>(<span class="hljs-params">type</span>) &#123;<br>  <span class="hljs-comment">//判断传过来的type类型</span><br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">TypeObject</span> = [<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;xlc&quot;</span>, <span class="hljs-string">&quot;xll&quot;</span>, <span class="hljs-string">&quot;xlm&quot;</span>, <span class="hljs-string">&quot;xls&quot;</span>, <span class="hljs-string">&quot;xlw&quot;</span>, <span class="hljs-string">&quot;xlsx&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;excel&quot;</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>, <span class="hljs-string">&quot;gif&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;img&quot;</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;zip&quot;</span>, <span class="hljs-string">&quot;.tar&quot;</span>, <span class="hljs-string">&quot;.gz&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;zip&quot;</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;doc&quot;</span>, <span class="hljs-string">&quot;docx&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;doc&quot;</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;ppt&quot;</span>, <span class="hljs-string">&quot;pptx&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;ppt&quot;</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;tar&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;tar&quot;</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">typeList</span>: [<span class="hljs-string">&quot;gzip&quot;</span>, <span class="hljs-string">&quot;gz&quot;</span>],<br>      <span class="hljs-attr">typeOut</span>: <span class="hljs-string">&quot;gz&quot;</span>,<br>    &#125;,<br>  ];<br>  <span class="hljs-keyword">let</span> currentType = <span class="hljs-literal">null</span>;<br>  <span class="hljs-title class_">TypeObject</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">v</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> currentIndex = v[<span class="hljs-string">&quot;typeList&quot;</span>].<span class="hljs-title function_">findIndex</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> e == type);<br>    <span class="hljs-keyword">if</span> (currentIndex &gt; -<span class="hljs-number">1</span>) &#123;<br>      currentType = v.<span class="hljs-property">typeOut</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> currentType;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">exportInfo</span>(<span class="hljs-params">info</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">axios</span>(&#123;<br>      <span class="hljs-attr">method</span>: info.<span class="hljs-property">method</span>,<br>      <span class="hljs-attr">url</span>: info.<span class="hljs-property">params</span> ? info.<span class="hljs-property">url</span> + <span class="hljs-title function_">setUrlParam</span>(info.<span class="hljs-property">params</span>) : info.<span class="hljs-property">url</span>,<br>      <span class="hljs-attr">data</span>: info.<span class="hljs-property">params</span>,<br>      <span class="hljs-attr">responseType</span>: info.<span class="hljs-property">responseType</span>, <span class="hljs-comment">// 优先尝试 blob</span><br>      <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-title class_">Authorization</span>: sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;token&quot;</span>)<br>          ? <span class="hljs-string">&quot;Bearer &quot;</span> + sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;token&quot;</span>)<br>          : <span class="hljs-string">&quot;&quot;</span>,<br>      &#125;,<br>    &#125;)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(info.<span class="hljs-property">type</span>, <span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>), <span class="hljs-string">&quot;whatType(info.type)&quot;</span>);<br>        <span class="hljs-keyword">let</span> objectUrl = <span class="hljs-literal">null</span>,<br>          blob = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;excel&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/vnd.ms-excel&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;img&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;image/png&quot;</span> &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>          <span class="hljs-comment">// objectUrl = &#x27;data:image/png;base64,&#x27; + btoa(new Uint8Array(res.data).reduce((data, byte) =&gt; data + String.fromCharCode(byte), &#x27;&#x27;));</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;zip&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/zip&quot;</span> &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;doc&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/msword&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;ppt&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/vnd.ms-powerpoint&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;tar&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/x-tar&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">whatType</span>(info.<span class="hljs-property">type</span>) === <span class="hljs-string">&quot;gz&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/x-gzip&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/octet-stream&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(objectUrl, <span class="hljs-string">&quot;下载地址&quot;</span>);<br>        <span class="hljs-keyword">let</span> a = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;a&quot;</span>);<br>        a.<span class="hljs-property">href</span> = objectUrl;<br>        a.<span class="hljs-property">download</span> = info.<span class="hljs-property">name</span>;<br>        <span class="hljs-comment">//a.click();</span><br>        <span class="hljs-comment">//下面这个写法兼容火狐</span><br>        a.<span class="hljs-title function_">dispatchEvent</span>(<br>          <span class="hljs-keyword">new</span> <span class="hljs-title class_">MouseEvent</span>(<span class="hljs-string">&quot;click&quot;</span>, &#123;<br>            <span class="hljs-attr">bubbles</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">cancelable</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">view</span>: <span class="hljs-variable language_">window</span>,<br>          &#125;)<br>        );<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">revokeObjectURL</span>(blob);<br>        <span class="hljs-title function_">resolve</span>(res);<br>      &#125;)<br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;response: &quot;</span>, error);<br>        <span class="hljs-title function_">reject</span>(error);<br>      &#125;);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ol><li><p>下载需要用特定的数据格式接收-blob 和指定的 type</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/x-gzip&quot;</span>,<br>&#125;);<br>objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br></code></pre></td></tr></table></figure></li><li><p>模拟 a 链接的行为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;a&quot;</span>);<br>a.<span class="hljs-property">href</span> = objectUrl;<br>a.<span class="hljs-property">download</span> = info.<span class="hljs-property">name</span>;<br></code></pre></td></tr></table></figure></li></ol><h4 id="下载后端"><a href="#下载后端" class="headerlink" title="下载后端"></a>下载后端</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js">router.<span class="hljs-title function_">post</span>(<span class="hljs-string">&quot;/api/download/:id&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) &#123;<br>  db.<span class="hljs-property">Demo</span>.<span class="hljs-title function_">findOne</span>(&#123; <span class="hljs-attr">_id</span>: req.<span class="hljs-property">params</span>.<span class="hljs-property">id</span> &#125;, <span class="hljs-keyword">function</span> (<span class="hljs-params">err, docs</span>) &#123;<br>    <span class="hljs-keyword">if</span> (err) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(err);<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (docs) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(req.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>, docs.<span class="hljs-property">IDName</span>);<br>      <span class="hljs-keyword">let</span> filePath = <span class="hljs-string">&quot;../static/files/&quot;</span> + docs.<span class="hljs-property">IDName</span>;<br>      <span class="hljs-keyword">let</span> stats = fs.<span class="hljs-title function_">statSync</span>(filePath);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(stats);<br>      <span class="hljs-keyword">if</span> (stats.<span class="hljs-title function_">isFile</span>()) &#123;<br>        res.<span class="hljs-title function_">set</span>(&#123;<br>          <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/octet-stream&quot;</span>,<br>          <span class="hljs-string">&quot;Content-Disposition&quot;</span>: <span class="hljs-string">&quot;attachment; filename=&quot;</span> + docs.<span class="hljs-property">IDName</span>,<br>          <span class="hljs-string">&quot;Content-Length&quot;</span>: stats.<span class="hljs-property">size</span>,<br>        &#125;);<br>        fs.<span class="hljs-title function_">createReadStream</span>(filePath).<span class="hljs-title function_">pipe</span>(res);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        res.<span class="hljs-title function_">end</span>(<span class="hljs-number">404</span>);<br>      &#125;<br>    &#125;<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><ol><li><p>数据库中查找服务器的唯一文件名称。以便拼接出 filePath 文件地址。</p></li><li><p>读取对应地址的文件流，流入到 res 中，返回给前端，前端使用 blob 接收</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">fs.<span class="hljs-title function_">createReadStream</span>(filePath).<span class="hljs-title function_">pipe</span>(res);<br></code></pre></td></tr></table></figure></li></ol><h4 id="部署到云服务器"><a href="#部署到云服务器" class="headerlink" title="部署到云服务器"></a>部署到云服务器</h4><ol><li><p>使用宝塔安装 mongodb，pm2，nginx。</p></li><li><p>nginx 需要配置转发。conf 文件如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs js">user  www www;<br>worker_processes auto;<br>error_log  /www/wwwlogs/nginx_error.<span class="hljs-property">log</span>  crit;<br>pid        /www/server/nginx/logs/nginx.<span class="hljs-property">pid</span>;<br>worker_rlimit_nofile <span class="hljs-number">51200</span>;<br><br>events<br>    &#123;<br>        use epoll;<br>        worker_connections <span class="hljs-number">51200</span>;<br>        multi_accept on;<br>    &#125;<br><br>http<br>&#123;<br>        include       mime.<span class="hljs-property">types</span>;<br>    #include luawaf.<span class="hljs-property">conf</span>;<br><br>    include proxy.<span class="hljs-property">conf</span>;<br><br>        default_type  application/octet-stream;<br><br>        server_names_hash_bucket_size <span class="hljs-number">512</span>;<br>        client_header_buffer_size 32k;<br>        large_client_header_buffers <span class="hljs-number">4</span> 32k;<br>        client_max_body_size 50m;<br><br>        sendfile   on;<br>        tcp_nopush on;<br><br>        keepalive_timeout <span class="hljs-number">60</span>;<br><br>        tcp_nodelay on;<br><br>        fastcgi_connect_timeout <span class="hljs-number">300</span>;<br>        fastcgi_send_timeout <span class="hljs-number">300</span>;<br>        fastcgi_read_timeout <span class="hljs-number">300</span>;<br>        fastcgi_buffer_size 64k;<br>        fastcgi_buffers <span class="hljs-number">4</span> 64k;<br>        fastcgi_busy_buffers_size 128k;<br>        fastcgi_temp_file_write_size 256k;<br>    fastcgi_intercept_errors on;<br><br>        gzip on;<br>        gzip_min_length  1k;<br>        gzip_buffers     <span class="hljs-number">4</span> 16k;<br>        gzip_http_version <span class="hljs-number">1.1</span>;<br>        gzip_comp_level <span class="hljs-number">2</span>;<br>        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;<br>        gzip_vary on;<br>        gzip_proxied   expired no-cache no-store private auth;<br>        gzip_disable   <span class="hljs-string">&quot;MSIE [1-6]\.&quot;</span>;<br><br>        limit_conn_zone $binary_remote_addr zone=<span class="hljs-attr">perip</span>:10m;<br>    limit_conn_zone $server_name zone=<span class="hljs-attr">perserver</span>:10m;<br><br>        server_tokens off;<br>        access_log off;<br><br>server<br>    &#123;<br>        listen <span class="hljs-number">888</span>;<br>        server_name phpmyadmin;<br>        index index.<span class="hljs-property">html</span> index.<span class="hljs-property">htm</span> index.<span class="hljs-property">php</span>;<br>        root  /www/server/phpmyadmin;<br><br>        #error_page   <span class="hljs-number">404</span>   /<span class="hljs-number">404.</span>html;<br>        include enable-php.<span class="hljs-property">conf</span>;<br><br>        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$<br>        &#123;<br>            expires      30d;<br>        &#125;<br><br>        location ~ .*\.(js|css)?$<br>        &#123;<br>            expires      12h;<br>        &#125;<br><br>        location ~ /\.<br>        &#123;<br>            deny all;<br>        &#125;<br><br>        access_log  /www/wwwlogs/access.<span class="hljs-property">log</span>;<br>    &#125;<br><br>server<br>    &#123;<br>        listen <span class="hljs-number">80</span>;<br>        server_name limeng.<span class="hljs-property">website</span>;<br>        index index.<span class="hljs-property">html</span> index.<span class="hljs-property">htm</span> index.<span class="hljs-property">php</span>;<br>        root  /www/server/nginx/html;<br><br>        #error_page   <span class="hljs-number">404</span>   /<span class="hljs-number">404.</span>html;<br>     location / &#123;<br>         try_files $uri /index.<span class="hljs-property">html</span>;<br>     &#125;<br><br>     location /api &#123;<br>         proxy_pass <span class="hljs-attr">http</span>:<span class="hljs-comment">//localhost:8088;</span><br>         proxy_http_version <span class="hljs-number">1.1</span>;<br>         proxy_set_header <span class="hljs-title class_">Upgrade</span> $http_upgrade;<br>         proxy_set_header <span class="hljs-title class_">Connection</span> ‘upgrade’;<br>         proxy_set_header <span class="hljs-title class_">Host</span> $host;<br>         proxy_cache_bypass $http_upgrade;<br>     &#125;<br>     location /images &#123;<br>       root  /<span class="hljs-variable constant_">BLOG</span>/<span class="hljs-keyword">static</span>/files;<br>       autoindex on;<br>     &#125;<br>        access_log  /www/wwwlogs/access.<span class="hljs-property">log</span>;<br>    &#125;<br>include /www/server/panel/vhost/nginx<span class="hljs-comment">/*.conf;</span><br><span class="hljs-comment">&#125;</span><br></code></pre></td></tr></table></figure><p>添加对应 api 的转发，将 api 的请求转发到 <a href="http://localhost:8088，8088">http://localhost:8088，8088</a> 端口即是 之前 mongodb 的 listen 端口。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">location /api &#123;<br>     proxy_pass <span class="hljs-attr">http</span>:<span class="hljs-comment">//localhost:8088;</span><br>     proxy_http_version <span class="hljs-number">1.1</span>;<br>     proxy_set_header <span class="hljs-title class_">Upgrade</span> $http_upgrade;<br>     proxy_set_header <span class="hljs-title class_">Connection</span> ‘upgrade’;<br>     proxy_set_header <span class="hljs-title class_">Host</span> $host;<br>     proxy_cache_bypass $http_upgrade;<br> &#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="node基本操作"><a href="#node基本操作" class="headerlink" title="node基本操作"></a>node基本操作</h4><p>删除文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> fs <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;fs/promises&quot;</span>;<br> <span class="hljs-keyword">await</span> fs.<span class="hljs-title function_">rm</span>(<span class="hljs-string">&#x27;./src/assets/thumb&#x27;</span>, &#123; <span class="hljs-attr">recursive</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">force</span>: <span class="hljs-literal">true</span> &#125;);<br></code></pre></td></tr></table></figure><p>创建目录</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">await</span> fs.<span class="hljs-title function_">mkdir</span>(<span class="hljs-string">&#x27;./src/assets/thumb&#x27;</span>, &#123; <span class="hljs-attr">recursive</span>: <span class="hljs-literal">true</span> &#125;);<br></code></pre></td></tr></table></figure><p>读取所有文件和文件夹</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 读取源目录中的所有文件和文件夹</span><br>  <span class="hljs-keyword">const</span> items = <span class="hljs-keyword">await</span> fs.<span class="hljs-title function_">readdir</span>(<span class="hljs-string">&#x27;./src/assets/thumb&#x27;</span>, &#123; <span class="hljs-attr">withFileTypes</span>: <span class="hljs-literal">true</span> &#125;);<br></code></pre></td></tr></table></figure><p>复制文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;path&quot;</span>;<br><br><span class="hljs-keyword">const</span> newDstPath = path.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;./src/assets/thumb/&quot;</span>, <span class="hljs-string">&#x27;name.jpg&#x27;</span>);<br><span class="hljs-keyword">await</span> fs.<span class="hljs-title function_">copyFile</span>(<span class="hljs-string">`./src/assets/thumb/thumb.jpg`</span>, newDstPath);<br></code></pre></td></tr></table></figure><p>读取文件内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;./src/config/scene-options.js&#x27;</span>, <span class="hljs-string">&quot;utf-8&quot;</span>);<br></code></pre></td></tr></table></figure><p>写内容到目标文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> newContent = <span class="hljs-string">&quot;export &#123; sceneOptionsList &#125;;&quot;</span><br><span class="hljs-keyword">await</span> fs.<span class="hljs-title function_">writeFile</span>(<span class="hljs-string">&#x27;./src/config/scene-options.js&#x27;</span>, newContent, <span class="hljs-string">&quot;utf-8&quot;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>工程化</tag>
      
      <tag>node</tag>
      
      <tag>vite</tag>
      
      <tag>sharp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>本地端MCP Server + Blender生成模型</title>
    <link href="/2025/04/29/%E6%9C%AC%E5%9C%B0%E7%AB%AFMCP-Server-Blender%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B/"/>
    <url>/2025/04/29/%E6%9C%AC%E5%9C%B0%E7%AB%AFMCP-Server-Blender%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="通过自然语言让Blender生成模型"><a href="#通过自然语言让Blender生成模型" class="headerlink" title="通过自然语言让Blender生成模型"></a>通过自然语言让Blender生成模型</h2><p>正常如果我们需要展示一个模型，都需要让建模师进行建模，并导出一个OBJ模型，最终展示到客户端。</p><p>那么，我们有可能通过简单的语言描述就生成一些基础的模型么？甚至当业务需求对模型质量要求不高的情况下，我们可不可以使用自然语言生成的模型来完成整个模型需求，从而直接跳过建模师建模这个步骤！？</p><p>使用MCP+BLender尝试一下！</p><span id="more"></span><h3 id="示例视频"><a href="#示例视频" class="headerlink" title="示例视频"></a>示例视频</h3><p><a href="https://www.youtube.com/watch?v=DqgKuLYUv00&ab_channel=ahujasid">演示Demo</a></p><p><a href="https://www.youtube.com/watch?v=I29rn92gkC4&ab_channel=ahujasid">演示Demo</a></p><p><a href="https://www.youtube.com/watch?v=FDRb03XPiRo&ab_channel=ahujasid">演示Demo</a></p><p><a href="https://www.youtube.com/watch?v=jxbNI5L7AH8&ab_channel=ahujasid">演示Demo</a></p><h3 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h3><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h4><p>需要先安装以下四个模块：</p><blockquote><p>Blender 3.0 或更新版本（<a href="https://www.blender.org/">blender</a>）</p></blockquote><blockquote><p>Claude桌面版（部分地区有限制访问，需要挂全局代理）（<a href="https://claude.ai/download">Claude</a>）或者 Cursor 编辑器（<a href="https://www.cursor.com/cn">Cursor</a>）</p></blockquote><blockquote><p>Python 3.10 或更高版本（<a href="https://www.python.org/downloads/">Python</a>）</p></blockquote><blockquote><p>uv 包管理器（<a href="https://docs.astral.sh/uv/getting-started/installation/?spm=5176.28197581.d_mcp.5.11e95a9eH3z9te">uv安装</a>）</p><p>如果你使用的是 Mac，请将 uv 安装为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&gt;brew install uv<br></code></pre></td></tr></table></figure><p>如果你使用的是 Windows </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&gt;powershell -c <span class="hljs-string">&quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span> <br></code></pre></td></tr></table></figure><p>配置PATH环境变量（这一命令在我的window上略有不同，无妨，命令行会给出提示）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&gt;set <span class="hljs-title class_">Path</span>=<span class="hljs-attr">C</span>:\<span class="hljs-title class_">Users</span>\nntra\.<span class="hljs-property">local</span>\bin;%<span class="hljs-title class_">Path</span>%<br></code></pre></td></tr></table></figure></blockquote><h4 id="配置软件"><a href="#配置软件" class="headerlink" title="配置软件"></a>配置软件</h4><h5 id="配置Claude-当然你也可以选择使用Cursor"><a href="#配置Claude-当然你也可以选择使用Cursor" class="headerlink" title="配置Claude(当然你也可以选择使用Cursor)"></a>配置Claude(当然你也可以选择使用Cursor)</h5><ul><li>转到 Claude &gt; setting &gt; Developer &gt; Edit Config &gt; Claude_desktop_config.json 修改成以下内容：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;mcpServers&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;blender&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;uvx&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;blender-mcp&quot;</span><br>            ]<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>重新启动Claude</p></li><li><p>等待一下，应该有个更新的过程，可以看到搜索框下面有一个小锤子图标即可</p></li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/Claude.png" alt="Claude配置成功"></p><h5 id="配置Cursor-当然你也可以选择使用Claude"><a href="#配置Cursor-当然你也可以选择使用Claude" class="headerlink" title="配置Cursor(当然你也可以选择使用Claude)"></a>配置Cursor(当然你也可以选择使用Claude)</h5><ul><li><p>转到File &gt; Preferences &gt; Cursor Setting &gt; MCP &gt; Add new global MCP server</p></li><li><p>填写如下配置</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;mcpServers&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;blender&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;cmd&quot;</span>,<br>          <span class="hljs-string">&quot;args&quot;</span>: [<br>              <span class="hljs-string">&quot;/c&quot;</span>,<br>              <span class="hljs-string">&quot;uvx&quot;</span>,<br>              <span class="hljs-string">&quot;blender-mcp&quot;</span><br>          ]<br>      &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>保存配置后，生成有blender配置项即可</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/cursor.png" alt="MCP配置"></p><ul><li><p>必要时，重新启动下Cursor</p></li><li><p>Ctrl + L，打开chat窗口，即可对话</p></li></ul><h5 id="配置Blender"><a href="#配置Blender" class="headerlink" title="配置Blender"></a>配置Blender</h5><ul><li><p>下载addon.py配置文件（<a href="https://github.com/ahujasid/blender-mcp/blob/main/addon.py">blender-mcp</a>）</p></li><li><p>打开 Blender</p></li><li><p>前往edit &gt; Preferences &gt; add-ons &gt; install from disk</p></li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/preferences.png" alt="Preferences配置"></p><ul><li><p>单击“install from disk”并选择addon.py文件</p></li><li><p>安装完成后，应该是已经默认勾选了MCP</p></li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/start.png" alt="勾选了MCP"></p><ul><li>回到Blender主界面，右边有个小箭头，打开即可看到MCP工具栏</li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/arrow.png" alt="MCP工具栏"></p><ul><li>开启MCP服务</li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/startBlender.png" alt="开启MCP服务"></p><ul><li>当你需要使用ai生成3d模型时，需要勾选Hyper3D服务；需要使用素材时，需要勾选Poly Haven</li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/sethyper3d.png" alt="开启MCP服务"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="回到Claude界面，输入以下文字："><a href="#回到Claude界面，输入以下文字：" class="headerlink" title="回到Claude界面，输入以下文字："></a>回到Claude界面，输入以下文字：</h4><blockquote><p>create a sphere for me in the center of the scene in Blender</p></blockquote><p>等待Claude执行完成，即可看到Blender在场景中心位置生成了一个球体</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/create.png" alt="生成了一个球体"></p><h4 id="或者使用Cursor"><a href="#或者使用Cursor" class="headerlink" title="或者使用Cursor"></a>或者使用Cursor</h4><p>进入Cursor界面，Ctrl + L 打开chat对话框，输入以下文字：</p><blockquote><p>create a sphere for me in the center of the scene in Blender</p></blockquote><p>需要手动点击，执行tool按钮，等待Cursor执行完成，即可看到Blender在场景中心位置生成了一个球体</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/cursor_chat.png" alt="chat对话"></p><h3 id="探索（待验证）"><a href="#探索（待验证）" class="headerlink" title="探索（待验证）"></a>探索（待验证）</h3><p>根据<a href="https://github.com/ahujasid/blender-mcp">GitHub</a>上的文档，blender-mcp目前提供了如下特性：</p><ul><li>双向通信：通过基于 socket-based 服务器连接 Claude AI 和 Blender</li><li>物体操作：创建、修改和删除 Blender 中的 3D 对象</li><li>材质控制：应用和修改材质与颜色</li><li>场景检查：获取当前 Blender 场景的详细信息</li><li>代码执行：直接从 Claude 在 Blender 中运行 Python 代码</li></ul><p>那么我们可以尝试做以下的探索：</p><h4 id="生成简单几何模型"><a href="#生成简单几何模型" class="headerlink" title="生成简单几何模型"></a>生成简单几何模型</h4><h4 id="给几何模型添加材质、颜色、贴图"><a href="#给几何模型添加材质、颜色、贴图" class="headerlink" title="给几何模型添加材质、颜色、贴图"></a>给几何模型添加材质、颜色、贴图</h4><h4 id="生成常见的简单模型"><a href="#生成常见的简单模型" class="headerlink" title="生成常见的简单模型"></a>生成常见的简单模型</h4><h4 id="生成常见的复杂模型"><a href="#生成常见的复杂模型" class="headerlink" title="生成常见的复杂模型"></a>生成常见的复杂模型</h4><h4 id="通过图片生成模型"><a href="#通过图片生成模型" class="headerlink" title="通过图片生成模型"></a>通过图片生成模型</h4><blockquote><p>目前没有看到本质上的提升。</p></blockquote><blockquote><p>图生模型还是使用的Hyper3D AI生成模型，然后加载到场景中，加载的模型依然无法单独对模型的局部进行修改，也就是说，我们拿到的依旧不是模型的工程文件，而是导出的一整个模型文件。</p></blockquote><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/file.png" alt="模型文件"></p><p>———————–TODO：测试用————–</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/buddha.png" alt="原始图片"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/buddhahead1.png" alt="buddhahead1"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/buddhahead2.png" alt="buddhahead2"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/buddhahead3.png" alt="buddhahead3"></p><p>后脑勺多了诡异的一部分，需要重新设计下提示词</p><hr><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/fianl_1.png" alt="正面效果"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/final_2.png" alt="侧面效果"></p><blockquote><p><strong>这次模型完成度较高</strong></p></blockquote><p>但是模型依旧跟图片差距较大(跟使用Hyper3D的测试key有关?),后续更新</p><h4 id="加载模型并修改模型"><a href="#加载模型并修改模型" class="headerlink" title="加载模型并修改模型"></a>加载模型并修改模型</h4><h4 id="修改部分材质"><a href="#修改部分材质" class="headerlink" title="修改部分材质"></a>修改部分材质</h4><h4 id="修改部分贴图"><a href="#修改部分贴图" class="headerlink" title="修改部分贴图"></a>修改部分贴图</h4><h4 id="设计灯光"><a href="#设计灯光" class="headerlink" title="设计灯光"></a>设计灯光</h4><h4 id="设计shader"><a href="#设计shader" class="headerlink" title="设计shader"></a>设计shader</h4><h4 id="设计运镜"><a href="#设计运镜" class="headerlink" title="设计运镜"></a>设计运镜</h4><h3 id="结论（待续）"><a href="#结论（待续）" class="headerlink" title="结论（待续）"></a>结论（待续）</h3><h3 id="一些MCP上有意思的点"><a href="#一些MCP上有意思的点" class="headerlink" title="一些MCP上有意思的点"></a>一些MCP上有意思的点</h3><h4 id="关于MCP的安全性质疑"><a href="#关于MCP的安全性质疑" class="headerlink" title="关于MCP的安全性质疑"></a>关于MCP的安全性质疑</h4><p>一开始我无法理解MCP会泄露使用者敏感信息或者放大提示注入攻击的可能性，我会想所有的操作不都是“使用者”自身设计好的么？直到我生成模型时做了以下这种操作，才明白MCP理论上可以将电脑上所有数据资源都泄露出去：</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/buddha/safe.png" alt="代码读取本地文件"></p><h3 id="暂停MCP的学习（现阶段MCP-Blender所提供的功能或者叫API太少了，仅能完成某些固定功能，无法执行如：1、绘制曲面；2、将模型某些部分做成单独的mesh；3、将模型的某些部分材质进行替换等功能，那么，我们可以等待后续更新）"><a href="#暂停MCP的学习（现阶段MCP-Blender所提供的功能或者叫API太少了，仅能完成某些固定功能，无法执行如：1、绘制曲面；2、将模型某些部分做成单独的mesh；3、将模型的某些部分材质进行替换等功能，那么，我们可以等待后续更新）" class="headerlink" title="暂停MCP的学习（现阶段MCP+Blender所提供的功能或者叫API太少了，仅能完成某些固定功能，无法执行如：1、绘制曲面；2、将模型某些部分做成单独的mesh；3、将模型的某些部分材质进行替换等功能，那么，我们可以等待后续更新）"></a>暂停MCP的学习（现阶段MCP+Blender所提供的功能或者叫API太少了，仅能完成某些固定功能，无法执行如：1、绘制曲面；2、将模型某些部分做成单独的mesh；3、将模型的某些部分材质进行替换等功能，那么，我们可以等待后续更新）</h3>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>Blender</tag>
      
      <tag>MCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>好用的AI工具</title>
    <link href="/2024/12/26/%E5%A5%BD%E7%94%A8%E7%9A%84AI%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/12/26/%E5%A5%BD%E7%94%A8%E7%9A%84AI%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="好用的AI工具"><a href="#好用的AI工具" class="headerlink" title="好用的AI工具"></a>好用的AI工具</h2><p>记录一些好用的工具，比如专门增强icon清晰度</p><span id="more"></span><h3 id="Waifu2x-Extension-GUI（基于waifu2x的图形化工具）"><a href="#Waifu2x-Extension-GUI（基于waifu2x的图形化工具）" class="headerlink" title="Waifu2x-Extension-GUI（基于waifu2x的图形化工具）"></a>Waifu2x-Extension-GUI（基于waifu2x的图形化工具）</h3><p><a href="https://github.com/AaronFeng753/Waifu2x-Extension-GUI/blob/master/README_CN.md">Waifu2x-Extension-GUI</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用Krpano实现全景图</title>
    <link href="/2024/08/29/%E5%88%A9%E7%94%A8Krpano%E5%AE%9E%E7%8E%B0%E5%85%A8%E6%99%AF%E5%9B%BE/"/>
    <url>/2024/08/29/%E5%88%A9%E7%94%A8Krpano%E5%AE%9E%E7%8E%B0%E5%85%A8%E6%99%AF%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="利用Krpano实现全景图"><a href="#利用Krpano实现全景图" class="headerlink" title="利用Krpano实现全景图"></a>利用Krpano实现全景图</h2><p>Krpano语法非常古老，并且当需求有更新时（比如替换某一张全景图），需要通过Krpano提供的工具重新生成一次vtour文件，之前的代码都会被替换掉，那么，需要一种重新生成xml文件后，不被替换掉的方案，这里使用的是Vue3+Vite。</p><span id="more"></span><h3 id="如何利用Krpano提供的工具生成全景图文件"><a href="#如何利用Krpano提供的工具生成全景图文件" class="headerlink" title="如何利用Krpano提供的工具生成全景图文件"></a>如何利用Krpano提供的工具生成全景图文件</h3><ol><li><p>官网下载Krpano，这里使用的是1.21.2；</p></li><li><p>解压后，打开krpano Tools.exe；</p></li><li><p>在Make VTour选项界面，点击Open images，则可以选择全景图，并生成一个vtour文件夹；</p></li><li><p>通过VTour Editor则可以加载tour.xml来预览全景图效果，并且添加热点这些功能；</p></li></ol><h3 id="上述方法存在的问题"><a href="#上述方法存在的问题" class="headerlink" title="上述方法存在的问题"></a>上述方法存在的问题</h3><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><blockquote><p>当我们有需求变动，比如：替换某一张全景图时，按照上述方法重新生成的vtour文件会是一个全新的文件，之前添加的热点和功能都不会保留，这种情况是无法应对真实的项目的。</p></blockquote><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><blockquote><p>利用Krpano暴露出来的全局对象，结合其提供的call方法，可以通过js的形式调用Krpano内部的功能。</p></blockquote><h3 id="解决上述问题具体步骤"><a href="#解决上述问题具体步骤" class="headerlink" title="解决上述问题具体步骤"></a>解决上述问题具体步骤</h3><h4 id="简单了解Krpano全景图运作逻辑"><a href="#简单了解Krpano全景图运作逻辑" class="headerlink" title="简单了解Krpano全景图运作逻辑"></a>简单了解Krpano全景图运作逻辑</h4><p>Krpano最终生成物是一个vtour文件夹，里面包含如下内容</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lasso">vtour/<br>├── panos/<br>├── tour.html/<br>├── tour.<span class="hljs-built_in">xml</span>/<br>└── tour.js/<br></code></pre></td></tr></table></figure><p>主要核心是tour.html文件。</p><p>里面引入了tour.js，并且调用了embedpano方法加载了tour.xml文件，从而实现html中显示全景图。</p><p>在embedpano方法中，Krpano提供了一个ready的回调函数，函数中暴露了Krpano对象，利用此对象上的call方法，即可通过js来操作Krpano全景图。</p><h3 id="将vtour和Vue3结合起来"><a href="#将vtour和Vue3结合起来" class="headerlink" title="将vtour和Vue3结合起来"></a>将vtour和Vue3结合起来</h3><p>实际上，我们可以利用任何支持js的框架来实现此需求，如：React、Svelte、JQuery，或者，我们也可以直接使用HTML+JS+CSS。</p><p>此处，我们使用Vue3+Vite。</p><p>搭建Vue3+Vite的步骤跳过。</p><ol><li><p>将vtour放入public目录下；</p></li><li><p>修改index.html入口文件；</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- index.html --&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/jpeg&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/panorama.jpg&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>panorama<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/src/main.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vtour/tour.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>此时，在Vue项目中，已经拥有了利用embedpano加载xml全景图的能力。</p><ol start="3"><li>app.vue中调用embedpano；</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;div id=&quot;pano&quot;&gt;&lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup&gt;<br>import &#123; onMounted ,ref&#125; from &quot;vue&quot;;<br><br>onMounted(() =&gt; &#123;<br>  const publicPath = ref(import.meta.env.BASE_URL);<br>  let xml = `$&#123;publicPath.value&#125;vtour/tour.xml`;<br>  embedpano(&#123;<br>    xml: xml,<br>    target: &quot;pano&quot;,<br>    html5: &quot;auto&quot;,<br>    mobilescale: 1.0,<br>    onready: krpanoOnReady,<br>  &#125;);<br>&#125;);<br><br>let krpano = ref(null);<br>const krpanoOnReady = (kr) =&gt; &#123;<br>  krpano.value = kr;<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>krpano对象即是Krpano的全局对象，可以操作整个全景图功能。</p><h4 id="krpano对象有哪些方法？"><a href="#krpano对象有哪些方法？" class="headerlink" title="krpano对象有哪些方法？"></a>krpano对象有哪些方法？</h4><ul><li>获取 hotspot 对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">hotspot</span>.<span class="hljs-title function_">getItem</span>(name);<br></code></pre></td></tr></table></figure><ul><li>设置 hotspot 对象属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot1.ath&quot;</span>, h);<br></code></pre></td></tr></table></figure><ul><li>移除所有 hotspot 对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">call</span>(<span class="hljs-string">&quot;loop(hotspot.count GT 0, removehotspot(0) );&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>获取所有同类型 layer 对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span><br>  .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;layer&quot;</span>)<br>  .<span class="hljs-title function_">getArray</span>()<br>  .<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e, <span class="hljs-string">&quot;----&quot;</span>);<br>  &#125;);<br>krpano.<span class="hljs-property">value</span><br>  .<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;hotspot&quot;</span>)<br>  .<span class="hljs-title function_">getArray</span>()<br>  .<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e, <span class="hljs-string">&quot;----&quot;</span>);<br>  &#125;);<br></code></pre></td></tr></table></figure><ul><li>场景跳转</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> xmlname = <span class="hljs-string">&quot;scene_2-1&quot;</span>;<br>krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">call</span>(<span class="hljs-string">&quot;loadscene(&quot;</span> + xmlname + <span class="hljs-string">&quot;, null, MERGE, BLEND(0.5));&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>旋转镜头(随机方向)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-title function_">call</span>(<br>  <span class="hljs-string">&quot;lookto(&quot;</span> +<br>    (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">360.0</span> - <span class="hljs-number">180.0</span>) +<br>    <span class="hljs-string">&quot;,&quot;</span> +<br>    (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">180.0</span> - <span class="hljs-number">90.0</span>) +<br>    <span class="hljs-string">&quot;,&quot;</span> +<br>    (<span class="hljs-number">80.0</span> + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">100.0</span>) +<br>    <span class="hljs-string">&quot;)&quot;</span><br>);<br></code></pre></td></tr></table></figure><ul><li>获取当前 view 的数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> hlookat = krpano.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;view.hlookat&quot;</span>);<br><span class="hljs-keyword">var</span> vlookat = krpano.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;view.vlookat&quot;</span>);<br><span class="hljs-keyword">var</span> fov = krpano.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;view.fov&quot;</span>);<br><span class="hljs-keyword">var</span> distortion = krpano.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;view.distortion&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>移除所有热点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">call</span>(<span class="hljs-string">&quot;loop(hotspot.count GT 0, removehotspot(0) );&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>通过名称获取热点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> scene = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;scene[get(xml.scene)]&quot;</span>);<br><span class="hljs-keyword">let</span> selfSpotName = <span class="hljs-string">&quot;door&quot;</span>; <span class="hljs-comment">// sceneOptionsList中的hotspot的name</span><br><span class="hljs-keyword">let</span> hotspotName = <span class="hljs-string">`hotspot[<span class="hljs-subst">$&#123;scene.name&#125;</span>_<span class="hljs-subst">$&#123;selfSpotName&#125;</span>]`</span>;<br><span class="hljs-keyword">let</span> hotpot = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">get</span>(hotspotName);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hotpot: &quot;</span>, hotpot);<br></code></pre></td></tr></table></figure><ul><li>绑定跳转场景事件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + option.<span class="hljs-property">name</span> + <span class="hljs-string">&quot;].onclick&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>     krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">call</span>(<br>       <span class="hljs-string">&quot;loadscene(&quot;</span> +<br>         option.<span class="hljs-property">eventOptions</span>.<span class="hljs-property">sceneName</span> +<br>         <span class="hljs-string">&quot;, null, MERGE, BLEND(0.5));&quot;</span><br>     );<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>添加热点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">call</span>(<span class="hljs-string">&quot;addhotspot(&quot;</span> + option.<span class="hljs-property">name</span> + <span class="hljs-string">&quot;)&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>设置热点样式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + option.<span class="hljs-property">name</span> + <span class="hljs-string">&quot;].url&quot;</span>, option.<span class="hljs-property">url</span>);<br>krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + option.<span class="hljs-property">name</span> + <span class="hljs-string">&quot;].ath&quot;</span>, option.<span class="hljs-property">ath</span>);<br>krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + option.<span class="hljs-property">name</span> + <span class="hljs-string">&quot;].atv&quot;</span>, option.<span class="hljs-property">atv</span>);<br><span class="hljs-comment">// krpano.value.set(&quot;hotspot[&quot; + option.name + &quot;].distorted&quot;,true); //设置热点是否跟随场景进行3D扭曲</span><br></code></pre></td></tr></table></figure><ul><li>实现拖拽热点功能</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs js">krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].ondown&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">hs</span>)&#123;<br>  <span class="hljs-title function_">updateHotPotPosition</span>(hs_name);<br>&#125;);<br>krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].onup&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">hs</span>) &#123;<br>  <span class="hljs-title function_">clearUpdateHotPotPosition</span>();<br>&#125;);<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">updateHotSpotInfo</span> = (<span class="hljs-params">hs_name, event, eventOptions</span>) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> h = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;view.hlookat&quot;</span>);<br>  <span class="hljs-keyword">let</span> v = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;view.vlookat&quot;</span>);<br>  krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<br>    <span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].url&quot;</span>,<br>    event === <span class="hljs-string">&quot;loadscene&quot;</span> ? <span class="hljs-string">&quot;/arrow.png&quot;</span> : <span class="hljs-string">&quot;/modal.png&quot;</span><br>  );<br>  krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].ath&quot;</span>, h);<br>  krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].atv&quot;</span>, v);<br>  <span class="hljs-comment">// krpano.value.set(&quot;hotspot[&quot; + hs_name + &quot;].distorted&quot;, true); //设置热点是否跟随场景进行3D扭曲</span><br>  krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].self_event&quot;</span>, event);<br>  krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<br>    <span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].self_event_options&quot;</span>,<br>    <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(eventOptions)<br>  );<br>&#125;;<br><br><span class="hljs-comment">// 实现拖拽热点功能</span><br><span class="hljs-keyword">let</span> timer = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> ath = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">let</span> atv = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">updateHotPotPosition</span> = (<span class="hljs-params">hs_name</span>) =&gt; &#123;<br>  timer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">var</span> mx = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;mouse.x&quot;</span>);<br>    <span class="hljs-keyword">var</span> my = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;mouse.y&quot;</span>);<br>    <span class="hljs-keyword">var</span> pnt = krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">screentosphere</span>(mx, my);<br>    <span class="hljs-keyword">var</span> h = pnt.<span class="hljs-property">x</span>;<br>    <span class="hljs-keyword">var</span> v = pnt.<span class="hljs-property">y</span>;<br>    krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].ath&quot;</span>, h);<br>    krpano.<span class="hljs-property">value</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&quot;hotspot[&quot;</span> + hs_name + <span class="hljs-string">&quot;].atv&quot;</span>, v);<br>    ath.<span class="hljs-property">value</span> = h;<br>    atv.<span class="hljs-property">value</span> = v;<br>  &#125;, <span class="hljs-number">60</span>);<br>&#125;;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">clearUpdateHotPotPosition</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-built_in">clearInterval</span>(timer);<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vite</tag>
      
      <tag>vue3</tag>
      
      <tag>kapano</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3上奇奇怪怪的点</title>
    <link href="/2024/07/05/Vue3%E4%B8%8A%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E7%82%B9/"/>
    <url>/2024/07/05/Vue3%E4%B8%8A%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h2 id="Vue3上奇奇怪怪的点"><a href="#Vue3上奇奇怪怪的点" class="headerlink" title="Vue3上奇奇怪怪的点"></a>Vue3上奇奇怪怪的点</h2><p>Vue3新增了组合式api，所以可以实现很多Vue2无法实现的逻辑，同时，也新增了很多新的写法</p><span id="more"></span><h3 id="通过watch鉴定对象，为什么回调中获取的新值和旧值是相同的？"><a href="#通过watch鉴定对象，为什么回调中获取的新值和旧值是相同的？" class="headerlink" title="通过watch鉴定对象，为什么回调中获取的新值和旧值是相同的？"></a>通过watch鉴定对象，为什么回调中获取的新值和旧值是相同的？</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> searchForm = <span class="hljs-title function_">ref</span>(&#123;<br>  <span class="hljs-attr">key</span>:<span class="hljs-string">&#x27;&#x27;</span><br>&#125;)<br><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> searchForm.<span class="hljs-property">value</span>,<br>  <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;oldValue: &quot;</span>, oldValue);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;newValue: &quot;</span>, newValue);<br>  &#125;,<br>  &#123; <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span> &#125;<br>);<br></code></pre></td></tr></table></figure><p>此写法，第二次获取值时，newValue和oldValue会是同样的值</p><p>如果需要根据old和new的值来做业务逻辑，有两种写法:</p><ol><li>改成监听对象的某个值</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> searchForm = <span class="hljs-title function_">ref</span>(&#123;<br>  <span class="hljs-attr">key</span>:<span class="hljs-string">&#x27;&#x27;</span><br>&#125;)<br><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> searchForm.<span class="hljs-property">value</span>.<span class="hljs-property">key</span>,<br>  <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;oldValue: &quot;</span>, oldValue);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;newValue: &quot;</span>, newValue);<br>  &#125;,<br> );<br></code></pre></td></tr></table></figure><ol start="2"><li>改成结构的形式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> searchForm = <span class="hljs-title function_">ref</span>(&#123;<br>  <span class="hljs-attr">key</span>:<span class="hljs-string">&#x27;&#x27;</span><br>&#125;)<br><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;...searchForm.<span class="hljs-property">value</span>&#125;<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;oldValue: &quot;</span>, oldValue);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;newValue: &quot;</span>, newValue);<br>  &#125;,<br> ),<br> &#123;<span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vue3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diff原理及示例</title>
    <link href="/2024/04/21/Diff%E5%8E%9F%E7%90%86%E5%8F%8A%E7%A4%BA%E4%BE%8B/"/>
    <url>/2024/04/21/Diff%E5%8E%9F%E7%90%86%E5%8F%8A%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="Diff-原理及示例"><a href="#Diff-原理及示例" class="headerlink" title="Diff 原理及示例"></a>Diff 原理及示例</h2><span id="more"></span><h3 id="b-站讲解"><a href="#b-站讲解" class="headerlink" title="b 站讲解"></a>b 站讲解</h3><p><a href="https://www.bilibili.com/video/BV1QL4y1u7Nd?p=1">B 站 Diff 解析</a><br><a href="https://github.com/bubucuo/vdom">GitHub 源码</a></p><h3 id="Diff-主要是用来干啥的？"><a href="#Diff-主要是用来干啥的？" class="headerlink" title="Diff 主要是用来干啥的？"></a>Diff 主要是用来干啥的？</h3><p>Dom 树的更新会消耗大量的资源，如果可以将之前已经渲染好的 Dom 避免更新，直接复用的话，可以节省大量的资源。如何才能知道哪些 Dom 可以复用呢？以及怎么复用速度更快，更节约性能呢？</p><p>Vue 和 React 都是通过自己的 Diff 算法实现的，通过算法去判断新、老 Dom 树差异并实现部分 Dom 更新。<br>下面可以看到一个简化版的 Diff 原理。</p><h4 id="示例-Dom-树"><a href="#示例-Dom-树" class="headerlink" title="示例 Dom 树"></a>示例 Dom 树</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;f&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;g&quot;</span> &#125;],<br>newDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d1&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;h&quot;</span> &#125;,&#123;<span class="hljs-attr">key</span>: <span class="hljs-string">&quot;f&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;g&quot;</span> &#125;],<br></code></pre></td></tr></table></figure><p>约定对 Dom 的标记（仅仅是标记，而不是涉及到操作，如：append、insert、removeChildren）如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// mountElement 元素需要新增 h</span><br><span class="hljs-comment">// patch  元素可以复用 a b c d e f g</span><br><span class="hljs-comment">// unmount 元素删除</span><br><span class="hljs-comment">// move 元素需要移动</span><br></code></pre></td></tr></table></figure><p>以上示例可以看出，新老数组的开头和结尾两个 Dom 都是拥有一样的 key，即可以直接复用，这也符合正常的业务情况。<br>比如：一般页面上 header、footer 等都是固定结构，都是可以直接复用（patch），很少会改变。<br>所以，第一步就是 去掉头尾两边直接可以复用的部分 dom</p><h4 id="从左往右和从右往左查找"><a href="#从左往右和从右往左查找" class="headerlink" title="从左往右和从右往左查找"></a>从左往右和从右往左查找</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isSameVnodeType</span>(<span class="hljs-params">n1, n2</span>) &#123;<br>  <span class="hljs-keyword">return</span> n1.<span class="hljs-property">key</span> === n2.<span class="hljs-property">key</span>; <span class="hljs-comment">// &amp;&amp; n1.type === n2.type;</span><br>&#125;<br><br><span class="hljs-keyword">let</span> l1 = c1.<span class="hljs-property">length</span>;<br><span class="hljs-keyword">let</span> l2 = c2.<span class="hljs-property">length</span>;<br><span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> e1 = l1 - <span class="hljs-number">1</span>; <span class="hljs-comment">// 老元素的下标</span><br><span class="hljs-keyword">let</span> e2 = l2 - <span class="hljs-number">1</span>; <span class="hljs-comment">// 新元素的下标</span><br><br><span class="hljs-comment">// *1 从左边往右，如果元素可以复用就继续往右边，否则就停止循环</span><br><span class="hljs-keyword">while</span> (i &lt;= e1 &amp;&amp; i &lt;= e2) &#123;<br>  <span class="hljs-keyword">const</span> n1 = c1[i];<br>  <span class="hljs-keyword">const</span> n2 = c2[i];<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isSameVnodeType</span>(n1, n2)) &#123;<br>    <span class="hljs-title function_">patch</span>(n1.<span class="hljs-property">key</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">break</span>;<br>  &#125;<br>  i++;<br>&#125;<br><br><span class="hljs-comment">// *2 从右边往左，如果元素可以复用就继续往左边，否则就停止循环</span><br><span class="hljs-keyword">while</span> (i &lt;= e1 &amp;&amp; i &lt;= e2) &#123;<br>  <span class="hljs-keyword">const</span> n1 = c1[e1];<br>  <span class="hljs-keyword">const</span> n2 = c2[e2];<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isSameVnodeType</span>(n1, n2)) &#123;<br>    <span class="hljs-title function_">patch</span>(n1.<span class="hljs-property">key</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">break</span>;<br>  &#125;<br>  e1--;<br>  e2--;<br>&#125;<br></code></pre></td></tr></table></figure><p>通过这一步操作，我们将头尾部分 Dom 给复用 了。<br>并且更新了 i,e1,e2 的数值，这几个序号很重要，可以让我们获取到 除开头尾可复用 Dom 外的中间部分 Dom 数组，即：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">[i,i+<span class="hljs-number">1</span>,....,e1-<span class="hljs-number">1</span>,e1] <span class="hljs-comment">//老Dom数组未知部分</span><br>[i,i+<span class="hljs-number">1</span>,....,e2-<span class="hljs-number">1</span>,e2] <span class="hljs-comment">//新Dom数组未知部分</span><br>[ &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;]<br>[ &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d1&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;h&quot;</span> &#125;]<br></code></pre></td></tr></table></figure><blockquote><p>此时，i=2,e1=4,e2=6</p></blockquote><h4 id="中间未知部分的判断"><a href="#中间未知部分的判断" class="headerlink" title="中间未知部分的判断"></a>中间未知部分的判断</h4><h5 id="第一种：老节点遍历完成了，新节点还没有遍历完成（新增-Dom）"><a href="#第一种：老节点遍历完成了，新节点还没有遍历完成（新增-Dom）" class="headerlink" title="第一种：老节点遍历完成了，新节点还没有遍历完成（新增 Dom）"></a>第一种：老节点遍历完成了，新节点还没有遍历完成（新增 Dom）</h5><p>说明新节点有多出来的 Dom，即：新增 Dom</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (i &gt; e1) &#123;<br>  <span class="hljs-keyword">if</span> (i &lt;= e2) &#123;<br>    <span class="hljs-keyword">while</span> (i &lt;= e2) &#123;<br>      <span class="hljs-keyword">const</span> n2 = c2[i];<br>      <span class="hljs-title function_">mountElement</span>(n2.<span class="hljs-property">key</span>);<br>      i++;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>什么情况下才能 i&gt;e1 并且 i&lt; =e2，举个例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,],<br>newDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;d&#x27;</span>&#125;],<br></code></pre></td></tr></table></figure><p>此时，i=2, e1=1,e2 = 3</p><p><strong>只有这种情况下</strong>，才会符合 i&gt;e1 并且 i&lt; =e2!</p><blockquote><p>只有这一种情况么？WHY?</p></blockquote><ul><li><p>如果前后有可复用的元素，那么之前的代码控制了 i 一定 小于等于 e1 并且 i 小于等于 e2</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// *1 从左边往右，如果元素可以复用就继续往右边，否则就停止循环</span><br><span class="hljs-keyword">while</span> (i &lt;= e1 &amp;&amp; i &lt;= e2) &#123;<br>  i++;<br>&#125;<br><span class="hljs-comment">// *2 从右边往左，如果元素可以复用就继续往左边，否则就停止循环</span><br><span class="hljs-keyword">while</span> (i &lt;= e1 &amp;&amp; i &lt;= e2) &#123;<br>  e1--;<br>  e2--;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>如果没有可复用元素：<strong>i 一定是 0</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,],<br>newDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;f&#x27;</span>&#125;],<br></code></pre></td></tr></table></figure><p>此时，i=0, e1=1,e2 = 3 (<strong>不符合</strong>)</p></li><li><p>如果只有前面有可复用元素：<strong>i 一定等于 e1</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;],<br>newDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;f&#x27;</span>&#125;],<br></code></pre></td></tr></table></figure><p>此时，i=2, e1=2,e2 = 3 (<strong>不符合</strong>)</p></li><li><p>如果只有后面有可复用元素：<strong>i 一定是 0</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;],<br>newDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;f&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;c&#x27;</span>&#125;],<br></code></pre></td></tr></table></figure><p>此时，i=0, e1=1,e2 = 2 (<strong>不符合</strong>)</p></li></ul><h5 id="第二种：新节点遍历完了，老节点还没有遍历完成（删除-Dom）"><a href="#第二种：新节点遍历完了，老节点还没有遍历完成（删除-Dom）" class="headerlink" title="第二种：新节点遍历完了，老节点还没有遍历完成（删除 Dom）"></a>第二种：新节点遍历完了，老节点还没有遍历完成（删除 Dom）</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (i &gt; e2) &#123;<br>  <span class="hljs-keyword">if</span> (i &lt;= e1) &#123;<br>    <span class="hljs-keyword">while</span> (i &lt;= e1) &#123;<br>      <span class="hljs-keyword">const</span> n1 = c1[i];<br>      <span class="hljs-title function_">unmount</span>(n1.<span class="hljs-property">key</span>);<br>      i++;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>同理：什么情况下才能 i&gt;e2 并且 i&lt; =e1，举个例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;d&#x27;</span>&#125;],<br>newDomArray =  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;],<br></code></pre></td></tr></table></figure><p>此时，i=2, e1=3,e2 = 1</p><p><strong>只有这种情况下</strong>，才会符合 i&gt;e2 并且 i&lt; =e1!</p><h5 id="新老节点都有，并且乱序-重点并且复杂的部分"><a href="#新老节点都有，并且乱序-重点并且复杂的部分" class="headerlink" title="新老节点都有，并且乱序(重点并且复杂的部分)"></a>新老节点都有，并且乱序(重点并且复杂的部分)</h5><p>以上示例获取的中间部分如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">[i,i+<span class="hljs-number">1</span>,....,e1-<span class="hljs-number">1</span>,e1] <span class="hljs-comment">//老Dom数组未知部分</span><br>[i,i+<span class="hljs-number">1</span>,....,e2-<span class="hljs-number">1</span>,e2] <span class="hljs-comment">//新Dom数组未知部分</span><br>[ &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;]<br>[ &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d1&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;h&quot;</span> &#125;]<br></code></pre></td></tr></table></figure><blockquote><p>此时，i=2,e1=4,e2=6</p></blockquote><ol><li><p>遍历新数组，建立 Map 的映射关系（Map 主要用于 通过值 反查新数组对应值的下标）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// * 4.1 把新元素做成Map，key:value(index)</span><br><span class="hljs-keyword">const</span> s1 = i;<br><span class="hljs-keyword">const</span> s2 = i;<br><br><span class="hljs-keyword">const</span> keyToNewIndexMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br><span class="hljs-keyword">for</span> (i = s2; i &lt;= e2; i++) &#123;<br>  <span class="hljs-keyword">const</span> nextChild = c2[i];<br>  keyToNewIndexMap.<span class="hljs-title function_">set</span>(nextChild.<span class="hljs-property">key</span>, i);<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;keyToNewIndexMap: &quot;</span>, keyToNewIndexMap);<br></code></pre></td></tr></table></figure><p>keyToNewIndexMap: Map(5) { ‘d1’ =&gt; 2, ‘e’ =&gt; 3, ‘c’ =&gt; 4, ‘d’ =&gt; 5, ‘h’ =&gt; 6 }</p></li><li><p>建立一个数组，数组的初始值 均为 0（Array 主要用于建立 新数组下标和老数组下标的对应关系）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// *4.2 记录一下新老元素的相对下标</span><br><span class="hljs-keyword">const</span> toBePatched = e2 - s2 + <span class="hljs-number">1</span>; <span class="hljs-comment">// 剩余新元素的个数</span><br><span class="hljs-keyword">const</span> newIndexToOldIndexMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(toBePatched);<br><span class="hljs-comment">// 数组的下标记录的是新元素的相对下标，</span><br><span class="hljs-comment">// value初始值是0</span><br><span class="hljs-comment">// todo 在4.3中做一件事：一旦元素可以被复用，value值更新成老元素的下标+1</span><br><span class="hljs-comment">// 数组的值如果还是0， 证明这个值在新元素中是要mount的</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; toBePatched; i++) &#123;<br>  newIndexToOldIndexMap[i] = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;newIndexToOldIndexMap: &quot;</span>, newIndexToOldIndexMap);<br></code></pre></td></tr></table></figure><p>newIndexToOldIndexMap: [ 0, 0, 0, 0, 0 ]</p></li><li><p><strong>判断删除和添加复用标记</strong>遍历老元素数组，根据 keyToNewIndexMap 的值来判断是删除还是复用，并更新 newIndexToOldIndexMap 的下标值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> patched = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">let</span> moved = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> maxNewIndexSoFar = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">for</span> (i = s1; i &lt;= e1; i++) &#123;<br>  <span class="hljs-keyword">const</span> prevChild = c1[i];<br><br>  <span class="hljs-keyword">if</span> (patched &gt;= toBePatched) &#123;<br>    <span class="hljs-title function_">unmount</span>(prevChild.<span class="hljs-property">key</span>);<br>    <span class="hljs-keyword">continue</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> newIndex = keyToNewIndexMap.<span class="hljs-title function_">get</span>(prevChild.<span class="hljs-property">key</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;newIndex: &quot;</span>, newIndex);<br><br>  <span class="hljs-keyword">if</span> (newIndex === <span class="hljs-literal">undefined</span>) &#123;<br>    <span class="hljs-comment">// 没有找到要复用它的节点，只能删除</span><br>    <span class="hljs-title function_">unmount</span>(prevChild.<span class="hljs-property">key</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 节点要被复用</span><br>    <span class="hljs-comment">//  1 2 3 5 10</span><br>    <span class="hljs-comment">// maxNewIndexSoFar记录队伍最后一个元素的下标</span><br>    <span class="hljs-keyword">if</span> (newIndex &gt;= maxNewIndexSoFar) &#123;<br>      maxNewIndexSoFar = newIndex;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">// 插队</span><br>      moved = <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// newIndex - s2是相对下标</span><br>    <span class="hljs-comment">// i + 1老元素下标+1</span><br>    newIndexToOldIndexMap[newIndex - s2] = i + <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">//  tips: 问：为什么要用i+1？而不是直接用i，这样更好理解</span><br>    <span class="hljs-comment">//  答： 因为直接用 i  ,可能会遇到 i==0 的情况，此时，无法区分这个 0 是代表该元素可复用，还是新增</span><br><br>    <span class="hljs-title function_">patch</span>(prevChild.<span class="hljs-property">key</span>);<br>    patched++;<br>  &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(newIndexToOldIndexMap, <span class="hljs-string">&quot;newIndexToOldIndexMap&quot;</span>);<br></code></pre></td></tr></table></figure><p>newIndex: 4<br>newIndex: 5<br>newIndex: 3<br>newIndexToOldIndexMap [ 0, 5, 3, 4, 0 ]<br>跟之前的新元素数组比较可以发现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">(oldDomArray = [<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;f&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;g&quot;</span> &#125;,<br>]),<br>  [&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d1&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;h&quot;</span> &#125;];<br></code></pre></td></tr></table></figure><p>newIndexToOldIndexMap 中下标 0 上的值： 0 代表着没有在老数组中找到对应的值，即没有更新。<br>更容易理解的写法其实是这样：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js">[ <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span> ] <span class="hljs-comment">// 转化对应关系</span><br>[<br>  &#123;<br>    <span class="hljs-attr">oldIndex</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">newIndex</span>:<span class="hljs-number">0</span>,<br>  &#125;,&#123;<br>    <span class="hljs-attr">oldIndex</span>:<span class="hljs-number">5</span>, <span class="hljs-comment">//  5 表示 新数组中的第一个下标对应着老数组中的第五个值。</span><br>    <span class="hljs-attr">newIndex</span>:<span class="hljs-number">1</span>, <span class="hljs-comment">// 新数组中间部分的 下标</span><br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">oldIndex</span>:<span class="hljs-number">3</span>, <span class="hljs-comment">//3 表示 新数组中的第二个下标对应着老数组中的第三个值。</span><br>    <span class="hljs-attr">newIndex</span>:<span class="hljs-number">2</span>,<br>  &#125;,&#123;<br>    <span class="hljs-attr">oldIndex</span>:<span class="hljs-number">4</span>, <span class="hljs-comment">//4 表示 新数组中的第三个下标对应着老数组中的第四个值。</span><br>    <span class="hljs-attr">newIndex</span>:<span class="hljs-number">3</span>,<br>  &#125;<br>  &#123;<br>    <span class="hljs-attr">oldIndex</span>:<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">newIndex</span>:<span class="hljs-number">0</span>,<br>  &#125;,<br>]<br></code></pre></td></tr></table></figure></li><li><p><strong>判断新增和添加移动标记</strong>倒着遍历新元素数组，通过判断 newIndexToOldIndexMap[i] 是否等于 0 去确定是新增还是移动</p><blockquote><p>tips: 关于移动（move）<br>问：如何用最小步数使数组变成规定的排序？答：获取到 最大递增序列 后，移动序列之外的元素即可实现最小移动步骤</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// * 4.4 去遍新元素 mount、move</span><br><span class="hljs-keyword">const</span> increasingNewIndexSequence = moved<br>  ? <span class="hljs-title function_">getSequence</span>(newIndexToOldIndexMap)<br>  : [];<br><span class="hljs-keyword">let</span> lastIndex = increasingNewIndexSequence.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;increasingNewIndexSequence: &quot;</span>, increasingNewIndexSequence);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;toBePatched: &quot;</span>, toBePatched);<br><span class="hljs-keyword">for</span> (i = toBePatched - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>  <span class="hljs-keyword">const</span> nextChild = c2[s2 + i];<br>  <span class="hljs-comment">// 判断节点是mount还是move</span><br>  <span class="hljs-keyword">if</span> (newIndexToOldIndexMap[i] === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-comment">// nextChild要新增</span><br>    <span class="hljs-title function_">mountElement</span>(nextChild.<span class="hljs-property">key</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 可能move</span><br>    <span class="hljs-comment">// i 是新元素的相对下标</span><br>    <span class="hljs-comment">// lastIndex是LIS的相对下标</span><br>    <span class="hljs-keyword">if</span> (lastIndex &lt; <span class="hljs-number">0</span> || i !== increasingNewIndexSequence[lastIndex]) &#123;<br>      <span class="hljs-title function_">move</span>(nextChild.<span class="hljs-property">key</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      lastIndex--;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><ul><li><p>新增很好判断，如果值为 0，说明老数组中没有改元素，则需要新增<br>newIndexToOldIndexMap[i] === 0</p></li><li><p>添加 move 的判断则比较复杂</p><ul><li>为什么 i !== increasingNewIndexSequence[lastIndex] 则需要添加 move？<br>i 是 newIndexToOldIndexMap 数组 的倒序 index<br>increasingNewIndexSequence[lastIndex]是不需要添加 move 的 newIndexToOldIndexMap 数组 的倒序 index<br>如果这两个值不相等，就说明 当前的这个元素需要添加 move</li><li>解释如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">[&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;];<br>[(&#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d1&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;h&quot;</span> &#125;)];<br></code></pre></td></tr></table></figure><p>抛开新增的元素 { key: “d1” } 和 { key: “h” }，则里面需要变动的只有 { key: “e” }，将 { key: “e” } 移动到{ key: “d” }之后，就完成了移动，所以需要将 { key: “e” } 打上 move 的标签</p><ul><li>如何找到{ key: “e” }元素？答：获取到 最大递增序列 后，反查其他元素，获取到{ key: “e” }</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js">oldDomArray = [<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;a&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;b&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;c&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;d&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;e&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;f&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;g&quot;</span> &#125;,<br>];<br><span class="hljs-attr">newIndexToOldIndexMap</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>];<br><span class="hljs-attr">increasingNewIndexSequence</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br></code></pre></td></tr></table></figure><blockquote><p>increasingNewIndexSequence 就是 最大递增序列 ，对应的是不需要移动的元素。[0，2，3]对应着 newIndexToOldIndexMap 的第 0 个、第 2 个，第 3 个。值是 [0，3，4] 。<br><strong>0，2，3 这几个是不需要移动（move）的</strong>。<br>newIndexToOldIndexMap 剩下的则需要 move，即[1，4]。分别对应着 newIndexToOldIndexMap 中的[5,0],0 是代表新增，则只剩下[5]。<br><strong>5 是需要移动的</strong>。<br>利用反查找得到 5 就是 oldDomArray 中的第五个 { key: “e” }。</p></blockquote></li></ul><ol><li><p>如何获取 最大可递增序列 ？</p><ul><li><p>什么是 最大可递增序列？<br>举例：<br>1、[0, 5, 3, 4, 0,]中为[0,3,4]对应的下标分别为[0,2,3]<br>2、[9, 3, 7, 8, 0,]中为[3,7,8]对应的下标分别为[1,2,3]<br><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">力扣</a><br><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/solution/dong-tai-gui-hua-he-er-fen-cha-zhao-lian-x7dh/">最大递增序列解法说明</a><br><a href="https://leetcode-cn.com/problems/N6YdxV/solution/cha-zhao-cha-ru-wei-zhi-by-leetcode-solu-inlw/">二分插入算法</a></p><blockquote><p>(right - left) &gt;&gt; 1 等价于 Math.floor(((right - left) / 2))</p></blockquote></li><li><p>如何获取？<br>通过 二分替换 实现 最大递增序列</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getSequence</span>(<span class="hljs-params">arr</span>) &#123;<br>  <span class="hljs-comment">// 返回的是LIS的路径</span><br>  <span class="hljs-keyword">const</span> lis = [<span class="hljs-number">0</span>];<br>  <span class="hljs-keyword">const</span> len = arr.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">const</span> record = arr.<span class="hljs-title function_">slice</span>();<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>    <span class="hljs-keyword">const</span> arrI = arr[i];<br>    <span class="hljs-keyword">if</span> (arrI !== <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">const</span> last = lis[lis.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>];<br>      <span class="hljs-keyword">if</span> (arr[last] &lt; arrI) &#123;<br>        <span class="hljs-comment">// 新来的元素比lis最后一个元素大，直接放到lis最后</span><br>        <span class="hljs-comment">//  1 3 5 10</span><br>        record[i] = last;<br>        lis.<span class="hljs-title function_">push</span>(i);<br>        <span class="hljs-keyword">continue</span>;<br>      &#125;<br>      <span class="hljs-comment">// 二分替换</span><br>      <span class="hljs-keyword">let</span> left = <span class="hljs-number">0</span>,<br>        right = lis.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>        <span class="hljs-keyword">const</span> mid = (left + right) &gt;&gt; <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (arr[lis[mid]] &lt; arrI) &#123;<br>          <span class="hljs-comment">// 在右边</span><br>          left = mid + <span class="hljs-number">1</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          right = mid;<br>        &#125;<br>      &#125;<br>      <span class="hljs-comment">// 从lis里找比arrI大的最小的元素，并且替换</span><br>      <span class="hljs-keyword">if</span> (arrI &lt; arr[lis[left]]) &#123;<br>        <span class="hljs-keyword">if</span> (left &gt; <span class="hljs-number">0</span>) &#123;<br>          record[i] = lis[left - <span class="hljs-number">1</span>];<br>        &#125;<br>        lis[left] = i;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">let</span> i = lis.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">let</span> last = lis[i - <span class="hljs-number">1</span>];<br>  <span class="hljs-keyword">while</span> (i-- &gt; <span class="hljs-number">0</span>) &#123;<br>    lis[i] = last;<br>    last = record[last];<br>  &#125;<br>  <span class="hljs-keyword">return</span> lis;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面代码核心在 left 的变化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">lis[left] = i;<br></code></pre></td></tr></table></figure></li></ul></li></ol><h3 id="最大可递增序列"><a href="#最大可递增序列" class="headerlink" title="最大可递增序列"></a>最大可递增序列</h3><h4 id="二分插入"><a href="#二分插入" class="headerlink" title="二分插入"></a>二分插入</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">lengthOfLIS</span> = (<span class="hljs-params">numsp</span>) =&gt; &#123;<br>  <span class="hljs-comment">// 每堆的堆顶</span><br>  <span class="hljs-keyword">const</span> top = [];<br>  <span class="hljs-comment">// 牌堆数初始化为0</span><br>  <span class="hljs-keyword">let</span> piles = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; numsp.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-comment">// 要处理的扑克牌</span><br>    <span class="hljs-keyword">let</span> poker = numsp[i];<br>    <span class="hljs-comment">// 左堆和最右堆进行二分搜索，因为堆顶是有序排的，最终找到该牌要插入的堆</span><br>    <span class="hljs-keyword">let</span> left = <span class="hljs-number">0</span>,<br>      right = piles;<br>    <span class="hljs-comment">//搜索区间是左闭右开</span><br>    <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>      <span class="hljs-keyword">let</span> mid = left + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((right - left) / <span class="hljs-number">2</span>);<br>      <span class="hljs-keyword">if</span> (top[mid] &gt; poker) &#123;<br>        right = mid;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (top[mid] &lt; poker) &#123;<br>        left = mid + <span class="hljs-number">1</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        right = mid;<br>      &#125;<br>    &#125;<br>    <span class="hljs-comment">//  没找到合适的牌堆，新建一堆</span><br>    <span class="hljs-keyword">if</span> (left == piles) piles++;<br>    <span class="hljs-comment">// 把这张牌放到堆顶</span><br>    top[left] = poker;<br>  &#125;<br>  <span class="hljs-keyword">return</span> piles;<br>&#125;;<br><span class="hljs-title function_">lengthOfLIS</span>([<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>]);<br></code></pre></td></tr></table></figure><p>当第一次循环的时候，left == piles 均为 0，top 为[9]，piles 赋值为 1</p><p>当第二次循环的时候，left ==0 &lt; right ==piles =1, 执行 while 循环，mid 为 0，top[0]就是上次存的 9，大于本次 numsp[1]，则将 right 置为 0，并将 top[0] = numsp[1] == 2，top 为[2]</p><p>当第三次循环的时候，left ==0 &lt; right ==piles =1，mid 为 0，top[0] 为 2 小于 numsp[3] == 5，执行 left = mid + 1(left = 0+1),接着执行 left == piles （1 == 1)，piles++（piles==2）执行 top[1] = numsp[3]，top 为[2,5]</p><p>第四次循环的时候，left ==0 &lt; right ==piles =2，mid 为 1，top[1] 为 5 大于 numsp[4] == 3，right = mid == 1，然后执行 while（0&lt;1)，mid 为 0，top[0] 为 2 小于 numsp[4] == 3，left=0+1，接着执行 top[1] = numsp[4];<br>top 为[2,3]</p><p>第五次循环的时候，left ==0 &lt; right ==piles =2，mid 为 1,top[1] 为 3 小于 numsp[5] == 7，left= mid + 1 ==2，执行 piles++(piles == 3),top[2]=numsp[5] ,top 为[2,3,7]</p><h4 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h4><p>通过 动态规划 实现 最大可递增序列</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// nums:[9, 2, 5, 4, 3, 7]</span><br><span class="hljs-comment">// return：top： [2, 3, 7]</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">selfCheck2</span> = (<span class="hljs-params">nums</span>) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> arr = nums;<br>  <span class="hljs-keyword">let</span> top = [];<br>  <span class="hljs-keyword">let</span> dp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(arr.<span class="hljs-property">length</span>).<span class="hljs-title function_">fill</span>(<span class="hljs-number">1</span>);<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; arr.<span class="hljs-property">length</span>; index++) &#123;<br>    <span class="hljs-keyword">const</span> element = arr[index];<br>    <span class="hljs-keyword">let</span> left = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> innerIndex = <span class="hljs-number">0</span>; innerIndex &lt; index; innerIndex++) &#123;<br>      <span class="hljs-keyword">if</span> (arr[innerIndex] &lt; element) &#123;<br>        dp[index] = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(dp[index], dp[innerIndex] + <span class="hljs-number">1</span>);<br>        left = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(left, dp[innerIndex]);<br>      &#125;<br>    &#125;<br>    top[left] = element;<br>  &#125;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;top: &quot;</span>, top);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(dp, <span class="hljs-string">&quot;dp&quot;</span>);<br>  <span class="hljs-keyword">return</span> top.<span class="hljs-property">length</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><p>核心在于 dp 数组的变化，dp 数组的值类似于二分法中的 left 的值</p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>’Diff&#39;</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Three.js使用</title>
    <link href="/2023/10/15/Three.js%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/10/15/Three.js%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="Three-js使用"><a href="#Three-js使用" class="headerlink" title="Three.js使用"></a>Three.js使用</h2><p>前端搞 3D 图形化这块的入门首选就是：Three.js，主要还是文档全面（并且支持中文，这点很难得），支持的工具也比较丰富，对应网上也可以查到一些大神做的 3D 方案。</p><span id="more"></span><h3 id="常用代码块"><a href="#常用代码块" class="headerlink" title="常用代码块"></a>常用代码块</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> mainHDR = <span class="hljs-keyword">await</span> <span class="hljs-title function_">loadEnvMapByHDR</span>(<br>  <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@/assets/hdr/diamond.hdr&quot;</span>),<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">render3dCtx</span>.<span class="hljs-property">renderer</span><br>);<br><span class="hljs-title function_">setAllMaterials</span>(<br>  model,<br>  &#123;<br>    <span class="hljs-attr">envMap</span>: mainHDR,<br>    <span class="hljs-attr">envMapIntensity</span>: <span class="hljs-number">1.2</span>,<br>    <span class="hljs-attr">side</span>: <span class="hljs-title class_">FrontSide</span>,<br>    <span class="hljs-attr">forceSinglePass</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">material</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> !material.<span class="hljs-property">isMeshBasicMaterial</span>;<br>  &#125;<br>);<br></code></pre></td></tr></table></figure><h3 id="坐标系-axisHelper"><a href="#坐标系-axisHelper" class="headerlink" title="坐标系 axisHelper"></a>坐标系 axisHelper</h3><p>three 用的是右手坐标系</p><p>即：x 朝右，y 朝上，z 朝外面</p><h4 id="反转角度"><a href="#反转角度" class="headerlink" title="反转角度"></a>反转角度</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">rotation.<span class="hljs-property">x</span> = -<span class="hljs-number">0.5</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; <span class="hljs-comment">// 沿x轴顺时针旋转90°</span><br>rotation.<span class="hljs-property">x</span> = -<span class="hljs-number">1</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; <span class="hljs-comment">// 沿x轴顺时针旋转180°</span><br><br>rotation.<span class="hljs-property">x</span> = <span class="hljs-number">0.5</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; <span class="hljs-comment">// 沿x轴逆时针旋转90°</span><br>rotation.<span class="hljs-property">x</span> = <span class="hljs-number">1</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; <span class="hljs-comment">// 沿x轴逆时针旋转180°</span><br></code></pre></td></tr></table></figure><p>其他轴同理</p><h3 id="渲染器-WebGLRenderer"><a href="#渲染器-WebGLRenderer" class="headerlink" title="渲染器 WebGLRenderer"></a>渲染器 WebGLRenderer</h3><h4 id="构造器实例化"><a href="#构造器实例化" class="headerlink" title="构造器实例化"></a>构造器实例化</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#three&quot;</span>);<br><span class="hljs-keyword">const</span> renderer = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">WebGLRenderer</span>(&#123; canvas, <span class="hljs-attr">antialias</span>: <span class="hljs-literal">true</span> &#125;);<br></code></pre></td></tr></table></figure><h4 id="属性功能"><a href="#属性功能" class="headerlink" title="属性功能"></a>属性功能</h4><ol><li><p>添加阴影 shadowMap</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">renderer.<span class="hljs-property">shadowMap</span>.<span class="hljs-property">enabled</span> = <span class="hljs-literal">true</span>; <span class="hljs-comment">// 添加阴影</span><br></code></pre></td></tr></table></figure></li><li><p>开始渲染 render</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">renderer.<span class="hljs-title function_">render</span>(scene, camera);<br></code></pre></td></tr></table></figure></li><li><p>输出颜色 toneMappingExposure</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">renderer.<span class="hljs-property">toneMapping</span> = <span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">ACESFilmicToneMapping</span>;<br>renderer.<span class="hljs-property">toneMappingExposure</span> = <span class="hljs-number">8</span>; <span class="hljs-comment">//色调映射的曝光级别。默认是1(显示色彩)</span><br>renderer.<span class="hljs-property">outputEncoding</span> = <span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">sRGBEncoding</span>;<br></code></pre></td></tr></table></figure><p>toneMapping:色调映射</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">NoToneMapping</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">LinearToneMapping</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">ReinhardToneMapping</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">CineonToneMapping</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">ACESFilmicToneMapping</span>;<br></code></pre></td></tr></table></figure><p>outputEncoding:渲染器的输出编码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">LinearEncoding</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">sRGBEncoding</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">BasicDepthPacking</span>;<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-property">RGBADepthPacking</span>;<br></code></pre></td></tr></table></figure></li><li><p>光照模式 physicallyCorrectLights</p><p>是否使用物理上正确的光照模式。 默认是 false</p></li><li><p>test</p></li></ol><h3 id="几何体-Geometry"><a href="#几何体-Geometry" class="headerlink" title="几何体 Geometry"></a>几何体 Geometry</h3><h4 id="立方体-BoxBufferGeometry"><a href="#立方体-BoxBufferGeometry" class="headerlink" title="立方体 BoxBufferGeometry"></a>立方体 BoxBufferGeometry</h4><p>BoxGeometry 是四边形几何类, 它通常用给定的长宽高参数构造立方体或不规则四边形</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">BoxGeometry</span>(<br>  width,<br>  height,<br>  depth,<br>  widthSegments,<br>  heightSegments,<br>  depthSegments<br>);<br></code></pre></td></tr></table></figure><p>width — X 轴上面的宽度，默认值为 1。<br>height — Y 轴上面的高度，默认值为 1。<br>depth — Z 轴上面的深度，默认值为 1。<br>widthSegments — （可选）宽度的分段数，默认值是 1。<br>heightSegments — （可选）高度的分段数，默认值是 1。<br>depthSegments — （可选）深度的分段数，默认值是 1。</p><h4 id="平面类-PlaneGeometry"><a href="#平面类-PlaneGeometry" class="headerlink" title="平面类 PlaneGeometry"></a>平面类 PlaneGeometry</h4><p>PlaneGeometry 是平面类, 其实是一个长方形，而不是数学意义上无限大小的平面;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">PlaneGeometry</span>(width, height, widthSegments, heightSegments);<br></code></pre></td></tr></table></figure><h4 id="球体-SphereBufferGeometry"><a href="#球体-SphereBufferGeometry" class="headerlink" title="球体 SphereBufferGeometry"></a>球体 SphereBufferGeometry</h4><p>SphereGeometry 是球体类, 构造函数如下所示 ( radius 是半径； segmentsWidth 表示经度上的切片数； segmentsHeight 表示纬度上的切片数； phiStart 表示经度开始的弧度； phiLength 表示经度跨过的弧度； thetaStart 表示纬度开始的弧度； thetaLength 表示纬度跨过的弧度), 其中需要注意的是在使用时可以根据经纬度切片数来定制球形外形, 可以通过经纬度弧度来定制球形起始形状;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">SphereGeometry</span>(<br>  radius,<br>  segmentsWidth,<br>  segmentsHeight,<br>  phiStart,<br>  phiLength,<br>  thetaStart,<br>  thetaLength<br>);<br></code></pre></td></tr></table></figure><h4 id="圆形或者扇形类-CircleGeometry"><a href="#圆形或者扇形类-CircleGeometry" class="headerlink" title="圆形或者扇形类 CircleGeometry"></a>圆形或者扇形类 CircleGeometry</h4><p>CircleGeometry 几何类可以创建圆形或者扇形;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">CircleGeometry</span>(radius, segments, thetaStart, thetaLength);<br></code></pre></td></tr></table></figure><h4 id="圆柱体-CylinderBufferGeometry"><a href="#圆柱体-CylinderBufferGeometry" class="headerlink" title="圆柱体 CylinderBufferGeometry"></a>圆柱体 CylinderBufferGeometry</h4><p>构造函数如下所示( radiusTop 与 radiusBottom 分别是顶面和底面的半径，由此可知，当这两个参数设置为不同的值时，实际上创建的是一个圆台； height 是圆柱体的高度； radiusSegments 与 heightSegments 可类比球体中的分段； openEnded 是一个布尔值，表示是否没有顶面和底面，缺省值为 false，表示有顶面和底面);</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">CylinderGeometry</span>(<br>  radiusTop,<br>  radiusBottom,<br>  height,<br>  radiusSegments,<br>  heightSegments,<br>  openEnded<br>);<br></code></pre></td></tr></table></figure><h4 id="TetrahedronGeometry-正多边体"><a href="#TetrahedronGeometry-正多边体" class="headerlink" title="TetrahedronGeometry 正多边体"></a>TetrahedronGeometry 正多边体</h4><p>TetrahedronGeometry / 正四面体、OctahedronGeometry / 正八面体、IcosahedronGeometry / 正二十面体的构造函数分别如下所示;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">TetrahedronGeometry</span>(radius, detail);<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">OctahedronGeometry</span>(radius, detail);<br><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">IcosahedronGeometry</span>(radius, detail);<br></code></pre></td></tr></table></figure><h4 id="圆环面-也为甜甜圈的形状-TorusGeometry"><a href="#圆环面-也为甜甜圈的形状-TorusGeometry" class="headerlink" title="圆环面, 也为甜甜圈的形状 TorusGeometry"></a>圆环面, 也为甜甜圈的形状 TorusGeometry</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">TorusGeometry</span>(radius, tube, radialSegments, tubularSegments, arc);<br></code></pre></td></tr></table></figure><h4 id="圆环结-TorusKnotGeometry"><a href="#圆环结-TorusKnotGeometry" class="headerlink" title="圆环结 TorusKnotGeometry"></a>圆环结 TorusKnotGeometry</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">TorusKnotGeometry</span>(<br>  radius,<br>  tube,<br>  radialSegments,<br>  tubularSegments,<br>  p,<br>  q,<br>  heightScale<br>);<br></code></pre></td></tr></table></figure><h4 id="锥形几何类-ConeGeometry"><a href="#锥形几何类-ConeGeometry" class="headerlink" title="锥形几何类 ConeGeometry"></a>锥形几何类 ConeGeometry</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">ConeGeometry</span>(<br>  radius,<br>  height,<br>  radialSegments,<br>  heightSegments,<br>  openEnded,<br>  thetaStart,<br>  thetaLength<br>);<br></code></pre></td></tr></table></figure><h3 id="材质-Material"><a href="#材质-Material" class="headerlink" title="材质 Material"></a>材质 Material</h3><h4 id="基础网格材质-MeshBasicMaterial"><a href="#基础网格材质-MeshBasicMaterial" class="headerlink" title="基础网格材质 MeshBasicMaterial"></a>基础网格材质 MeshBasicMaterial</h4><p>一个以简单着色（平面或线框）方式来绘制几何体的材质。</p><p>这种材质不受光照的影响。</p><h4 id="Lambert-网格材质-MeshLambertMaterial"><a href="#Lambert-网格材质-MeshLambertMaterial" class="headerlink" title="Lambert 网格材质 MeshLambertMaterial"></a>Lambert 网格材质 MeshLambertMaterial</h4><p>一种非光泽表面的材质，没有镜面高光。</p><p>这可以很好地模拟一些表面（例如未经处理的木材或石材），但不能模拟具有镜面高光的光泽表面（例如涂漆木材）</p><h4 id="Phong-网格材质-MeshPhongMaterial"><a href="#Phong-网格材质-MeshPhongMaterial" class="headerlink" title="Phong 网格材质 MeshPhongMaterial"></a>Phong 网格材质 MeshPhongMaterial</h4><p>一种用于具有镜面高光的光泽表面的材质。</p><p>该材质可以模拟具有镜面高光的光泽表面（例如涂漆木材）</p><h4 id="标准网格材质-MeshStandardMaterial"><a href="#标准网格材质-MeshStandardMaterial" class="headerlink" title="标准网格材质 MeshStandardMaterial"></a>标准网格材质 MeshStandardMaterial</h4><p>一种基于物理的标准材质</p><p>这种方法与旧方法的不同之处在于，不使用近似值来表示光与表面的相互作用，而是使用物理上正确的模型。 我们的想法是，不是在特定照明下调整材质以使其看起来很好，而是可以创建一种材质，能够“正确”地应对所有光照场景。</p><h3 id="材质属性"><a href="#材质属性" class="headerlink" title="材质属性"></a>材质属性</h3><ol><li>颜色 color</li><li>环境贴图 envMap:应该添加由 PMREMGenerator 预处理过的环境贴图</li><li>环境贴图系数 envMapIntensity: 缩放环境贴图的效果。</li><li>金属材质感 metalness</li><li>粗糙材质感 roughness</li><li>法线贴图纹理 normalMap：用于创建法线贴图的纹理</li></ol><p>envMapIntensity 可以查看一下图示：</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E6%9D%90%E8%B4%A8%E6%95%88%E6%9E%9C.png" alt="金属感和粗糙感"></p><h3 id="相机-camera"><a href="#相机-camera" class="headerlink" title="相机 camera"></a>相机 camera</h3><h4 id="透视相机-PerspectiveCamera"><a href="#透视相机-PerspectiveCamera" class="headerlink" title="透视相机 PerspectiveCamera"></a>透视相机 PerspectiveCamera</h4><p>模拟真实人眼看到的相机，即：远大近小</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> camera = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">PerspectiveCamera</span>(<br>  <span class="hljs-number">75</span>,<br>  <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> / <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,<br>  <span class="hljs-number">0.1</span>,<br>  <span class="hljs-number">1000</span><br>);<br>camera.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-number">0</span>;<br>camera.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = <span class="hljs-number">0</span>;<br>camera.<span class="hljs-property">position</span>.<span class="hljs-property">z</span> = <span class="hljs-number">60</span>;<br></code></pre></td></tr></table></figure><p>fov — 摄像机视锥体垂直视野角度<br>aspect — 摄像机视锥体长宽比<br>near — 摄像机视锥体近端面<br>far — 摄像机视锥体远端面</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/PerspectiveCameraIntrduce.jpg" alt="透视相机图示"></p><h3 id="光源-light"><a href="#光源-light" class="headerlink" title="光源 light"></a>光源 light</h3><h4 id="平行光-DirectionalLight"><a href="#平行光-DirectionalLight" class="headerlink" title="平行光 DirectionalLight"></a>平行光 DirectionalLight</h4><p>通常模拟太阳光</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">DirectionalLight</span>(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">0.6</span>);<br></code></pre></td></tr></table></figure><p>color - (可选参数) 16 进制表示光的颜色。 缺省值为 0xffffff (白色)。<br>intensity - (可选参数) 光照的强度。缺省值为 1。</p><h4 id="球形光源-HemisphereLight"><a href="#球形光源-HemisphereLight" class="headerlink" title="球形光源 HemisphereLight"></a>球形光源 HemisphereLight</h4><p>固定在场景上方的光源，所以第一个参数是天空颜色，第二个参数是地面颜色，中间会有渐变的光线颜色</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">HemisphereLight</span>(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">0xffffff</span>, <span class="hljs-number">0.6</span>);<br></code></pre></td></tr></table></figure><p>skyColor - (可选参数) 天空中发出光线的颜色。 缺省值 0xffffff。<br>groundColor - (可选参数) 地面发出光线的颜色。 缺省值 0xffffff。<br>intensity - (可选参数) 光照强度。 缺省值 1。</p><h4 id="点光源-PointLight"><a href="#点光源-PointLight" class="headerlink" title="点光源 PointLight"></a>点光源 PointLight</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> light = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">PointLight</span>(<span class="hljs-number">0xff0000</span>, <span class="hljs-number">1</span>, <span class="hljs-number">100</span>);<br>light.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(<span class="hljs-number">50</span>, <span class="hljs-number">50</span>, <span class="hljs-number">50</span>);<br></code></pre></td></tr></table></figure><p>PointLight( color : Integer, intensity : Float, distance : Number, decay : Float )<br>color - (可选参数)) 十六进制光照颜色。 缺省值 0xffffff (白色)。<br>intensity - (可选参数) 光照强度。 缺省值 1。</p><p>distance - 这个距离表示从光源到光照强度为 0 的位置。 当设置为 0 时，光永远不会消失(距离无穷大)。缺省值 0.<br>decay - 沿着光照距离的衰退量。缺省值 1。 在 physically correct 模式中，decay = 2。</p><h3 id="阴影-shadow"><a href="#阴影-shadow" class="headerlink" title="阴影 shadow"></a>阴影 shadow</h3><p>阴影需要投射到一个平面上，并且模型要处于光源和平面之间</p><ol><li>开启渲染器的阴影<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> renderer = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">WebGLRenderer</span>(&#123; canvas, <span class="hljs-attr">antialias</span>: <span class="hljs-literal">true</span> &#125;); <span class="hljs-comment">//是否执行抗锯齿</span><br>renderer.<span class="hljs-property">shadowMap</span>.<span class="hljs-property">enabled</span> = <span class="hljs-literal">true</span>; <span class="hljs-comment">// 允许添加阴影</span><br></code></pre></td></tr></table></figure></li><li>设定一个平面<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> plane = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">PlaneGeometry</span>(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>); <span class="hljs-comment">// 生成模型</span><br><span class="hljs-keyword">let</span> material = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">MeshPhongMaterial</span>(&#123;<br>  <span class="hljs-comment">// 生成材质</span><br>  <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;#d9d9d9&quot;</span>,<br>  <span class="hljs-attr">shininess</span>: <span class="hljs-number">0</span>,<br>&#125;);<br><span class="hljs-keyword">let</span> floor = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">Mesh</span>(plane, material); <span class="hljs-comment">// 赋予模型材质</span><br>floor.<span class="hljs-property">rotation</span>.<span class="hljs-property">x</span> = -<span class="hljs-number">0.5</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>;<br>floor.<span class="hljs-property">receiveShadow</span> = <span class="hljs-literal">true</span>;<br>floor.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = -<span class="hljs-number">15</span>;<br></code></pre></td></tr></table></figure></li><li>添加光源<br>添加平行光，平行光可以产生阴影<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> dirLight = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">DirectionalLight</span>(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">0.6</span>);<br><span class="hljs-comment">//光源等位置</span><br>dirLight.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(-<span class="hljs-number">10</span>, <span class="hljs-number">40</span>, <span class="hljs-number">0</span>);<br><span class="hljs-comment">//可以产生阴影</span><br>dirLight.<span class="hljs-property">castShadow</span> = <span class="hljs-literal">true</span>;<br>dirLight.<span class="hljs-property">shadow</span>.<span class="hljs-property">mapSize</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">Vector2</span>(<span class="hljs-number">1024</span>, <span class="hljs-number">1024</span>);<br></code></pre></td></tr></table></figure></li><li>添加模型<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> textureLoader = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">TextureLoader</span>();<br><span class="hljs-keyword">let</span> sphereGeometry = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">SphereGeometry</span>(<span class="hljs-number">15</span>, <span class="hljs-number">32</span>, <span class="hljs-number">16</span>);<br><span class="hljs-keyword">let</span> material = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">MeshBasicMaterial</span>(&#123;<br>  <span class="hljs-attr">color</span>: <span class="hljs-number">0xffff00</span>,<br>&#125;);<br><span class="hljs-keyword">const</span> sphere = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">Mesh</span>(sphereGeometry, material);<br>sphere.<span class="hljs-property">castShadow</span> = <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure></li><li>调整光源、模型、平面的相对位置</li></ol><h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4><ul><li><p>rotation:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">floor.<span class="hljs-property">rotation</span>.<span class="hljs-property">x</span> = -<span class="hljs-number">0.5</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; <span class="hljs-comment">// 沿着x轴顺时针旋转90度</span><br><br>floor.<span class="hljs-property">rotation</span>.<span class="hljs-property">x</span> = <span class="hljs-number">0.5</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; <span class="hljs-comment">// 沿着x轴逆时针旋转90度</span><br></code></pre></td></tr></table></figure></li><li><p>receiveShadow<br>是否接受阴影</p></li><li><p>castShadow<br>对象是否被渲染到阴影贴图中，需要 平行光和模型都 开启 castShadow=true</p></li><li><p>调整位置<br>需要考虑四个位置：1、相机位置，2、平行光位置，3、模型位置，4、平面位置</p><ol><li>相机处于 z 轴正方向，并离模型有一定距离</li><li>平行光位于 y 轴上方，朝下投影</li><li>模型在 y 轴方向上处于平行光下面</li><li>平面在 y 轴方向上处于模型下方</li></ol></li></ul><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><p>Orbit controls（轨道控制器）可以使得相机围绕目标进行轨道运动</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> controls = <span class="hljs-keyword">new</span> <span class="hljs-title class_">OrbitControls</span>(camera, renderer.<span class="hljs-property">domElement</span>);<br>controls.<span class="hljs-property">enableDamping</span> = <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><p>object: （必须）将要被控制的相机。该相机不允许是其他任何对象的子级，除非该对象是场景自身。</p><p>domElement: 用于事件监听的 HTML 元素。</p><p>renderer.domElement 是 WebGLRenderer 实例化的一个对象，包含了基于 canvas 渲染的元素</p><h4 id="控制器属性"><a href="#控制器属性" class="headerlink" title="控制器属性"></a>控制器属性</h4><ol><li><p>minDistance（最小距离）</p></li><li><p>maxDistance （最大距离）</p></li><li><p>target.set(0, 0, 60)（控制器焦点位置）</p><p>当旋转整个模型时，需要围绕一个焦点来进行运动，比如：围绕一个房子进行旋转，保持房子在中心位置，则需要将焦点放置到房子的坐标</p></li><li><p>test</p></li></ol><h3 id="控制显示精细度"><a href="#控制显示精细度" class="headerlink" title="控制显示精细度"></a>控制显示精细度</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">resizeRendererToDisplaySize</span>(<span class="hljs-params">renderer</span>) &#123;<br>  <span class="hljs-keyword">const</span> canvas = renderer.<span class="hljs-property">domElement</span>;<br>  <span class="hljs-keyword">var</span> width = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>;<br>  <span class="hljs-keyword">var</span> height = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>;<br>  <span class="hljs-keyword">var</span> canvasPixelWidth = canvas.<span class="hljs-property">width</span> / <span class="hljs-variable language_">window</span>.<span class="hljs-property">devicePixelRatio</span>;<br>  <span class="hljs-keyword">var</span> canvasPixelHeight = canvas.<span class="hljs-property">height</span> / <span class="hljs-variable language_">window</span>.<span class="hljs-property">devicePixelRatio</span>;<br><br>  <span class="hljs-keyword">const</span> needResize =<br>    canvasPixelWidth !== width || canvasPixelHeight !== height;<br>  <span class="hljs-keyword">if</span> (needResize) &#123;<br>    renderer.<span class="hljs-title function_">setSize</span>(width, height, <span class="hljs-literal">false</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> needResize;<br>&#125;,<br></code></pre></td></tr></table></figure><p>如果 canvas 的宽高不等于设备的实际宽高，则需要重新 setSize 一下</p><h3 id="组-Group"><a href="#组-Group" class="headerlink" title="组 Group"></a>组 Group</h3><p>目的是使得组中对象在语法上的结构更加清晰。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> group = <span class="hljs-keyword">new</span> <span class="hljs-variable constant_">THREE</span>.<span class="hljs-title class_">Group</span>();<br>group.<span class="hljs-title function_">add</span>(cubeA);<br>group.<span class="hljs-title function_">add</span>(cubeB);<br><br>scene.<span class="hljs-title function_">add</span>(group);<br></code></pre></td></tr></table></figure><h4 id="使用场景举例"><a href="#使用场景举例" class="headerlink" title="使用场景举例"></a>使用场景举例</h4><p>做一个太阳东升西落的效果，那么需要一个 太阳模型+平行光，而这两个对象都是有一摸一样的轨迹和动作。</p><p>此时，可以使用 group 来控制分组</p><h3 id="自定义事件-EventDispatcher"><a href="#自定义事件-EventDispatcher" class="headerlink" title="自定义事件 EventDispatcher"></a>自定义事件 EventDispatcher</h3><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Cat</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">EventDispatcher</span> &#123;<br>  <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">dispatchEvent</span>(&#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;start&quot;</span>,<br>      <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;lee Test&quot;</span>,<br>    &#125;);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> littleCat = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>();<br><br>littleCat.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;start&quot;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>  <span class="hljs-title function_">alert</span>(event.<span class="hljs-property">message</span>);<br>&#125;);<br><br>littleCat.<span class="hljs-title function_">start</span>();<br></code></pre></td></tr></table></figure><p>littleCat.start()调用 dispatchEvent 触发自定义事件，<br>找到实例上名称为 start 的自定义事件，显示 alert</p><h3 id="TWEEN-js-入门"><a href="#TWEEN-js-入门" class="headerlink" title="TWEEN.js 入门"></a>TWEEN.js 入门</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm i @tweenjs/tween.<span class="hljs-property">js</span>@^<span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><h4 id="缓动效果查询网站"><a href="#缓动效果查询网站" class="headerlink" title="缓动效果查询网站"></a>缓动效果查询网站</h4><p><a href="https://easings.net/">查询网站</a></p><h4 id="如何设计一个连续的动作变化"><a href="#如何设计一个连续的动作变化" class="headerlink" title="如何设计一个连续的动作变化"></a>如何设计一个连续的动作变化</h4><p>tween.chain 可以将一个 tween 和另一个 tween 连接起来，从而实现连续的动作，注意：需要从后往前不停叠加 chain。</p><p>例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> tween1 = <span class="hljs-title function_">createShoesTWEEN</span>(&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">1.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">2.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, model);<br><span class="hljs-keyword">let</span> tween2 = <span class="hljs-title function_">createShoesTWEEN</span>(&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">0.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">1.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, model);<br><span class="hljs-keyword">let</span> tween3 = <span class="hljs-title function_">createShoesTWEEN</span>(&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">0.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, model);<br>tween2.<span class="hljs-title function_">chain</span>(tween1);<br>tween3.<span class="hljs-title function_">chain</span>(tween2);<br>tween3.<span class="hljs-title function_">start</span>();<br></code></pre></td></tr></table></figure><p>上面的动作会是： 从 y：0 到 0.5 到 1.5 到 2.5</p><h4 id="如何设计一个无限循环的动作变化"><a href="#如何设计一个无限循环的动作变化" class="headerlink" title="如何设计一个无限循环的动作变化"></a>如何设计一个无限循环的动作变化</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> tween1 = <span class="hljs-title function_">createShoesTWEEN</span>(&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">1.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">2.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, model);<br><span class="hljs-keyword">let</span> tween2 = <span class="hljs-title function_">createShoesTWEEN</span>(&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">0.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">1.5</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">60</span> &#125;, model);<br>tween1.<span class="hljs-title function_">chain</span>(tween2);<br>tween2.<span class="hljs-title function_">chain</span>(tween1);<br>tween2.<span class="hljs-title function_">start</span>();<br></code></pre></td></tr></table></figure><p>两个 tween 相互调用可以实现无限循环</p><h3 id="GLTF-加载"><a href="#GLTF-加载" class="headerlink" title="GLTF 加载"></a>GLTF 加载</h3><ol><li><p>引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">GLTFLoader</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;three/examples/jsm/loaders/GLTFLoader.js&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>实例化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> gltfLoader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GLTFLoader</span>();<br></code></pre></td></tr></table></figure></li><li><p>创建对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">gltfLoader.<span class="hljs-title function_">load</span>(<br>  <span class="hljs-string">&quot;/models/MaterialsVariantsShoe/glTF/MaterialsVariantsShoe.gltf&quot;</span>,<br>  <span class="hljs-function">(<span class="hljs-params">gltf</span>) =&gt;</span> &#123;<br>    gltf.<span class="hljs-property">scene</span>.<span class="hljs-property">scale</span>.<span class="hljs-title function_">set</span>(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>, <span class="hljs-number">300</span>);<br>    gltf.<span class="hljs-property">scene</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> = <span class="hljs-number">0</span>;<br>    gltf.<span class="hljs-property">scene</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> = -<span class="hljs-number">20</span>;<br>    gltf.<span class="hljs-property">scene</span>.<span class="hljs-property">position</span>.<span class="hljs-property">z</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-title function_">resolve</span>(gltf.<span class="hljs-property">scene</span>);<br>  &#125;<br>);<br></code></pre></td></tr></table></figure></li><li><p>场景中添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">scene.<span class="hljs-title function_">add</span>(gltf.<span class="hljs-property">scene</span>);<br></code></pre></td></tr></table></figure></li><li><p>test</p></li></ol><h3 id="CSS2DRenderer-标签点击事件无效"><a href="#CSS2DRenderer-标签点击事件无效" class="headerlink" title="CSS2DRenderer 标签点击事件无效"></a>CSS2DRenderer 标签点击事件无效</h3><p>在 three.js 0.13X 版本后,上面 dom 的 onclick 不会触发，原因是控制器 Controls</p><h4 id="OrbitControls-改成-canvas-的-renderer"><a href="#OrbitControls-改成-canvas-的-renderer" class="headerlink" title="OrbitControls 改成 canvas 的 renderer"></a>OrbitControls 改成 canvas 的 renderer</h4><p>let obtControls = new OrbitControls(camera, renderer.domElement);</p><h4 id="将-labelRenderer-改成-none"><a href="#将-labelRenderer-改成-none" class="headerlink" title="将 labelRenderer 改成 none"></a>将 labelRenderer 改成 none</h4><p>let labelRenderer = new CSS2DRenderer()</p><p>labelRenderer.domElement.style.pointerEvents = “none”;</p><h4 id="将-CSS2DObject-的-pointerEvents-改成-auto"><a href="#将-CSS2DObject-的-pointerEvents-改成-auto" class="headerlink" title="将 CSS2DObject 的 pointerEvents 改成 auto"></a>将 CSS2DObject 的 pointerEvents 改成 auto</h4>]]></content>
    
    
    
    <tags>
      
      <tag>three.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从Vue过渡到React</title>
    <link href="/2023/09/23/%E4%BB%8EVue%E8%BF%87%E6%B8%A1%E5%88%B0React/"/>
    <url>/2023/09/23/%E4%BB%8EVue%E8%BF%87%E6%B8%A1%E5%88%B0React/</url>
    
    <content type="html"><![CDATA[<h2 id="从-Vue-过渡到-React（16-8-0）"><a href="#从-Vue-过渡到-React（16-8-0）" class="headerlink" title="从 Vue 过渡到 React（16.8.0）"></a>从 Vue 过渡到 React（16.8.0）</h2><span id="more"></span><h3 id="Vue-的指令和-React-中对应实现方式"><a href="#Vue-的指令和-React-中对应实现方式" class="headerlink" title="Vue 的指令和 React 中对应实现方式"></a>Vue 的指令和 React 中对应实现方式</h3><h4 id="v-if、v-show-的-React-实现"><a href="#v-if、v-show-的-React-实现" class="headerlink" title="v-if、v-show 的 React 实现"></a>v-if、v-show 的 React 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//v-if实现方式</span><br>isShow ? &lt;<span class="hljs-title class_">SomeComponent</span>&gt; : &lt;<span class="hljs-title class_">Other</span>&gt;<br><br><span class="hljs-comment">//v-show实现方式</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;&#123;&#123;display: isShow ?  &#x27;block&#x27; : &#x27;none&#x27;&#125;&#125;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="v-for-的-React-实现"><a href="#v-for-的-React-实现" class="headerlink" title="v-for 的 React 实现"></a>v-for 的 React 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">list.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>e<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="computed-的-React-实现"><a href="#computed-的-React-实现" class="headerlink" title="computed 的 React 实现"></a>computed 的 React 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useMemo, useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Computed</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [num1, setNum1] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">const</span> [num2, setNum2] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">const</span> num3 = <span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> num1 + num2;<br>  &#125;, [num1, num2]);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">setNum1</span>(num1 + <span class="hljs-number">10</span>);<br>  &#125;;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;computed&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;onAdd&#125;</span>&gt;</span>+10<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>计算结果：&#123;num3&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="watch-的-React-实现"><a href="#watch-的-React-实现" class="headerlink" title="watch 的 React 实现"></a>watch 的 React 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useEffect, useState, useMemo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Computed</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [num1, setNum1] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">const</span> [num2, setNum2] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">const</span> num3 = <span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> num1 + num2;<br>  &#125;, [num1, num2]);<br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;监听num3变化&quot;</span>);<br>  &#125;, [num3]);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">setNum1</span>(num1 + <span class="hljs-number">10</span>);<br>  &#125;;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;computed&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;onAdd&#125;</span>&gt;</span>+10<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>计算结果：&#123;num3&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="provide-inject-的-React-实现"><a href="#provide-inject-的-React-实现" class="headerlink" title="provide/inject 的 React 实现"></a>provide/inject 的 React 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//context/index</span><br><span class="hljs-keyword">import</span> &#123; createContext &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">UserInfoContext</span> = <span class="hljs-title function_">createContext</span>(&#123;<br>  <span class="hljs-attr">userInfo</span>: &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// App（父级）</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">UserInfoContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./context/index&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">App</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">UserInfoContext.Provider</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">userInfo:</span> &#123; <span class="hljs-attr">name:</span> &quot;<span class="hljs-attr">前端胖头鱼</span>&quot; &#125; &#125;&#125;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">SomeComponent</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">UserInfoContext.Provider</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// SomeComponent（子级）</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useContext &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">UserInfoContext</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../context/index&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Provide</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// 通过userContext，使用定义好的UserInfoContext</span><br>  <span class="hljs-keyword">const</span> &#123; userInfo &#125; = <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">UserInfoContext</span>);<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;provide-inject&quot;</span>&gt;</span>&#123;userInfo.name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="slot-默认插槽-的-React-实现"><a href="#slot-默认插槽-的-React-实现" class="headerlink" title="slot 默认插槽 的 React 实现"></a>slot 默认插槽 的 React 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 子组件</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">props: CardProps</span>) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;card__body&quot;</span>&gt;</span></span><br><span class="language-xml">        &#123;/**每个组件都可以获取到 props.children。它包含组件的开始标签和结束标签之间的内容 */&#125;</span><br><span class="language-xml">        &#123;props.children&#125;</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 父组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Card</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Card&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我将被放在card组件的body区域内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Card</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="name-slot-具名插槽-的-React-实现"><a href="#name-slot-具名插槽-的-React-实现" class="headerlink" title="name slot 具名插槽 的 React 实现"></a>name slot 具名插槽 的 React 实现</h4><blockquote><p>当子组件需要根据展示多个 slot 时，就需要 具名插槽 来判断对应关系</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//子组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">props</span>) &#123;<br>  <span class="hljs-keyword">const</span> &#123; title, renderTitle &#125; = props;<br>  <span class="hljs-comment">// 如果指定了renderTtile，则使用renderTitle,否则使用默认的title</span><br>  <span class="hljs-keyword">let</span> titleEl = renderTitle ? <span class="hljs-title function_">renderTitle</span>() : <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;title&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;card__title&quot;</span>&gt;</span>&#123;titleEl&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//父组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Card</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Card&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Card</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">renderTitle</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;</span><br><span class="language-xml">          return <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>我是自定义的标题<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>;</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      &gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我将被放在card组件的body区域内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Card</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="scope-slot-作用域插槽-的-React-实现-也叫-propsRender"><a href="#scope-slot-作用域插槽-的-React-实现-也叫-propsRender" class="headerlink" title="scope slot 作用域插槽 的 React 实现(也叫 propsRender)"></a>scope slot 作用域插槽 的 React 实现(也叫 propsRender)</h4><blockquote><p>子组件展示父组件传过来的数据，即默认插槽。当父组件要展示子组件的 slot 内部的数据时，即子组件数据要传递到父组件去展示时，就是 作用域插槽</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 子组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">props</span>) &#123;<br>  <span class="hljs-keyword">const</span> [userInfo] = <span class="hljs-title function_">useState</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">25</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;);<br><br>  <span class="hljs-keyword">const</span> content = props.<span class="hljs-property">renderUserInfo</span> ? (<br>    props.<span class="hljs-title function_">renderUserInfo</span>(userInfo)<br>  ) : (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>姓名: &#123;userInfo.name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>年龄: &#123;userInfo.age&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>性别: &#123;userInfo.sex&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;人员信息&quot;</span>&gt;</span>&#123;content&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 父组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserCard</span>, &#123; <span class="hljs-title class_">UserInfo</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/UserCard&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">UserCard</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">renderUserInfo</span>=<span class="hljs-string">&#123;(userInfo:</span> <span class="hljs-attr">UserInfo</span>) =&gt;</span> &#123;</span><br><span class="language-xml">          return (</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>姓名： &#123;userInfo.name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">          );</span><br><span class="language-xml">        &#125;&#125;</span><br><span class="language-xml">      &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">UserCard</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="React-上的新内容"><a href="#React-上的新内容" class="headerlink" title="React 上的新内容"></a>React 上的新内容</h3><h4 id="useMemo-和-useEffect-的区别"><a href="#useMemo-和-useEffect-的区别" class="headerlink" title="useMemo 和 useEffect 的区别"></a>useMemo 和 useEffect 的区别</h4><h4 id="在-hooks-中，useEffect-用于模拟-App-的生命周期，"><a href="#在-hooks-中，useEffect-用于模拟-App-的生命周期，" class="headerlink" title="在 hooks 中，useEffect 用于模拟 App 的生命周期，"></a>在 hooks 中，useEffect 用于模拟 App 的生命周期，</h4><p>useEffect 内部可以写多个函数，当监听数组为空时，类似于 mounted 周期。并且不能直接 return 数据出去，需要 return 一个函数出去。return 出去的函数内部可以调用多个函数，类似 unmounted 周期</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">// componentDidMount</span><br>  <span class="hljs-title function_">init</span>();<br>  <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-comment">//componentWillUnmount</span><br>    <span class="hljs-title function_">leavePageCleanData</span>();<br>  &#125;;<br>&#125;, []);<br></code></pre></td></tr></table></figure><h4 id="useMemo-也能做监听，并常用于性能优化。解决过度渲染的问题"><a href="#useMemo-也能做监听，并常用于性能优化。解决过度渲染的问题" class="headerlink" title="useMemo 也能做监听，并常用于性能优化。解决过度渲染的问题"></a>useMemo 也能做监听，并常用于性能优化。解决过度渲染的问题</h4><p>过度调用、渲染</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 父组件</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> [name, setName] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">&quot;名称&quot;</span>);<br>  <span class="hljs-keyword">const</span> [content, setContent] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">&quot;内容&quot;</span>);<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> setName(new Date().getTime())&#125;&gt;name<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> setContent(new Date().getTime())&#125;&gt;content<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#123;name&#125;</span>&gt;</span>&#123;content&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 子组件</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Button</span>(<span class="hljs-params">&#123; name, children &#125;</span>) &#123;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">changeName</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;11&quot;</span>);<br>    <span class="hljs-keyword">return</span> name + <span class="hljs-string">&quot;改变name的方法&quot;</span>;<br>  &#125;<br>  <span class="hljs-keyword">const</span> otherName = <span class="hljs-title function_">changeName</span>(name);<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;otherName&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;children&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure><p>上面的这种形式，当你点击&lt;button onClick={() =&gt; setContent(new Date().getTime())}&gt;方法的时候。<br>正常来讲，我只调用了 setContent 的方法，子组件中，应该只会更新 content 对应的 children 的字段，而不会调用 otherName 上的 changeName 方法。但实际上子组件中都会重新渲染和调用 changeName 方法<br>此时，useMemo 可以实现针对对应字段改变的监听，而不是每次渲染都调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 子组件修改如下</span><br><span class="hljs-keyword">import</span> &#123; useMemo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Button</span> = (<span class="hljs-params">&#123; name, children &#125;</span>) =&gt; &#123;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">changeName</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;11&quot;</span>);<br>    <span class="hljs-keyword">return</span> name + <span class="hljs-string">&quot;改变name的方法&quot;</span>;<br>  &#125;<br>  <span class="hljs-comment">//此处添加useMemo</span><br>  <span class="hljs-keyword">const</span> otherName = <span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">changeName</span>(name);<br>  &#125;, [name]);<br>  <span class="hljs-comment">//此处添加useMemo</span><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;otherName&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;children&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Button</span>;<br></code></pre></td></tr></table></figure><p>这样，当你点击 setContent 时候，因为 otherName 监听的 name 字段未改变，所以不会调用 changeName 方法</p><h4 id="on-Do"><a href="#on-Do" class="headerlink" title="on Do"></a>on Do</h4>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>X-UI使用</title>
    <link href="/2023/06/03/X-UI%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/06/03/X-UI%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="X-UI使用记录（使用Ubuntu系统）"><a href="#X-UI使用记录（使用Ubuntu系统）" class="headerlink" title="X-UI使用记录（使用Ubuntu系统）"></a>X-UI使用记录（使用Ubuntu系统）</h2><p>X-UI可以快速搭建面板</p><span id="more"></span><h3 id="一键DD"><a href="#一键DD" class="headerlink" title="一键DD"></a>一键DD</h3><ol><li>下载脚本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh<br></code></pre></td></tr></table></figure><ol start="2"><li>安装系统(ubuntu或者debian)</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash reinstall.sh ubuntu 22.04<br></code></pre></td></tr></table></figure><p>OR</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash reinstall.sh debian 12<br></code></pre></td></tr></table></figure><p><a href="https://github.com/bin456789/reinstall">原作者git</a></p><h3 id="搭建X-UI"><a href="#搭建X-UI" class="headerlink" title="搭建X-UI"></a>搭建X-UI</h3><ol><li>执行脚本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)<br></code></pre></td></tr></table></figure><ol start="2"><li><p>输入面板登录账号密码和端口（8377）</p></li><li><p>打开8377端口</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ufw allow 8377<br></code></pre></td></tr></table></figure><ol start="4"><li>打开443端口（不知道是不是必须的，反正我执行了一次）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ufw allow 443<br></code></pre></td></tr></table></figure><p>也可以使用2053（2053端口同样也支持cf转发）</p><ol start="5"><li>浏览器中打开64.176.37.182:8377（64.176.37.182替换成自己的服务器ip）</li></ol><h3 id="进行ssl证书申请"><a href="#进行ssl证书申请" class="headerlink" title="进行ssl证书申请"></a>进行ssl证书申请</h3><h4 id="去cloudflare配置"><a href="#去cloudflare配置" class="headerlink" title="去cloudflare配置"></a>去cloudflare配置</h4><p><a href="https://www.cloudflare.com/zh-cn/">cloudflare官网</a></p><ol><li>添加自己的域名，然后cf将生成的dns解析地址，将地址填写到域名厂商dns解析处</li></ol><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/xui/cfdns.png" alt="cf地址"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/xui/yundns.png" alt="腾讯云云解析地址"></p><ol start="2"><li>先只使用cf的dns解析，暂时先不使用cdn，即：暂时先不开启橙色的云的图标</li></ol><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/xui/justdns.png" alt="腾讯云云解析地址"></p><ol start="3"><li>cf 申请global API</li></ol><p>右上角配置文件按钮 &gt; API令牌 &gt; API 密钥 &gt; Global API Key 点击查看 以获取key</p><ol start="3"><li>X-UI执行申请ssl证书</li></ol><p>需要提前准备以下数据：</p><blockquote><p>1.cf注册邮箱</p></blockquote><blockquote><p>2.cf Global API Key</p></blockquote><blockquote><p>3.域名</p></blockquote><ul><li>执行脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">x-ui<br></code></pre></td></tr></table></figure><ul><li><p>选择16,按照提示输入3dweb.top域名和其他信息</p></li><li><p>脚本最后会执行到成功</p></li></ul><h3 id="X-UI面板中添加入站地址"><a href="#X-UI面板中添加入站地址" class="headerlink" title="X-UI面板中添加入站地址"></a>X-UI面板中添加入站地址</h3><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/xui/vmess.png" alt="入站列表"></p><p>之前用的是443，同样如果之前的端口改成了2053，此处配置也需要改成2053</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在X-UI的入站列表里点击查看，即可出现弹窗，点击复制链接，然后复制到ray里即可</p><h3 id="开启cdn"><a href="#开启cdn" class="headerlink" title="开启cdn"></a>开启cdn</h3><p>此时可以进入cf开启cdn，即将橙色的小云朵打开</p><h3 id="还有一个3x-ui应该也是傻瓜化部署"><a href="#还有一个3x-ui应该也是傻瓜化部署" class="headerlink" title="还有一个3x-ui应该也是傻瓜化部署"></a>还有一个3x-ui应该也是傻瓜化部署</h3><p><a href="https://github.com/MHSanaei/3x-ui">3x-ui</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>x-ui</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Canvas实现定制化图表</title>
    <link href="/2023/05/01/Canvas%E5%AE%9E%E7%8E%B0%E5%AE%9A%E5%88%B6%E5%8C%96%E5%9B%BE%E8%A1%A8/"/>
    <url>/2023/05/01/Canvas%E5%AE%9E%E7%8E%B0%E5%AE%9A%E5%88%B6%E5%8C%96%E5%9B%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="通过-canvas-绘制双柱形图"><a href="#通过-canvas-绘制双柱形图" class="headerlink" title="通过 canvas 绘制双柱形图"></a>通过 canvas 绘制双柱形图</h2><span id="more"></span><h3 id="实现样式"><a href="#实现样式" class="headerlink" title="实现样式"></a>实现样式</h3><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%8F%8C%E6%9F%B1%E5%9B%BE.png" alt="双柱状图样式"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E6%A8%AA%E6%9F%B1%E5%9B%BE.png" alt="横单柱状图样式"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E7%AB%96%E5%8D%95%E6%9F%B1%E5%9B%BE.png" alt="竖单柱状图样式"></p><h3 id="参考样式"><a href="#参考样式" class="headerlink" title="参考样式"></a>参考样式</h3><p>实现步骤直接参考<a href="https://lenmon54231.github.io/2022/03/25/%E9%80%9A%E8%BF%87canvas%E5%8E%BB%E7%BB%98%E5%88%B6%E9%A5%BC%E7%8A%B6%E5%9B%BE/">通过 canvas 实现饼状图</a></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%8F%8C%E6%9F%B1%E7%8A%B6%E5%9B%BE.png" alt="双柱状图样式"></p><h3 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h3><blockquote><p>代码如下:</p></blockquote><blockquote><p>父级使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;canvas&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="hljs-title function_">nextTick</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  drawPieChart.<span class="hljs-property">value</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DoubleBarChart</span>(&#123;<br>    <span class="hljs-attr">data</span>: <span class="hljs-title function_">unref</span>(canvasData),<br>    <span class="hljs-attr">width</span>: <span class="hljs-title function_">unref</span>(<span class="hljs-number">800</span>),<br>    <span class="hljs-attr">height</span>: <span class="hljs-title function_">unref</span>(<span class="hljs-number">250</span>),<br>    <span class="hljs-attr">root</span>: <span class="hljs-title function_">unref</span>(root) <span class="hljs-keyword">as</span> <span class="hljs-title class_">HTMLElement</span>,<br>    <span class="hljs-attr">setting</span>: <span class="hljs-title function_">unref</span>(setting),<br>    <span class="hljs-attr">onEmit</span>: <span class="hljs-function">(<span class="hljs-params">data: Source</span>) =&gt;</span> <span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;onSelect&#x27;</span>, data),<br>  &#125;);<br>  drawPieChart.<span class="hljs-property">value</span>?.<span class="hljs-title function_">init</span>();<br>&#125;);<br><br></code></pre></td></tr></table></figure><blockquote><p>双柱状图组件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><code class="hljs js">type dataObject = &#123;<br>  <span class="hljs-attr">id</span>: number;<br>  <span class="hljs-attr">title</span>: string;<br>  <span class="hljs-attr">color</span>: string;<br>  <span class="hljs-attr">total</span>: number;<br>  <span class="hljs-attr">pass</span>: number;<br>  <span class="hljs-attr">passColor</span>: string;<br>  <span class="hljs-attr">score</span>: number;<br>  <span class="hljs-attr">scoreColor</span>: string;<br>  <span class="hljs-attr">source</span>: string;<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DoubleBarChart</span> &#123;<br>  private width = <span class="hljs-number">0</span>;<br>  private height = <span class="hljs-number">0</span>;<br>  private data = [];<br>  private setting = &#123;&#125;;<br>  private onEmit = <span class="hljs-function">() =&gt;</span> &#123;&#125;;<br>  private <span class="hljs-attr">root</span>: <span class="hljs-title class_">HTMLElement</span> | <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;<br>  private <span class="hljs-attr">stage</span>: any = <span class="hljs-literal">null</span>;<br><br>  private padding = [<span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">40</span>]; <span class="hljs-comment">//幕布的边距（canvas的距离是从左上角开始）</span><br>  private paddingLeft = <span class="hljs-number">0</span>; <span class="hljs-comment">// 双柱状图左侧距离起始坐标的距离</span><br>  private paddingRight = <span class="hljs-number">0</span>; <span class="hljs-comment">// 双柱状图右侧距离起始坐标的距离</span><br>  private paddingTop = <span class="hljs-number">0</span>; <span class="hljs-comment">// 双柱状图顶侧距离起始坐标的距离</span><br>  private paddingBottom = <span class="hljs-number">0</span>; <span class="hljs-comment">// 双柱状图底侧距离起始坐标的距离</span><br>  private maxTotal = <span class="hljs-number">0</span>; <span class="hljs-comment">// 整个data中最大的值，用来计算每个柱形的相对高度</span><br>  private totalHeight = <span class="hljs-number">0</span>; <span class="hljs-comment">//坐标系（双柱状图）的高度</span><br>  private itemPadding = <span class="hljs-number">20</span>; <span class="hljs-comment">// 每个柱形之间的间隔</span><br><br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">options</span>) &#123;<br>    <span class="hljs-keyword">const</span> &#123; data, width, height, root, setting, onEmit &#125; = options;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">root</span> = root; <span class="hljs-comment">// w: canvas 父级元素</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> = width;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> = height;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">0</span>] - <span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">2</span>];<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> = <span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">3</span>]);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingRight</span> = <span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">1</span>]);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> = <span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">0</span>]);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingBottom</span> = <span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">2</span>]);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span> = data;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span> = setting;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">onEmit</span> = onEmit;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">omg</span>(&#123;<br>      <span class="hljs-attr">element</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;canvas&#x27;</span>),<br>      <span class="hljs-attr">width</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>,<br>      <span class="hljs-attr">height</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span>,<br>      <span class="hljs-attr">enableGlobalTranslate</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 关闭全局平移(可以用鼠标拖动canvas)</span><br>      <span class="hljs-attr">enableGlobalScale</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 关闭全局缩放</span><br>    &#125;);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">init</span>(); <span class="hljs-comment">// 初始化调用omg的方法</span><br>    &#125;<br>  &#125;<br>  <span class="hljs-title function_">init</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBase</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">show</span>();<br>  &#125;<br>  <span class="hljs-title function_">drawBase</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">bc</span>();<br>      <span class="hljs-keyword">const</span> <span class="hljs-attr">bigOne</span>: dataObject = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-title function_">sort</span>(<br>        <span class="hljs-function">(<span class="hljs-params">a: dataObject, b: dataObject</span>) =&gt;</span> b.<span class="hljs-property">total</span> - a.<span class="hljs-property">total</span>,<br>      )[<span class="hljs-number">0</span>];<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span> = bigOne?.<span class="hljs-property">total</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawTick</span>(); <span class="hljs-comment">// 画刻度线</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawTotalRectangle</span>(item, index); <span class="hljs-comment">// 画总分柱形</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawCurrentRectangle</span>(item, index); <span class="hljs-comment">// 画当前分柱形</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawPassLine</span>(item, index); <span class="hljs-comment">// 画通过率折线</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawTitle</span>(item, index); <span class="hljs-comment">// 画标题</span><br>      &#125;);<br>    &#125;<br>  &#125;<br>  <span class="hljs-title function_">reset</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">this</span>.<span class="hljs-property">root</span>?.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#canvas&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (canvas) &#123;<br>      <span class="hljs-keyword">const</span> _canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;canvas&#x27;</span>);<br>      _canvas.<span class="hljs-property">id</span> = <span class="hljs-string">&#x27;canvas&#x27;</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">root</span>?.<span class="hljs-title function_">removeChild</span>(canvas);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">root</span>?.<span class="hljs-title function_">appendChild</span>(_canvas);<br>    &#125;<br>  &#125;<br>  <span class="hljs-comment">// 画当前矩形背景图</span><br>  <span class="hljs-title function_">bc</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 画背景</span><br>    <span class="hljs-keyword">const</span> rect = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">rectangle</span>(&#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">width</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>,<br>      <span class="hljs-attr">height</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span>,<br>      <span class="hljs-attr">radius</span>: &#123;<br>        <span class="hljs-attr">tl</span>: <span class="hljs-number">6</span>, <span class="hljs-comment">// 左上</span><br>        <span class="hljs-attr">tr</span>: <span class="hljs-number">6</span>, <span class="hljs-comment">// 右上</span><br>        <span class="hljs-attr">bl</span>: <span class="hljs-number">6</span>, <span class="hljs-comment">// 左下</span><br>        <span class="hljs-attr">br</span>: <span class="hljs-number">6</span>, <span class="hljs-comment">// 右下</span><br>      &#125;,<br>      <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#fff&#x27;</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(rect);<br>  &#125;<br>  <span class="hljs-comment">// 画刻度线</span><br>  <span class="hljs-title function_">drawTick</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 画一条直线，包含横轴和纵轴</span><br>    <span class="hljs-keyword">const</span> polyline = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">line</span>(&#123;<br>      <span class="hljs-attr">matrix</span>: [<br>        [<span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span>],<br>        [<span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingBottom</span>],<br>        [<span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingRight</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingBottom</span>],<br>      ],<br>    &#125;);<br>    <span class="hljs-comment">// 画十个纵轴刻度</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; <span class="hljs-number">10</span>; index++) &#123;<br>      <span class="hljs-keyword">const</span> x = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span>;<br>      <span class="hljs-keyword">const</span> y = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> + ((<span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">0</span>] - <span class="hljs-variable language_">this</span>.<span class="hljs-property">padding</span>[<span class="hljs-number">2</span>]) / <span class="hljs-number">10</span>) * index;<br>      <span class="hljs-keyword">const</span> <span class="hljs-title class_">YNumber</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span> - (<span class="hljs-title class_">Number</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span>) / <span class="hljs-number">10</span>) * index));<br>      <span class="hljs-keyword">const</span> <span class="hljs-title class_">YTick</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">line</span>(&#123;<br>        <span class="hljs-attr">matrix</span>: [<br>          [x, y],<br>          [x + <span class="hljs-number">4</span>, y],<br>        ],<br>      &#125;);<br>      <span class="hljs-keyword">const</span> <span class="hljs-title class_">YTickText</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">text</span>(&#123;<br>        <span class="hljs-attr">text</span>: <span class="hljs-title class_">YNumber</span>,<br>        <span class="hljs-attr">x</span>: x - <span class="hljs-number">15</span>,<br>        <span class="hljs-attr">y</span>: y - <span class="hljs-number">5</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">40</span>,<br>        <span class="hljs-attr">height</span>: <span class="hljs-number">40</span>,<br>        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#000&#x27;</span>,<br>        <span class="hljs-attr">fontSize</span>: <span class="hljs-number">8</span>,<br>      &#125;);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-title class_">YTickText</span>);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(<span class="hljs-title class_">YTick</span>);<br>    &#125;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(polyline);<br>  &#125;<br>  <span class="hljs-comment">// 画总分</span><br>  <span class="hljs-title function_">drawTotalRectangle</span>(<span class="hljs-params">item, index</span>) &#123;<br>    <span class="hljs-keyword">const</span> x = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> + index * <span class="hljs-number">40</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">itemPadding</span>; <span class="hljs-comment">// 矩形的起始X坐标</span><br>    <span class="hljs-keyword">const</span> height = <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> * (item.<span class="hljs-property">total</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span>); <span class="hljs-comment">// 矩形的高度</span><br>    <span class="hljs-keyword">const</span> y = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> - height; <span class="hljs-comment">// 矩形的起始Y坐标</span><br>    <span class="hljs-keyword">const</span> rect = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">rectangle</span>(&#123;<br>      <span class="hljs-attr">x</span>: x,<br>      <span class="hljs-attr">y</span>: y,<br>      <span class="hljs-attr">width</span>: <span class="hljs-number">10</span>,<br>      <span class="hljs-attr">height</span>: height,<br>      <span class="hljs-attr">radius</span>: &#123;<br>        <span class="hljs-attr">tl</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 左上</span><br>        <span class="hljs-attr">tr</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 右上</span><br>        <span class="hljs-attr">bl</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 左下</span><br>        <span class="hljs-attr">br</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 右下</span><br>      &#125;,<br>      <span class="hljs-attr">color</span>: item.<span class="hljs-property">scoreColor</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(rect);<br>  &#125;<br>  <span class="hljs-comment">// 画当前分</span><br>  <span class="hljs-title function_">drawCurrentRectangle</span>(<span class="hljs-params">item, index</span>) &#123;<br>    <span class="hljs-keyword">const</span> x = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> + <span class="hljs-number">10</span> + index * <span class="hljs-number">40</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">itemPadding</span>;<br>    <span class="hljs-keyword">const</span> height = <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> * (item.<span class="hljs-property">total</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span>) * (item.<span class="hljs-property">score</span> / item.<span class="hljs-property">total</span>);<br>    <span class="hljs-keyword">const</span> y = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> - height;<br>    <span class="hljs-keyword">const</span> rect = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">rectangle</span>(&#123;<br>      <span class="hljs-attr">x</span>: x,<br>      <span class="hljs-attr">y</span>: y,<br>      <span class="hljs-attr">width</span>: <span class="hljs-number">10</span>,<br>      <span class="hljs-attr">height</span>: height,<br>      <span class="hljs-attr">radius</span>: &#123;<br>        <span class="hljs-attr">tl</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 左上</span><br>        <span class="hljs-attr">tr</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 右上</span><br>        <span class="hljs-attr">bl</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 左下</span><br>        <span class="hljs-attr">br</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 右下</span><br>      &#125;,<br>      <span class="hljs-attr">color</span>: item.<span class="hljs-property">color</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(rect);<br>  &#125;<br>  <span class="hljs-comment">// 画通过率线</span><br>  <span class="hljs-title function_">drawPassLine</span>(<span class="hljs-params">item, index</span>) &#123;<br>    <span class="hljs-keyword">const</span> leftX = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> - <span class="hljs-number">5</span> + index * <span class="hljs-number">40</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">itemPadding</span>;<br>    <span class="hljs-keyword">const</span> Y =<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> +<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> * (<span class="hljs-number">1</span> - (item.<span class="hljs-property">total</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span>) * (item.<span class="hljs-property">pass</span> / item.<span class="hljs-property">total</span>));<br>    <span class="hljs-keyword">const</span> rightX = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> + <span class="hljs-number">25</span> + index * <span class="hljs-number">40</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">itemPadding</span>;<br>    <span class="hljs-keyword">const</span> polyline = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">line</span>(&#123;<br>      <span class="hljs-attr">matrix</span>: [<br>        [leftX, Y],<br>        [rightX, Y],<br>      ],<br>      <span class="hljs-attr">color</span>: item.<span class="hljs-property">passColor</span>,<br>      <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">4</span>,<br>      <span class="hljs-attr">dash</span>: [<span class="hljs-number">4</span>],<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(polyline);<br>  &#125;<br>  <span class="hljs-comment">// 画标题</span><br>  <span class="hljs-title function_">drawTitle</span>(<span class="hljs-params">item, index</span>) &#123;<br>    <span class="hljs-keyword">const</span> x = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> + index * <span class="hljs-number">40</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">itemPadding</span> - <span class="hljs-number">25</span>;<br>    <span class="hljs-keyword">const</span> y = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> + <span class="hljs-number">5</span>;<br>    <span class="hljs-keyword">const</span> text = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">text</span>(&#123;<br>      <span class="hljs-attr">text</span>: item.<span class="hljs-property">title</span>,<br>      <span class="hljs-attr">x</span>: x,<br>      <span class="hljs-attr">y</span>: y,<br>      <span class="hljs-attr">width</span>: <span class="hljs-number">40</span>,<br>      <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#000&#x27;</span>,<br>      <span class="hljs-attr">fontSize</span>: <span class="hljs-number">8</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(text);<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="添加动画"><a href="#添加动画" class="headerlink" title="添加动画"></a>添加动画</h3><p>动画如下:</p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%8F%8C%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%8A%A8%E7%94%BB.gif" alt="双柱状图动画"></p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>柱状图定位是通过（x，y，width，height）定位，即:通过 x，y 确定左上角的起始点，然后通过 width 和 height 从上至下，从左至右绘制出矩形。</p><p>但是这不符合常见的图形库样式，即:从坐标轴 0 点开始逐渐升高。</p><p>所以采用 一个白色的柱形图 覆盖上，然后逐步 减少其高度，来实现 柱形图慢慢升高的动画</p><h4 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs js">  <span class="hljs-comment">// 画总分</span><br>  <span class="hljs-title function_">drawTotalRectangle</span>(<span class="hljs-params">item, index</span>) &#123;<br>    <span class="hljs-keyword">const</span> x = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingLeft</span> + index * <span class="hljs-number">40</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">itemPadding</span>; <span class="hljs-comment">// 矩形的起始X坐标</span><br>    <span class="hljs-keyword">const</span> height = <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> * (item.<span class="hljs-property">total</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotal</span>); <span class="hljs-comment">// 矩形的高度</span><br>    <span class="hljs-keyword">const</span> y = <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> - height; <span class="hljs-comment">// 矩形的起始Y坐标</span><br>    <span class="hljs-keyword">const</span> rect = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">rectangle</span>(&#123;<br>      <span class="hljs-attr">x</span>: x,<br>      <span class="hljs-attr">y</span>: y,<br>      <span class="hljs-attr">width</span>: <span class="hljs-number">10</span>,<br>      <span class="hljs-attr">height</span>: height,<br>      <span class="hljs-comment">// height: 0,</span><br>      <span class="hljs-attr">radius</span>: &#123;<br>        <span class="hljs-attr">tl</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 左上</span><br>        <span class="hljs-attr">tr</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 右上</span><br>        <span class="hljs-attr">bl</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 左下</span><br>        <span class="hljs-attr">br</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 右下</span><br>      &#125;,<br>      <span class="hljs-attr">color</span>: item.<span class="hljs-property">scoreColor</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(rect); <span class="hljs-comment">// 先画出正常的总分柱形图</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">addAnimation</span>(x, <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span> - height); <span class="hljs-comment">// 再画覆盖其上的白色柱形图</span><br>  &#125;<br>  <span class="hljs-comment">// 添加白色柱状图，以实现动画</span><br>  <span class="hljs-title function_">addAnimation</span>(<span class="hljs-params">x, y, height</span>) &#123;<br>    <span class="hljs-keyword">const</span> whiteRect = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">rectangle</span>(&#123;<br>      <span class="hljs-attr">x</span>: x,<br>      <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">paddingTop</span>,<br>      <span class="hljs-attr">width</span>: <span class="hljs-number">10</span>,<br>      <span class="hljs-attr">height</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalHeight</span>,<br>      <span class="hljs-attr">radius</span>: &#123;<br>        <span class="hljs-attr">tl</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 左上</span><br>        <span class="hljs-attr">tr</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 右上</span><br>        <span class="hljs-attr">bl</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 左下</span><br>        <span class="hljs-attr">br</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 右下</span><br>      &#125;,<br>      <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#fff&#x27;</span>,<br>    &#125;);<br>    whiteRect.<span class="hljs-title function_">animateTo</span>(&#123;<br>      <span class="hljs-attr">y</span>: y,<br>      <span class="hljs-attr">height</span>: height,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-title function_">addChild</span>(whiteRect);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="animateTo-函数说明"><a href="#animateTo-函数说明" class="headerlink" title="animateTo 函数说明"></a>animateTo 函数说明</h4><p>文档中没有说明 animateTo 函数的具体参数，只给了一个例子，大概用法如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span>: &#123;keys | Object&#125;   -- 动画结束时的值，是个对象</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span>: &#123;config | Object&#125; -- 动画的一些配置项</span><br><span class="hljs-comment"> */</span><br>shape.<span class="hljs-title function_">animateTo</span>(<br>  &#123;<br>    <span class="hljs-attr">moveX</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">moveY</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">radius</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-attr">startAngle</span>: <span class="hljs-number">360</span> / <span class="hljs-number">18</span>,<br>    <span class="hljs-attr">endAngle</span>: <span class="hljs-number">360</span> / <span class="hljs-number">18</span>,<br>    <span class="hljs-attr">x</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-attr">y</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>    <span class="hljs-attr">height</span>: <span class="hljs-number">200</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>, <span class="hljs-comment">// 动画持续事件，默认 500 毫秒</span><br>    <span class="hljs-attr">delay</span>: <span class="hljs-number">500</span>, <span class="hljs-comment">// 动画延迟的事件，默认 0 毫秒</span><br>    <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;bounceOut&quot;</span>, <span class="hljs-comment">// 动画的补间类型，默认 &#x27;linear&#x27; （匀速）</span><br>    <span class="hljs-attr">onStart</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">keys</span>) &#123;<br>      <span class="hljs-comment">/**</span><br><span class="hljs-comment">       * <span class="hljs-doctag">@param</span>: keys</span><br><span class="hljs-comment">       * keys是一个对象，存放着图形运动到当前的一些坐标和内部数据。</span><br><span class="hljs-comment">       * same below</span><br><span class="hljs-comment">       */</span><br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(keys.<span class="hljs-property">x</span>, keys.<span class="hljs-property">y</span>, keys.<span class="hljs-property">width</span>, keys.<span class="hljs-property">height</span>);<br>    &#125;,<br>    <span class="hljs-attr">onUpdate</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">keys</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(keys.<span class="hljs-property">x</span>, keys.<span class="hljs-property">y</span>, keys.<span class="hljs-property">width</span>, keys.<span class="hljs-property">height</span>);<br>    &#125;,<br>    <span class="hljs-attr">onFinish</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">keys</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(keys.<span class="hljs-property">x</span>, keys.<span class="hljs-property">y</span>, keys.<span class="hljs-property">width</span>, keys.<span class="hljs-property">height</span>);<br>    &#125;,<br>  &#125;<br>);<br></code></pre></td></tr></table></figure><ul><li>moveX:沿横坐标移动</li><li>moveY:沿纵坐标移动</li><li>radius: 沿半径方向移动（主要用于原型、扇形、圆弧）</li><li>startAngle: 起始角度</li><li>endAngle:结束角度</li><li>针对矩形的动画:<br>x: 100,<br>y: 100,<br>width: 200,<br>height: 200,<br>通过改变 height 来实现矩形高度变化</li></ul><h3 id="实现样式-1"><a href="#实现样式-1" class="headerlink" title="实现样式"></a>实现样式</h3><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E9%9B%B7%E8%BE%BE%E5%9B%BE.png" alt="雷达图"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E9%A5%BC%E7%8A%B6%E5%9B%BE.png" alt="饼状图"></p><h3 id="实现饼状图思路"><a href="#实现饼状图思路" class="headerlink" title="实现饼状图思路"></a>实现饼状图思路</h3><h4 id="技能和文档"><a href="#技能和文档" class="headerlink" title="技能和文档"></a>技能和文档</h4><blockquote><p>1、 <a href="https://github.com/PengJiyuan/omg/blob/master/README.md">omg 文档</a>，2、 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API">canvas 文档</a>，3、图表库使用经验，可以参考<a href="https://antv-g2.gitee.io/zh/docs/api/general/chart">G2 文档</a>，逻辑比较相似</p></blockquote><h4 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h4><p>绘制顺序如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js">private <span class="hljs-title function_">drawBasic</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">dataSource</span>.<span class="hljs-property">length</span>; index++) &#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">item</span>: <span class="hljs-title class_">Source</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">dataSource</span>[index];<br>    <span class="hljs-keyword">const</span> endAngle = <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span> + <span class="hljs-number">360</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">dataSource</span>.<span class="hljs-property">length</span>;<br><br>    <span class="hljs-keyword">const</span> &#123; x, y &#125; = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawTotal</span>(item, endAngle); <span class="hljs-comment">//绘制总分的扇形</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawPass</span>(item, endAngle); <span class="hljs-comment">//绘制及格分的扇形</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawScore</span>(item, endAngle); <span class="hljs-comment">//绘制得分的扇形</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawTick</span>(endAngle); <span class="hljs-comment">//绘制刻度线</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawEvent</span>(item, endAngle); <span class="hljs-comment">// 绑定事件，给出半透明蒙层和ToolTip的Dom显示逻辑</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isLabel</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawText</span>(item, &#123; x, y &#125;); <span class="hljs-comment">//绘制周围的TitleLabel</span><br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span> = endAngle; <span class="hljs-comment">// w: 重置起始角度</span><br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="实现总分扇形（drawTotal-其他两个扇形类似）"><a href="#实现总分扇形（drawTotal-其他两个扇形类似）" class="headerlink" title="实现总分扇形（drawTotal-其他两个扇形类似）"></a>实现总分扇形（drawTotal-其他两个扇形类似）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js">private <span class="hljs-title function_">drawTotal</span>(<span class="hljs-params">item: Source, endAngle: number</span>) &#123;<br>  <span class="hljs-keyword">const</span> sector = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">arc</span>(&#123;<br>    <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">radius</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>,<br>    <span class="hljs-attr">startAngle</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>,<br>    endAngle,<br>    <span class="hljs-attr">color</span>: item.<span class="hljs-property">color</span>,<br>    <span class="hljs-attr">strokeColor</span>: <span class="hljs-string">&#x27;rgba(50, 115, 242, .8)&#x27;</span>,<br>    <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-attr">style</span>: <span class="hljs-string">&#x27;fill,stroke&#x27;</span>,<br>  &#125;);<br><br>  <span class="hljs-keyword">const</span> pointLine = <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> + <span class="hljs-number">15</span>;<br>  <span class="hljs-keyword">const</span> sAngle = (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>;<br>  <span class="hljs-keyword">const</span> eAngle = (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * endAngle;<br>  <span class="hljs-comment">// s:计算每个扇形角度的一半</span><br>  <span class="hljs-keyword">const</span> halfAngle = <span class="hljs-number">0.5</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> + sAngle + (eAngle - sAngle) / <span class="hljs-number">2</span>;<br>  <span class="hljs-comment">// s: 通过三角函数求出扇形顶点位置</span><br>  <span class="hljs-keyword">const</span> x = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(halfAngle) * pointLine);<br>  <span class="hljs-keyword">const</span> y = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span> - <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(halfAngle) * pointLine);<br><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(sector);<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(sector);<br><br>  <span class="hljs-keyword">return</span> &#123; x, y &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>this.stage?.graphs.arc：arc 代表扇形</li><li>radius：扇形的半径</li><li>startAngle,endAngle：扇形的起始角度和结束角度<ul><li>起始角度看起来是固定的 0，实际上每次循环后，都会将 endAngle 赋值到 startAngle</li><li>this.angle = endAngle; // w: 重置起始角度</li></ul></li><li>strokeColor：边框的颜色</li><li>color: 填充颜色</li><li>style: ‘fill,stroke’ // fill – 填充， stroke – 描边<ul><li>这里有改了源码用于支持同时传入两个样式 style，所以需要本地放置 omg.js 来实现</li></ul></li><li>this.stage?.addChild：将绘制的图形添加到待绘制列表中</li><li>return { x, y }：返回 x，y 用来计算鼠标移入后，显示的 Tooltip 位置</li></ul><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E6%80%BB%E5%88%86%E6%89%87%E5%BD%A2.png" alt="各种分数图片"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%BE%97%E5%88%86%E6%89%87%E5%BD%A2.png" alt="各种分数图片"></p><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%8F%8A%E6%A0%BC%E5%88%86%E6%89%87%E5%BD%A2.png" alt="各种分数图片"></p><h4 id="圆心上的图片"><a href="#圆心上的图片" class="headerlink" title="圆心上的图片"></a>圆心上的图片</h4><p>通过 css 的绝对定位+after 内放置图形实现的</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attr">--image-base</span>: calc(var(<span class="hljs-attr">--width</span>) / 2.7 - var(<span class="hljs-attr">--padding</span>));<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">var</span>(--image-base);<br>  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">var</span>(--image-base);<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">&quot;/@/assets/images/energy/base@2x.jpeg&quot;</span>);<br>  <span class="hljs-attribute">background-size</span>: contain;<br>  <span class="hljs-attribute">background-position</span>: center center;<br>  <span class="hljs-attribute">background-repeat</span>: no-repeat;<br><br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="坐标系（刻度线）"><a href="#坐标系（刻度线）" class="headerlink" title="坐标系（刻度线）"></a>坐标系（刻度线）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">private <span class="hljs-title function_">drawTick</span>(<span class="hljs-params">endAngle: number</span>) &#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>.<span class="hljs-property">length</span>; index++) &#123;<br>    <span class="hljs-keyword">const</span> item = <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>[index];<br>    <span class="hljs-keyword">const</span> arc = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">arc</span>(&#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">radius</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> * item + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isImage</span> ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiple</span> : <span class="hljs-number">0</span>),<br>      <span class="hljs-attr">startAngle</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>,<br>      endAngle,<br>      <span class="hljs-attr">color</span>: item === <span class="hljs-number">0</span> ? <span class="hljs-string">&#x27;rgba(50, 115, 242, 1)&#x27;</span> : <span class="hljs-string">&#x27;rgba(50, 115, 242, .8)&#x27;</span>,<br>      <span class="hljs-attr">style</span>: item === <span class="hljs-number">0</span> ? <span class="hljs-string">&#x27;fill&#x27;</span> : <span class="hljs-string">&#x27;stroke&#x27;</span>, <span class="hljs-comment">// fill -- 填充， stroke -- 描边</span><br>      <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">4</span>,<br>    &#125;);<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(arc);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(arc);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>坐标系是绘制扇形构成的，一共从内到外，绘制 10 个扇形构成的，所以一共要绘制 180 次扇形来形成极点坐标系。<br>当绘制第一个扇形时，直接采用的 fill 用来填充中心的颜色。</p><blockquote><p>需要注意的是 radius 的计算</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> = options.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> - (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isLabel</span> ? <span class="hljs-number">95</span> : <span class="hljs-number">20</span>); <span class="hljs-comment">// i: 40 为 canvas 内边距</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isImage</span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> = (<span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiple</span>) / <span class="hljs-number">10</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-number">10</span>;<br>&#125; <span class="hljs-comment">// i: 刻度线</span><br>multiple = <span class="hljs-number">2.7</span>; <span class="hljs-comment">// 图表中心图片的缩小比例</span><br><br>radius = <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> * item + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isImage</span> ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiple</span> : <span class="hljs-number">0</span>),<br></code></pre></td></tr></table></figure><blockquote><p>this.circleRadius : 每一层圆圈的间隔<br>(this.setting.isImage ? this.radius / this.multiple : 0):如果中心有图片 isImage，就会从半径/2.7 开始作为初始半径，一层层往外绘制，从而将中间空出来。</p></blockquote><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%88%BB%E5%BA%A6%E7%BA%BF.png" alt="刻度线图片"></p><h4 id="合成上述组件实现饼状图"><a href="#合成上述组件实现饼状图" class="headerlink" title="合成上述组件实现饼状图"></a>合成上述组件实现饼状图</h4><p>将上述的 各种得分图、坐标系图、中心图片 添加到幕布上，然后调用渲染方法，即生成饼状图</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBasic</span>();<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">show</span>();<br></code></pre></td></tr></table></figure><h4 id="绑定事件"><a href="#绑定事件" class="headerlink" title="绑定事件"></a>绑定事件</h4><p>主要有三个事件：鼠标移入，鼠标移出，移动端的触摸点击<br>简化代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sector = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span><br>      .<span class="hljs-title function_">arc</span>(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">radius</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>,<br>        <span class="hljs-attr">startAngle</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>,<br>        endAngle,<br>        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;transparent&#x27;</span>,<br>        <span class="hljs-attr">style</span>: <span class="hljs-string">&#x27;fill&#x27;</span>,<br>      &#125;)<br>      .<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">cur: any</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mutual</span>(<span class="hljs-literal">true</span>, cur, data);<br>      &#125;)<br>      .<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;mouseleave&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">cur: any</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mutual</span>(<span class="hljs-literal">false</span>, cur, data);<br>      &#125;)<br>      .<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;touchstart&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">cur: any</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">mutual</span>(<span class="hljs-literal">true</span>, cur, data);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onEmit</span>(data);<br>      &#125;);<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(sector);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(sector);<br>  &#125;<br></code></pre></td></tr></table></figure><p>web 端为例：1、移入时，将显示半透明的蒙层，并在右侧显示对应的 tooltip；2、移出时，将其 remove 掉<br>简化代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js">private <span class="hljs-title function_">mutual</span>(<span class="hljs-params">is: boolean, cur: any, data: Source</span>) &#123;<br>  <span class="hljs-keyword">if</span> (is) &#123;<br>    <span class="hljs-comment">// 改成半透明</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">element</span>.<span class="hljs-property">style</span>.<span class="hljs-property">cursor</span> = <span class="hljs-string">&#x27;pointer&#x27;</span>;<br>    cur.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;rgba(255,255,255, 0.4)&#x27;</span>;<br>    cur.<span class="hljs-property">style</span> = <span class="hljs-string">&#x27;fill&#x27;</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">redraw</span>();<br>    <span class="hljs-comment">// 生成一个tooltip的Dom</span><br>    <span class="hljs-keyword">const</span> dom = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createBubble</span>(data);<br>    dom.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&#x27;block&#x27;</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">currentCur</span> = cur;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">root</span>?.<span class="hljs-title function_">appendChild</span>(dom);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 改成透明</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>.<span class="hljs-property">element</span>.<span class="hljs-property">style</span>.<span class="hljs-property">cursor</span> = <span class="hljs-string">&#x27;default&#x27;</span>;<br>    cur.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;transparent&#x27;</span>;<br>    cur.<span class="hljs-property">style</span> = <span class="hljs-string">&#x27;fill&#x27;</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">redraw</span>();<br>    <span class="hljs-comment">// 移出对应Dom</span><br>    <span class="hljs-keyword">const</span> dom = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">`bubble-<span class="hljs-subst">$&#123;data.id&#125;</span>`</span>);<br>    <span class="hljs-keyword">if</span> (dom) &#123;<br>      dom.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&#x27;none&#x27;</span>;<br>      dom.<span class="hljs-property">parentNode</span>?.<span class="hljs-title function_">removeChild</span>(dom);<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>mutual 主要做两件事</p><ol><li>is 为 true 时：将 cur 当前的扇形从透明改成半透明，并且 createBubble 生成一个 tooltip 的 Dom 元素，添加到 root 父元素上</li><li>is 为 false 时： 将 cur 当前的扇形从半透明改成透明，并且从 root 移除 tooltip</li></ol><blockquote><p>createBubble 是生成一个 Dom 元素，并且返回出去。Dom 元素通过 document.createElement(‘div’)添加 InnerHTML 生成</p></blockquote><h4 id="绘制移动端的-TitleLabel"><a href="#绘制移动端的-TitleLabel" class="headerlink" title="绘制移动端的 TitleLabel"></a>绘制移动端的 TitleLabel</h4><p>圆形坐标系，周围生成的一圈 label，表示对应的 能力名称</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js">private <span class="hljs-title function_">drawText</span>(<span class="hljs-params">item: Source, &#123; x, y &#125;</span>) &#123;<br>    <span class="hljs-keyword">const</span> _x = x;<br>    <span class="hljs-keyword">const</span> _y = y;<br>    <span class="hljs-keyword">const</span> text = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">customDrawText</span>(&#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> &gt; x ? _x - <span class="hljs-number">4</span> : _x + <span class="hljs-number">4</span>,<br>      <span class="hljs-attr">y</span>: _y - <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">color</span>: item.<span class="hljs-property">scoreColor</span>,<br>      <span class="hljs-attr">text</span>: item.<span class="hljs-property">title</span>,<br>      <span class="hljs-attr">textAlign</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> &gt; x ? <span class="hljs-string">&#x27;right&#x27;</span> : <span class="hljs-string">&#x27;left&#x27;</span>,<br>      <span class="hljs-attr">textBaseline</span>: <span class="hljs-string">&#x27;bottom&#x27;</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(text);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(text);<br>  &#125;<br></code></pre></td></tr></table></figure><p>stage?.graphs.customDrawText 绘制文字，给出定位和文字排列位置</p><h4 id="可优化方向"><a href="#可优化方向" class="headerlink" title="可优化方向"></a>可优化方向</h4><p>可以看出 刻度线 是由 180 个扇形图组成的，实际上我们刻度线只需要渲染出弧形就行了。只要最后一个圆弧渲染成扇形就 ok<br>根据 canvas 的 api 可以看出，arc 本身是带有 弧形 的功能，即：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//绘制120度的弧线，从弧线起点开始到弧线终点</span><br>ctx.<span class="hljs-title function_">beginPath</span>();<br>ctx.<span class="hljs-title function_">moveTo</span>(<span class="hljs-number">200</span>, <span class="hljs-number">400</span>);<br>ctx.<span class="hljs-title function_">arc</span>(<span class="hljs-number">100</span>, <span class="hljs-number">400</span>, <span class="hljs-number">100</span>, (<span class="hljs-number">0</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / <span class="hljs-number">180</span>, (<span class="hljs-number">120</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / <span class="hljs-number">180</span>);<br><span class="hljs-comment">// ctx.closePath();</span><br>ctx.<span class="hljs-title function_">stroke</span>();<br></code></pre></td></tr></table></figure><p>与之相对应的是扇形：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//绘制60度的扇形，顺时针绘制</span><br>ctx.<span class="hljs-title function_">beginPath</span>();<br>ctx.<span class="hljs-title function_">moveTo</span>(<span class="hljs-number">200</span>, <span class="hljs-number">200</span>);<br>ctx.<span class="hljs-title function_">arc</span>(<span class="hljs-number">200</span>, <span class="hljs-number">200</span>, <span class="hljs-number">100</span>, (<span class="hljs-number">0</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / <span class="hljs-number">180</span>, (<span class="hljs-number">60</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / <span class="hljs-number">180</span>);<br>ctx.<span class="hljs-title function_">closePath</span>();<br>ctx.<span class="hljs-title function_">stroke</span>();<br>ctx.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&quot;yellow&quot;</span>;<br>ctx.<span class="hljs-title function_">fill</span>();<br></code></pre></td></tr></table></figure><p>区别在于：弧形只调用了 ctx.stroke()，而扇形会 closePath()，然后.fill();</p><p>现在的项目主要是针对扇形，有多种需求：</p><ol><li>扇形-只描边（坐标系）- stroke</li><li>扇形-同时描边和填充（总分扇形）-fill,stroke</li><li>扇形-只填充（及格分扇形、得分扇形）-fill</li></ol><p>但是，没有针对弧形做处理，并且已经将单独的 stroke 字段占据了。现在需要新增一个 style 字段：onlyArcStroke<br>修改 omg 源码如下：<br>before</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (!<span class="hljs-built_in">isNaN</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>) &amp;&amp; !<span class="hljs-built_in">isNaN</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>)) &#123;<br>  canvas.<span class="hljs-title function_">arc</span>(<br>    <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>,<br>    (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>,<br>    (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>,<br>    <span class="hljs-literal">false</span><br>  );<br>  canvas.<span class="hljs-title function_">save</span>();<br>  canvas.<span class="hljs-title function_">rotate</span>((<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>);<br>  canvas.<span class="hljs-title function_">moveTo</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>, <span class="hljs-number">0</span>);<br>  canvas.<span class="hljs-title function_">lineTo</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  canvas.<span class="hljs-title function_">restore</span>();<br>  canvas.<span class="hljs-title function_">rotate</span>((<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>);<br>  canvas.<span class="hljs-title function_">lineTo</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>, <span class="hljs-number">0</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  canvas.<span class="hljs-title function_">arc</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>, <span class="hljs-number">0</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * <span class="hljs-number">2</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">style</span> === <span class="hljs-string">&quot;fill,stroke&quot;</span>) &#123;<br>  canvas.<span class="hljs-property">fillStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>  canvas.<span class="hljs-title function_">fill</span>();<br><br>  canvas.<span class="hljs-property">strokeStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">strokeColor</span>;<br>  canvas.<span class="hljs-property">lineWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">lineWidth</span>;<br>  canvas.<span class="hljs-title function_">stroke</span>();<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">style</span> === <span class="hljs-string">&quot;fill&quot;</span>) &#123;<br>  canvas.<span class="hljs-property">fillStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>  canvas.<span class="hljs-title function_">fill</span>();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  canvas.<span class="hljs-property">strokeStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>  canvas.<span class="hljs-title function_">stroke</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>after</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">style</span> === <span class="hljs-string">&quot;onlyArcStroke&quot;</span>) &#123;<br>  <span class="hljs-comment">// 弧形</span><br>  canvas.<span class="hljs-title function_">arc</span>(<br>    <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>,<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>,<br>    (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>,<br>    (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>,<br>    <span class="hljs-literal">false</span><br>  );<br>  canvas.<span class="hljs-property">strokeStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>  canvas.<span class="hljs-title function_">stroke</span>();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-comment">// 扇形</span><br>  <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">isNaN</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>) &amp;&amp; !<span class="hljs-built_in">isNaN</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>)) &#123;<br>    canvas.<span class="hljs-title function_">arc</span>(<br>      <span class="hljs-number">0</span>,<br>      <span class="hljs-number">0</span>,<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>,<br>      (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>,<br>      (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>,<br>      <span class="hljs-literal">false</span><br>    );<br>    canvas.<span class="hljs-title function_">save</span>();<br>    canvas.<span class="hljs-title function_">rotate</span>((<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">endAngle</span>);<br>    canvas.<span class="hljs-title function_">moveTo</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>, <span class="hljs-number">0</span>);<br>    canvas.<span class="hljs-title function_">lineTo</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    canvas.<span class="hljs-title function_">restore</span>();<br>    canvas.<span class="hljs-title function_">rotate</span>((<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>) * <span class="hljs-variable language_">this</span>.<span class="hljs-property">startAngle</span>);<br>    canvas.<span class="hljs-title function_">lineTo</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>, <span class="hljs-number">0</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    canvas.<span class="hljs-title function_">arc</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">scaled_radius</span>, <span class="hljs-number">0</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * <span class="hljs-number">2</span>);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">style</span> === <span class="hljs-string">&quot;fill,stroke&quot;</span>) &#123;<br>    canvas.<span class="hljs-property">fillStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>    canvas.<span class="hljs-title function_">fill</span>();<br>    canvas.<span class="hljs-property">strokeStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">strokeColor</span>;<br>    canvas.<span class="hljs-property">lineWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">lineWidth</span>;<br>    canvas.<span class="hljs-title function_">stroke</span>();<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">style</span> === <span class="hljs-string">&quot;fill&quot;</span>) &#123;<br>    canvas.<span class="hljs-property">fillStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>    canvas.<span class="hljs-title function_">fill</span>();<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    canvas.<span class="hljs-property">strokeStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>    canvas.<span class="hljs-title function_">stroke</span>();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当 style 为 onlyArcStroke 时，就只绘制圆弧，对应坐标轴绘制函数修改如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">private <span class="hljs-title function_">drawTick</span>(<span class="hljs-params">endAngle: number</span>) &#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>.<span class="hljs-property">length</span>; index++) &#123;<br>    <span class="hljs-keyword">const</span> item = <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>[index];<br>    <span class="hljs-keyword">const</span> arc = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">arc</span>(&#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">radius</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> * item + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isImage</span> ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiple</span> : <span class="hljs-number">0</span>),<br>      <span class="hljs-attr">startAngle</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>,<br>      endAngle,<br>      <span class="hljs-attr">color</span>: item === <span class="hljs-number">0</span> ? <span class="hljs-string">&#x27;rgba(50, 115, 242, 1)&#x27;</span> : <span class="hljs-string">&#x27;rgba(50, 115, 242, .8)&#x27;</span>,<br>      <span class="hljs-attr">style</span>:  item === <span class="hljs-number">0</span> ? <span class="hljs-string">&#x27;fill&#x27;</span> : item === <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;stroke&#x27;</span> : <span class="hljs-string">&#x27;onlyArcStroke&#x27;</span>, <span class="hljs-comment">// onlyArcStroke -- 仅作弧形描边， stroke -- 描边</span><br>      <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">4</span>,<br>    &#125;);<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(arc);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(arc);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样操作，可以避免通过渲染 180 个扇形实现坐标轴。而采用渲染 180-18 个圆弧+18 个扇形来生成坐标系</p><h4 id="失败的尝试-1-第一项扇形时绘制坐标系"><a href="#失败的尝试-1-第一项扇形时绘制坐标系" class="headerlink" title="失败的尝试 1-第一项扇形时绘制坐标系"></a>失败的尝试 1-第一项扇形时绘制坐标系</h4><p>基于此，还可以再次优化。如果用圆圈替换圆弧，则可以变成渲染 9 个圆圈+18 个扇形来生成坐标系，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs js"> private <span class="hljs-title function_">drawTick</span>(<span class="hljs-params">endAngle: number, dataSourceIndex: number</span>) &#123;<br>  <span class="hljs-keyword">let</span> arc = <span class="hljs-literal">null</span>;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;dataSourceIndex: &#x27;</span>, dataSourceIndex);<br>  <span class="hljs-keyword">if</span> (dataSourceIndex === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-comment">// 第1项扇形绘制时，渲染全部的图形（9个圆圈+第一项的扇形）</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>.<span class="hljs-property">length</span>; index++) &#123;<br>      <span class="hljs-keyword">const</span> item = <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>[index];<br>      arc = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">arc</span>(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">radius</span>:<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> * item + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isImage</span> ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiple</span> : <span class="hljs-number">0</span>),<br>        <span class="hljs-attr">startAngle</span>: item === <span class="hljs-number">10</span> ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span> : <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">endAngle</span>: item === <span class="hljs-number">10</span> ? endAngle : <span class="hljs-number">360</span>,<br>        <span class="hljs-attr">color</span>: item === <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;rgba(50, 115, 242, 1)&#x27;</span> : <span class="hljs-string">&#x27;rgba(50, 115, 242, .8)&#x27;</span>,<br>        <span class="hljs-attr">style</span>: item === <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;stroke&#x27;</span> : <span class="hljs-string">&#x27;onlyArcStroke&#x27;</span>, <span class="hljs-comment">// onlyArcStroke -- 仅作弧形描边， stroke -- 描边</span><br>        <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">4</span>,<br>      &#125;);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(arc);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(arc);<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 第2到18项扇形绘制时，只渲染扇形</span><br>    arc = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">arc</span>(&#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">radius</span>:<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">circleRadius</span> * <span class="hljs-variable language_">this</span>.<span class="hljs-property">tickMark</span>[<span class="hljs-number">10</span>] +<br>        (<span class="hljs-variable language_">this</span>.<span class="hljs-property">setting</span>.<span class="hljs-property">isImage</span> ? <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">multiple</span> : <span class="hljs-number">0</span>),<br>      <span class="hljs-attr">startAngle</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>,<br>      endAngle,<br>      <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;rgba(50, 115, 242, 1)&#x27;</span>,<br>      <span class="hljs-attr">style</span>: <span class="hljs-string">&#x27;stroke&#x27;</span>,<br>      <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">4</span>,<br>    &#125;);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(arc);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(arc);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>这种优化，会导致得分的扇形覆盖坐标系得颜色。跟之前通过 G2 引擎渲染图谱实现的效果的 bug 一致。<br>部分坐标系的横坐标轴丢失，如下图：</p></blockquote><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E4%BC%98%E5%8C%96%E5%A4%B1%E8%B4%A5%E5%B0%9D%E8%AF%95.png" alt="优化失败尝试"></p><h4 id="失败的尝试-2-最后一项扇形时绘制坐标系"><a href="#失败的尝试-2-最后一项扇形时绘制坐标系" class="headerlink" title="失败的尝试 2-最后一项扇形时绘制坐标系"></a>失败的尝试 2-最后一项扇形时绘制坐标系</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (dataSourceIndex === <span class="hljs-number">17</span>) &#123;<br>  ........<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>将圆圈的绘制改成最后一项扇形时绘制，可以避免坐标系被 覆盖，但同时产生新的问题：弹窗 tooltip 只能在最外层的一圈显示，即：事件未绑定到整个扇形</p></blockquote><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/%E5%A4%B1%E8%B4%A5er.png" alt="优化失败尝试2"></p><blockquote><p>猜测：应该是通过 最后一项扇形的形式来绘制坐标系的时候，覆盖了之前的十七个用来绑定事件的透明扇形图层导致。所以，只有最后一个第十八项扇形可以正常的显示 tooltip。</p></blockquote><h4 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h4><p>饼状图动画主要是扇形，添加 radius 的变化即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> 绘制得分扇形</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> item 数据项</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> endAngle 扇形结束角度</span><br><span class="hljs-comment"> */</span><br>private <span class="hljs-title function_">drawScore</span>(<span class="hljs-params">item: Source, endAngle: number</span>) &#123;<br>  <span class="hljs-keyword">const</span> _radius = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">formatRadius</span>(item.<span class="hljs-property">score</span>, item.<span class="hljs-property">total</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>);<br>  <span class="hljs-keyword">const</span> sector = <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-property">graphs</span>.<span class="hljs-title function_">arc</span>(&#123;<br>    <span class="hljs-attr">x</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">y</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>,<br>    <span class="hljs-comment">// radius: _radius,</span><br>    <span class="hljs-attr">radius</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-comment">// startAngle: this.angle,</span><br>     <span class="hljs-attr">startAngle</span>: <span class="hljs-number">0</span>,<br>    endAngle,<br>    <span class="hljs-attr">color</span>: item.<span class="hljs-property">scoreColor</span>,<br>    <span class="hljs-attr">style</span>: <span class="hljs-string">&#x27;fill&#x27;</span>,<br>  &#125;);<br>  sector.<span class="hljs-title function_">animateTo</span>(<br>    &#123;<br>      <span class="hljs-attr">radius</span>: _radius,<br>      <span class="hljs-attr">startAngle</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">angle</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>, <span class="hljs-comment">// 动画持续事件，默认 500 毫秒</span><br>      <span class="hljs-attr">delay</span>: <span class="hljs-number">200</span>, <span class="hljs-comment">// 动画延迟的事件，默认 0 毫秒</span><br>    &#125;,<br>  );<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">stage</span>?.<span class="hljs-title function_">addChild</span>(sector);<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawList</span>.<span class="hljs-title function_">push</span>(sector);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> data = <span class="hljs-title function_">ref</span>([<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;多元学科通识&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 当前项的id</span><br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;外语能力&quot;</span>, <span class="hljs-comment">// 当前项的名字</span><br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.1)&quot;</span>, <span class="hljs-comment">// 底色</span><br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>, <span class="hljs-comment">// 及格</span><br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.4)&quot;</span>, <span class="hljs-comment">// 及格颜色</span><br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>, <span class="hljs-comment">// 满分</span><br>    <span class="hljs-attr">score</span>: <span class="hljs-number">4</span>, <span class="hljs-comment">// 当前得分</span><br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 1)&quot;</span>, <span class="hljs-comment">// 得分颜色</span><br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;学术科研&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">6</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;学习成绩&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">5</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;学历层次&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">6</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">6</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;学校档次&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">8</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 198, 50, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;行业专属职务能力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 97, 163, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 97, 163, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 97, 163, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">8</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;行业通用职务能力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255, 97, 163, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(255, 97, 163, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">20</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(255, 97, 163, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">9</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;语言表达能力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;人格魅力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">11</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;复杂任务执行能力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">3</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">12</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;复杂任务领导能力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">13</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;思维能力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">5</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">14</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;心理能量&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">6</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">15</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;性格适配度&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">16</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;形体魅力&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">8</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">17</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;活动成果&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">9</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">18</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;社团职务&quot;</span>,<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.1)&quot;</span>,<br>    <span class="hljs-attr">pass</span>: <span class="hljs-number">7</span>,<br>    <span class="hljs-attr">passColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 0.4)&quot;</span>,<br>    <span class="hljs-attr">total</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">score</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">scoreColor</span>: <span class="hljs-string">&quot;rgba(76, 169, 255, 1)&quot;</span>,<br>  &#125;,<br>]);<br></code></pre></td></tr></table></figure><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E5%8D%9A%E5%AE%A2BLOG%E4%B8%93%E7%94%A8%E5%9B%BE%E5%BA%93/G2%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9F%B1%E7%8A%B6%E5%9B%BE.png" alt="柱状图"></p><ol><li><p>普通的双柱状图已经有现成的案例：<a href="https://antv-g2.gitee.io/zh/examples/interaction/element#element-highlight-by-x">双柱状图</a></p></li><li><p>上面缺少的就是每一个柱状需要增加一条横线</p></li><li><p>寻找相似案例，发现如下案例：<a href="https://antv-g2.gitee.io/zh/examples/column/basic#waterfall">带横线的双柱状图</a>，核心的代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 自定义 Shape</span><br><span class="hljs-title function_">registerShape</span>(<span class="hljs-string">&quot;interval&quot;</span>, <span class="hljs-string">&quot;waterfall&quot;</span>, &#123;<br>  <span class="hljs-title function_">draw</span>(<span class="hljs-params">cfg, container</span>) &#123;<br>    <span class="hljs-keyword">const</span> attrs = <span class="hljs-title function_">getFillAttrs</span>(cfg);<br>    <span class="hljs-keyword">let</span> rectPath = <span class="hljs-title function_">getRectPath</span>(cfg.<span class="hljs-property">points</span>);<br>    rectPath = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">parsePath</span>(rectPath);<br><br>    <span class="hljs-keyword">const</span> group = container.<span class="hljs-title function_">addGroup</span>();<br>    group.<span class="hljs-title function_">addShape</span>(<span class="hljs-string">&quot;path&quot;</span>, &#123;<br>      <span class="hljs-attr">attrs</span>: &#123;<br>        ...attrs,<br>        <span class="hljs-attr">path</span>: rectPath,<br>      &#125;,<br>    &#125;);<br><br>    <span class="hljs-keyword">if</span> (cfg.<span class="hljs-property">nextPoints</span>) &#123;<br>      <span class="hljs-keyword">let</span> linkPath = [<br>        [<span class="hljs-string">&quot;M&quot;</span>, cfg.<span class="hljs-property">points</span>[<span class="hljs-number">2</span>].<span class="hljs-property">x</span>, cfg.<span class="hljs-property">points</span>[<span class="hljs-number">2</span>].<span class="hljs-property">y</span>],<br>        [<span class="hljs-string">&quot;L&quot;</span>, cfg.<span class="hljs-property">nextPoints</span>[<span class="hljs-number">0</span>].<span class="hljs-property">x</span>, cfg.<span class="hljs-property">nextPoints</span>[<span class="hljs-number">0</span>].<span class="hljs-property">y</span>],<br>      ];<br><br>      <span class="hljs-keyword">if</span> (cfg.<span class="hljs-property">nextPoints</span>[<span class="hljs-number">0</span>].<span class="hljs-property">y</span> === <span class="hljs-number">0</span>) &#123;<br>        linkPath[<span class="hljs-number">1</span>] = [<span class="hljs-string">&quot;L&quot;</span>, cfg.<span class="hljs-property">nextPoints</span>[<span class="hljs-number">1</span>].<span class="hljs-property">x</span>, cfg.<span class="hljs-property">nextPoints</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span>];<br>      &#125;<br>      linkPath = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">parsePath</span>(linkPath);<br>      group.<span class="hljs-title function_">addShape</span>(<span class="hljs-string">&quot;path&quot;</span>, &#123;<br>        <span class="hljs-attr">attrs</span>: &#123;<br>          <span class="hljs-attr">path</span>: linkPath,<br>          <span class="hljs-attr">stroke</span>: <span class="hljs-string">&quot;#8c8c8c&quot;</span>,<br>          <span class="hljs-attr">lineDash</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">2</span>],<br>        &#125;,<br>      &#125;);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> group;<br>  &#125;,<br>&#125;);<br><br>chart.<span class="hljs-title function_">interval</span>().<span class="hljs-title function_">position</span>(<span class="hljs-string">&quot;type*money&quot;</span>).<span class="hljs-title function_">shape</span>(<span class="hljs-string">&quot;waterfall&quot;</span>);<br></code></pre></td></tr></table></figure><p>可以通过改造 group 里的 path 路径来实现一个 line 的路径，X 和 Y 的定位就可以从 cfg 的 point 中获取</p></li><li><p>利用上面的逻辑，可以改造我们双柱状图试试。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">registerShape</span>(<span class="hljs-string">&quot;interval&quot;</span>, <span class="hljs-string">&quot;fall-flag&quot;</span>, &#123;<br>  <span class="hljs-title function_">draw</span>(<span class="hljs-params">cfg, container</span>) &#123;<br>    <span class="hljs-comment">// console.log(&#x27;cfg: &#x27;, cfg);</span><br>    <span class="hljs-keyword">const</span> group = container.<span class="hljs-title function_">addGroup</span>();<br>    <span class="hljs-keyword">let</span> type = cfg?.<span class="hljs-property">data</span>?.<span class="hljs-property">type</span>;<br>    <span class="hljs-keyword">let</span> currentColor = getDarkColorByName[type];<br>    <span class="hljs-keyword">let</span> maxHeight =<br>      (<span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">y</span>) - <span class="hljs-number">35</span>) / (<span class="hljs-number">1</span> - <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">points</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span>)) + <span class="hljs-number">35</span>;<br>    <span class="hljs-keyword">let</span> coordinateHeight = maxHeight - <span class="hljs-number">35</span>;<br>    <span class="hljs-keyword">let</span> height =<br>      <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">y</span>) +<br>      coordinateHeight *<br>        <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">points</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span>) *<br>        (<span class="hljs-number">1</span> - <span class="hljs-title class_">Number</span>(cfg.<span class="hljs-property">data</span>.<span class="hljs-property">coefficient</span>));<br>    <span class="hljs-keyword">if</span> (cfg?.<span class="hljs-property">points</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span> == <span class="hljs-number">1</span>) &#123;<br>      height = <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">y</span>);<br>    &#125;<br>    group.<span class="hljs-title function_">addShape</span>(<span class="hljs-string">&quot;path&quot;</span>, &#123;<br>      <span class="hljs-attr">attrs</span>: &#123;<br>        <span class="hljs-comment">// ...cfg,</span><br>        <span class="hljs-attr">path</span>: [<br>          <span class="hljs-comment">// [&#x27;M&#x27;, (cfg?.x as number) - 40, cfg?.y as number],</span><br>          <span class="hljs-comment">// [&#x27;L&#x27;, (cfg?.x as number) + 40, cfg?.y as number],</span><br>          [<span class="hljs-string">&quot;M&quot;</span>, cfg?.<span class="hljs-property">x</span> - <span class="hljs-number">30</span>, height],<br>          [<span class="hljs-string">&quot;L&quot;</span>, cfg?.<span class="hljs-property">x</span> + <span class="hljs-number">30</span>, height],<br>        ],<br>        <span class="hljs-attr">stroke</span>: checkIndex &lt; <span class="hljs-number">9</span> ? currentColor : <span class="hljs-string">&quot;transparent&quot;</span>,<br>        <span class="hljs-comment">// stroke: currentColor,</span><br>        <span class="hljs-attr">lineDash</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">2</span>],<br>        <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">2</span>,<br>      &#125;,<br>    &#125;);<br>    <span class="hljs-comment">// console.log(&#x27;group: &#x27;, group);</span><br>    checkIndex++;<br>    <span class="hljs-keyword">return</span> group;<br>  &#125;,<br>&#125;);<br><br>chart<br>  .<span class="hljs-title function_">interval</span>() <span class="hljs-comment">// 画出柱状图</span><br>  .<span class="hljs-title function_">position</span>(<span class="hljs-string">&quot;type*value&quot;</span>) <span class="hljs-comment">// 柱状图定位</span><br>  .<span class="hljs-title function_">color</span>(<span class="hljs-string">&quot;color&quot;</span>, <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> arr = value.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>    <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;满分&quot;</span>) &#123;<br>      <span class="hljs-keyword">return</span> getDarkColorByName[arr[<span class="hljs-number">0</span>]];<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> getLightColorByName[arr[<span class="hljs-number">0</span>]];<br>    &#125;<br>  &#125;) <span class="hljs-comment">//通过color区分颜色</span><br>  .<span class="hljs-title function_">label</span>(<span class="hljs-string">&quot;value&quot;</span>) <span class="hljs-comment">// 柱子顶上的文字</span><br>  .<span class="hljs-title function_">size</span>(<span class="hljs-string">&quot;20&quot;</span>)<br>  .<span class="hljs-title function_">adjust</span>([<br>    &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;dodge&quot;</span>,<br>      <span class="hljs-attr">marginRatio</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>  ]);<br><br>chart.<span class="hljs-title function_">interval</span>().<span class="hljs-title function_">position</span>(<span class="hljs-string">&quot;type*value&quot;</span>).<span class="hljs-title function_">shape</span>(<span class="hljs-string">&quot;fall-flag&quot;</span>);<br></code></pre></td></tr></table></figure><p>可以看到上面的代码，是渲染了两次 chart 的 interval 方法。<br>本质上实现方式是：第一次 chart.interval()渲染出了双柱状图，第二次渲染 shape(“fall-flag”)只是渲染了一个只有柱状体最上面一根横线的一个双柱状图！</p></li></ol><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> paddingOption = [<span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">55</span>, <span class="hljs-number">35</span>];<br><span class="hljs-keyword">let</span> chart = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">const</span> getDarkColorByName = &#123;<br>  <span class="hljs-title class_">Jan</span>: <span class="hljs-string">&quot;#6970FF&quot;</span>,<br>  <span class="hljs-title class_">Feb</span>: <span class="hljs-string">&quot;#6970FF&quot;</span>,<br>  <span class="hljs-title class_">Mar</span>: <span class="hljs-string">&quot;#6970FF&quot;</span>,<br>  <span class="hljs-title class_">Apr</span>: <span class="hljs-string">&quot;#6970FF&quot;</span>,<br>  <span class="hljs-title class_">May</span>: <span class="hljs-string">&quot;#FF6600&quot;</span>,<br>  <span class="hljs-title class_">Jun</span>: <span class="hljs-string">&quot;#FF6600&quot;</span>,<br>  <span class="hljs-title class_">Jul</span>: <span class="hljs-string">&quot;#FF6600&quot;</span>,<br>  <span class="hljs-title class_">Aug</span>: <span class="hljs-string">&quot;#00B4C3&quot;</span>,<br>&#125;;<br><span class="hljs-keyword">const</span> getLightColorByName = &#123;<br>  <span class="hljs-title class_">Jan</span>: <span class="hljs-string">&quot;rgb(105,112,255,.1)&quot;</span>,<br>  <span class="hljs-title class_">Feb</span>: <span class="hljs-string">&quot;rgb(105,112,255,.1)&quot;</span>,<br>  <span class="hljs-title class_">Mar</span>: <span class="hljs-string">&quot;rgb(105,112,255,.1)&quot;</span>,<br>  <span class="hljs-title class_">Apr</span>: <span class="hljs-string">&quot;rgb(105,112,255,.1)&quot;</span>,<br>  <span class="hljs-title class_">May</span>: <span class="hljs-string">&quot;rgb(255,102,0,.1)&quot;</span>,<br>  <span class="hljs-title class_">Jun</span>: <span class="hljs-string">&quot;rgb(255,102,0,.1)&quot;</span>,<br>  <span class="hljs-title class_">Jul</span>: <span class="hljs-string">&quot;rgb(255,102,0,.1)&quot;</span>,<br>  <span class="hljs-title class_">Aug</span>: <span class="hljs-string">&quot;rgb(0,180,195,.1)&quot;</span>,<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">initChart</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> checkIndex = <span class="hljs-number">1</span>;<br>  <span class="hljs-comment">// 实例化对象</span><br>  chart = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Chart</span>(&#123;<br>    <span class="hljs-attr">container</span>: <span class="hljs-string">&quot;DoubleHistogramContainer&quot;</span>,<br>    <span class="hljs-comment">// autoFit: true,</span><br>    <span class="hljs-attr">width</span>: <span class="hljs-number">600</span>,<br>    <span class="hljs-attr">height</span>: <span class="hljs-number">280</span>,<br>    <span class="hljs-attr">padding</span>: paddingOption,<br>  &#125;);<br><br>  <span class="hljs-comment">// 加载数据</span><br>  <span class="hljs-comment">// chart.data(data);</span><br>  chart.<span class="hljs-title function_">data</span>([<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Jan&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Jan&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">38.9</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Feb&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Feb&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">28.8</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.2</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Mar&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Mar&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">39.3</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.4</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Apr&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Apr&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">100</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">1</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;May&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;May&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">30</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Jun&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Jun&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">60</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Jul&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Jul&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">34</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Aug&amp;满分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Aug&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">35.6</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.4</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Jan&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Jan&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">12.4</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Feb&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Feb&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">23.2</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Mar&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Mar&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">34.5</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Apr&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Apr&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">12</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;May&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;May&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">15.6</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Jun&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Jun&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">25.5</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Jul&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Jul&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">17.4</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>    &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;Aug&amp;得分&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;Aug&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">22.4</span>, <span class="hljs-attr">coefficient</span>: <span class="hljs-number">0.8</span> &#125;,<br>  ]);<br><br>  <span class="hljs-title function_">registerShape</span>(<span class="hljs-string">&quot;interval&quot;</span>, <span class="hljs-string">&quot;fall-flag&quot;</span>, &#123;<br>    <span class="hljs-title function_">draw</span>(<span class="hljs-params">cfg, container</span>) &#123;<br>      <span class="hljs-comment">// console.log(&#x27;cfg: &#x27;, cfg);</span><br>      <span class="hljs-keyword">const</span> group = container.<span class="hljs-title function_">addGroup</span>();<br>      <span class="hljs-keyword">let</span> type = cfg?.<span class="hljs-property">data</span>?.<span class="hljs-property">type</span>;<br>      <span class="hljs-keyword">let</span> currentColor = getDarkColorByName[type];<br>      <span class="hljs-keyword">let</span> maxHeight =<br>        (<span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">y</span>) - <span class="hljs-number">35</span>) / (<span class="hljs-number">1</span> - <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">points</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span>)) + <span class="hljs-number">35</span>;<br>      <span class="hljs-keyword">let</span> coordinateHeight = maxHeight - <span class="hljs-number">35</span>;<br>      <span class="hljs-keyword">let</span> height =<br>        <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">y</span>) +<br>        coordinateHeight *<br>          <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">points</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span>) *<br>          (<span class="hljs-number">1</span> - <span class="hljs-title class_">Number</span>(cfg.<span class="hljs-property">data</span>.<span class="hljs-property">coefficient</span>));<br>      <span class="hljs-keyword">if</span> (cfg?.<span class="hljs-property">points</span>[<span class="hljs-number">1</span>].<span class="hljs-property">y</span> == <span class="hljs-number">1</span>) &#123;<br>        height = <span class="hljs-title class_">Number</span>(cfg?.<span class="hljs-property">y</span>);<br>      &#125;<br>      group.<span class="hljs-title function_">addShape</span>(<span class="hljs-string">&quot;path&quot;</span>, &#123;<br>        <span class="hljs-attr">attrs</span>: &#123;<br>          <span class="hljs-comment">// ...cfg,</span><br>          <span class="hljs-attr">path</span>: [<br>            <span class="hljs-comment">// [&#x27;M&#x27;, (cfg?.x as number) - 40, cfg?.y as number],</span><br>            <span class="hljs-comment">// [&#x27;L&#x27;, (cfg?.x as number) + 40, cfg?.y as number],</span><br>            [<span class="hljs-string">&quot;M&quot;</span>, cfg?.<span class="hljs-property">x</span> - <span class="hljs-number">30</span>, height],<br>            [<span class="hljs-string">&quot;L&quot;</span>, cfg?.<span class="hljs-property">x</span> + <span class="hljs-number">30</span>, height],<br>          ],<br>          <span class="hljs-attr">stroke</span>: checkIndex &lt; <span class="hljs-number">9</span> ? currentColor : <span class="hljs-string">&quot;transparent&quot;</span>,<br>          <span class="hljs-comment">// stroke: currentColor,</span><br>          <span class="hljs-attr">lineDash</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">2</span>],<br>          <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">2</span>,<br>        &#125;,<br>      &#125;);<br>      <span class="hljs-comment">// console.log(&#x27;group: &#x27;, group);</span><br>      checkIndex++;<br>      <span class="hljs-keyword">return</span> group;<br>    &#125;,<br>  &#125;);<br><br>  <span class="hljs-comment">// 度量（就是点击图片上面会浮现一些内容：内容就通过下面的配置项配置）</span><br>  chart.<span class="hljs-title function_">scale</span>(<span class="hljs-string">&quot;value&quot;</span>, &#123;<br>    <span class="hljs-attr">min</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">alias</span>: <span class="hljs-string">&quot;数值&quot;</span>,<br>    <span class="hljs-comment">//该数据字段的显示别名，一般用于将字段的英文名称转换成中文名。</span><br>  &#125;);<br>  chart.<span class="hljs-title function_">legend</span>(<span class="hljs-literal">false</span>);<br>  <span class="hljs-comment">// chart.legend(&#x27;type&#x27;, &#123;</span><br>  <span class="hljs-comment">//   position: &#x27;right&#x27;,</span><br>  <span class="hljs-comment">// &#125;);</span><br>  <span class="hljs-comment">// 配置 type 对应坐标轴线</span><br>  chart.<span class="hljs-title function_">axis</span>(<span class="hljs-string">&quot;type&quot;</span>, &#123;<br>    <span class="hljs-attr">tickLine</span>: &#123;<br>      <span class="hljs-comment">// 是否同刻度线对齐，如果值为 false，则会显示在两个刻度中间。</span><br>      <span class="hljs-attr">alignTick</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">label</span>: &#123; <span class="hljs-attr">autoEllipsis</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">offset</span>: <span class="hljs-number">12</span>, <span class="hljs-attr">autoHide</span>: <span class="hljs-literal">false</span> &#125;, <span class="hljs-comment">//横坐标上的文字</span><br>    <span class="hljs-comment">// title: &#123; spacing: 2 &#125;, // 横着的坐标轴下面的文字（即type）</span><br>  &#125;);<br>  <span class="hljs-comment">// 配置 value 对应坐标轴线</span><br>  chart.<span class="hljs-title function_">axis</span>(<span class="hljs-string">&quot;value&quot;</span>, &#123;<br>    <span class="hljs-attr">label</span>: &#123;<br>      <span class="hljs-attr">offset</span>: <span class="hljs-number">12</span>,<br>    &#125;,<br>    <span class="hljs-comment">// title: &#123;&#125;, // 竖着的坐标轴下面的文字（即&quot;数值&quot;）</span><br>    <span class="hljs-attr">tickLine</span>: &#123;<br>      <span class="hljs-comment">// 是否同刻度线对齐，如果值为 false，则会显示在两个刻度中间。</span><br>      <span class="hljs-attr">alignTick</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>  &#125;);<br>  chart.<span class="hljs-title function_">tooltip</span>(&#123;<br>    <span class="hljs-attr">showContent</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 关闭 tooltip content部分dom</span><br>  &#125;);<br>  chart<br>    .<span class="hljs-title function_">interval</span>() <span class="hljs-comment">// 画出柱状图</span><br>    .<span class="hljs-title function_">position</span>(<span class="hljs-string">&quot;type*value&quot;</span>) <span class="hljs-comment">// 柱状图定位</span><br>    .<span class="hljs-title function_">color</span>(<span class="hljs-string">&quot;color&quot;</span>, <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">let</span> arr = value.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>      <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;满分&quot;</span>) &#123;<br>        <span class="hljs-keyword">return</span> getDarkColorByName[arr[<span class="hljs-number">0</span>]];<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> getLightColorByName[arr[<span class="hljs-number">0</span>]];<br>      &#125;<br>    &#125;) <span class="hljs-comment">//通过color区分颜色</span><br>    .<span class="hljs-title function_">label</span>(<span class="hljs-string">&quot;value&quot;</span>) <span class="hljs-comment">// 柱子顶上的文字</span><br>    .<span class="hljs-title function_">size</span>(<span class="hljs-string">&quot;20&quot;</span>)<br>    .<span class="hljs-title function_">adjust</span>([<br>      &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;dodge&quot;</span>,<br>        <span class="hljs-attr">marginRatio</span>: <span class="hljs-number">0</span>,<br>      &#125;,<br>    ]);<br><br>  chart.<span class="hljs-title function_">interval</span>().<span class="hljs-title function_">position</span>(<span class="hljs-string">&quot;type*value&quot;</span>).<span class="hljs-title function_">shape</span>(<span class="hljs-string">&quot;fall-flag&quot;</span>);<br><br>  <span class="hljs-comment">// 开始渲染</span><br>  chart.<span class="hljs-title function_">render</span>();<br>&#125;;<br><br><span class="hljs-title function_">initChart</span>();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>canvas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>淘宝小程序开发（坑是真多）</title>
    <link href="/2023/04/28/%E6%B7%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    <url>/2023/04/28/%E6%B7%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h2 id="淘宝小程序开发"><a href="#淘宝小程序开发" class="headerlink" title="淘宝小程序开发"></a>淘宝小程序开发</h2><p>淘宝小程序相较于微信小程序有很大差异，主要在于 css、canvas 等功能，（不得不吐槽下 css 竟然没有隔离）</p><span id="more"></span><h3 id="淘宝小程序无样式隔离"><a href="#淘宝小程序无样式隔离" class="headerlink" title="淘宝小程序无样式隔离"></a>淘宝小程序无样式隔离</h3><p>淘宝小程序默认组件间样式无隔离</p><p><a href="https://opendocs.alipay.com/mini/framework/page-acss">组件样式无隔离</a></p><p>在支付宝文档中，有说明如果需要隔离，需添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;styleIsolation&quot;</span>: <span class="hljs-string">&quot;apply-shared&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="需使用老版-Canvas"><a href="#需使用老版-Canvas" class="headerlink" title="需使用老版 Canvas"></a>需使用老版 Canvas</h3><p>新版 canvas 有各种问题，无法使用。新老版本差异可以参考如下：</p><p><a href="https://opendocs.alipay.com/mini/055eid?pathHash=0b1d0dfc">新老版本 canvas</a></p><h4 id="老版-canvas-使用"><a href="#老版-canvas-使用" class="headerlink" title="老版 canvas 使用"></a>老版 canvas 使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my-canvas&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Page</span>(&#123;<br>  <span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> context = my.<span class="hljs-title function_">createCanvasContext</span>(<span class="hljs-string">&quot;my-canvas&quot;</span>);<br>  &#125;,<br>  <span class="hljs-title function_">drawPoster</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> src =<br>      <span class="hljs-string">&quot;https://img.alicdn.com/tfs/TB1GvVMj2BNTKJjy0FdXXcPpVXa-520-280.jpg&quot;</span>;<br>    context.<span class="hljs-title function_">drawImage</span>(src, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">250</span>, <span class="hljs-number">80</span>);<br>    ctx.<span class="hljs-title function_">draw</span>(<span class="hljs-literal">false</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>      ctx.<span class="hljs-title function_">toTempFilePath</span>(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">250</span>,<br>        <span class="hljs-attr">height</span>: <span class="hljs-number">80</span>,<br>        <span class="hljs-attr">fileType</span>: <span class="hljs-string">&quot;jpg&quot;</span>,<br>        <span class="hljs-attr">quality</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-title function_">success</span>(<span class="hljs-params">res</span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br>        &#125;,<br>      &#125;);<br>    &#125;);<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="解决-Canvas-画布模糊"><a href="#解决-Canvas-画布模糊" class="headerlink" title="解决 Canvas 画布模糊"></a>解决 Canvas 画布模糊</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span></span><br><span class="hljs-tag">  <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;poster_canvas&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&#123;&#123;canvasWidthWithDPR&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;&#123;&#123;canvasHeightWithDPR&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;&#123;&#123; style &#125;&#125;&quot;</span></span><br><span class="hljs-tag">&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Component</span>(&#123;<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">style</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">canvasWidthWithDPR</span>: <span class="hljs-number">375</span>,<br>    <span class="hljs-attr">canvasHeightWithDPR</span>: <span class="hljs-number">684</span>,<br>    <span class="hljs-attr">canvasOriginWidth</span>: <span class="hljs-number">375</span>,<br>    <span class="hljs-attr">canvasOriginHeight</span>: <span class="hljs-number">684</span>,<br>  &#125;,<br>  <span class="hljs-title function_">didMount</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 动态设置canvas的宽高：https://opendocs.alipay.com/support/01rb8t?ant_source=opendoc_recommend</span><br>    <span class="hljs-keyword">let</span> &#123; pixelRatio &#125; = <span class="hljs-title function_">getSystemInfoSync</span>();<br>    <span class="hljs-keyword">const</span> style = <span class="hljs-string">`width: <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.data.canvasOriginWidth&#125;</span>px; height: <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.data.canvasOriginHeight&#125;</span>px; position: fixed; left: 0%; top: 0%;`</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>      style,<br>      <span class="hljs-attr">canvasWidthWithDPR</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasOriginWidth</span> * pixelRatio,<br>      <span class="hljs-attr">canvasHeightWithDPR</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasOriginHeight</span> * pixelRatio,<br>    &#125;);<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="控制-Canvas-生成的图片质量和大小"><a href="#控制-Canvas-生成的图片质量和大小" class="headerlink" title="控制 Canvas 生成的图片质量和大小"></a>控制 Canvas 生成的图片质量和大小</h4><p>canvas 的生成图片比例由两个地方决定：</p><ol><li>drawImage 决定从初始图片上裁剪的位置和宽高比例</li><li>toTempFilePath 决定输出图片的宽高</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> context = my.<span class="hljs-title function_">createCanvasContext</span>(<span class="hljs-string">&quot;photo_canvas&quot;</span>);<br><br><span class="hljs-keyword">let</span> &#123; windowWidth, windowHeight, pixelRatio &#125; = <span class="hljs-title function_">getSystemInfoSync</span>();<br><br><span class="hljs-keyword">let</span> cutImageWithDPR = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCompressedImg</span>(<br>  photoUrl,<br>  context,<br>  windowWidth,<br>  windowHeight,<br>  pixelRatio<br>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getCompressedImg</span>(<span class="hljs-params">imgUrl, context, canvasWidth, canvasHeight, dpr</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">getImageInfo</span>(imgUrl).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">image</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> &#123; width, height &#125; = image;<br>      <span class="hljs-keyword">let</span> widthScale = canvasWidth / width;<br>      <span class="hljs-keyword">let</span> heightScale = canvasHeight / height;<br>      <span class="hljs-keyword">let</span> drawImageHeight = <span class="hljs-literal">null</span>;<br>      <span class="hljs-keyword">let</span> drawImageWidth = <span class="hljs-literal">null</span>;<br>      <span class="hljs-keyword">let</span> dx = <span class="hljs-literal">null</span>;<br>      <span class="hljs-keyword">let</span> dy = <span class="hljs-literal">null</span>;<br>      <span class="hljs-keyword">if</span> (widthScale &lt; heightScale) &#123;<br>        drawImageHeight = canvasHeight;<br>        drawImageWidth = width * heightScale;<br>        dx = -(drawImageWidth - canvasWidth) / <span class="hljs-number">2</span>;<br>        dy = -(drawImageHeight - canvasHeight) / <span class="hljs-number">2</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        drawImageWidth = canvasWidth;<br>        drawImageHeight = height * widthScale;<br>        dx = -(drawImageWidth - canvasWidth) / <span class="hljs-number">2</span>;<br>        dy = -(drawImageHeight - canvasHeight) / <span class="hljs-number">2</span>;<br>      &#125;<br><br>      context.<span class="hljs-title function_">drawImage</span>(<br>        imgUrl,<br>        dx * dpr,<br>        dy * dpr,<br>        drawImageWidth * dpr,<br>        drawImageHeight * dpr<br>      );<br><br>      context.<span class="hljs-title function_">draw</span>(<span class="hljs-literal">false</span>, <span class="hljs-keyword">async</span> () =&gt; &#123;<br>        <span class="hljs-keyword">const</span> tempFilePath = <span class="hljs-keyword">await</span> <span class="hljs-title function_">canvasToTempFilePathByCanvasApi</span>(<br>          context,<br>          canvasWidth * dpr,<br>          canvasHeight * dpr<br>        );<br>        <span class="hljs-title function_">resolve</span>(tempFilePath);<br>      &#125;);<br>    &#125;);<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">canvasToTempFilePathByCanvasApi</span>(<span class="hljs-params">context, width, height</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    context.<span class="hljs-title function_">toTempFilePath</span>(&#123;<br>      <span class="hljs-attr">fileType</span>: <span class="hljs-string">&quot;jpg&quot;</span>,<br>      <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>      width,<br>      height,<br>      <span class="hljs-attr">quality</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">destWidth</span>: width,<br>      <span class="hljs-attr">destHeight</span>: height,<br>      <span class="hljs-title function_">success</span>(<span class="hljs-params">res</span>) &#123;<br>        <span class="hljs-comment">// resolve(res.tempFilePath);</span><br>        <span class="hljs-title function_">resolve</span>(res.<span class="hljs-property">apFilePath</span>);<br>      &#125;,<br>      <span class="hljs-title function_">fail</span>(<span class="hljs-params">err</span>) &#123;<br>        <span class="hljs-title function_">reject</span>(err);<br>      &#125;,<br>    &#125;);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>假定传入图片的宽高为：720<em>1280，canvas 输出的图片宽高为屏幕宽高：390</em>844</p><ol><li>首先分别计算宽高的缩放比例，得到最终需要缩放的是图片宽度</li><li>然后计算出缩放后的图片宽度和距离左上角的 dx 。此时 dy 为 0，高度为 844</li><li>通过 toTempFilePath 输出 390*844 的图片</li></ol><h3 id="淘宝顶部标题"><a href="#淘宝顶部标题" class="headerlink" title="淘宝顶部标题"></a>淘宝顶部标题</h3><ol><li><p>首页（即 app.json 中 pages 数组的第一项）的 title 是无法被修改的（模拟器上是可以被修改的，真机不生效）</p></li><li><p>非首页页面则可以通过以下方式修改</p><p><a href="https://miniapp.open.taobao.com/docV3.htm?spm=a219a.7386797.0.0.2763669aEPZI7j&source=search&docId=117457&docType=1">window 配置文档</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;transparentTitle&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;always&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;defaultTitle&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot; &quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;titlePenetrate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;YES&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;navigationBarForceEnable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">my.<span class="hljs-title function_">setNavigationBar</span>(&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&quot; &quot;</span>,<br>  <span class="hljs-title function_">success</span>(<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-title function_">fail</span>(<span class="hljs-params"></span>) &#123;&#125;,<br>&#125;);<br></code></pre></td></tr></table></figure></li><li><p>非首页的其他页面，左上角的返回按钮是无法被隐藏的</p><p>即使有提供专门的 API：<a href="https://miniapp.open.taobao.com/docV3.htm?docId=4691&docType=20&source=search">my.hideBackButton</a>，该 api 在真机调试的时候测试过，也是不生效的</p></li></ol><h3 id="父组件无法定义子组件-class-样式"><a href="#父组件无法定义子组件-class-样式" class="headerlink" title="父组件无法定义子组件 class 样式"></a>父组件无法定义子组件 class 样式</h3><p>此种写法是无效的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;aaa <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;test&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><p>微信小程序和 VUE 中，像这样的定义在最终会与组件最外层内部定义的 class 合并到一起，但在淘宝小程序里就是不行</p><p>临时处理方式为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;view <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">aaa</span> /&gt;</span></span><br>&lt;/view&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.test</span> &gt; view &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="正确使用权限"><a href="#正确使用权限" class="headerlink" title="正确使用权限"></a>正确使用权限</h3><h4 id="外部调用-setAuth"><a href="#外部调用-setAuth" class="headerlink" title="外部调用 setAuth"></a>外部调用 setAuth</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">savePoster</span>(<span class="hljs-params">filePath</span>) &#123;<br>  <span class="hljs-keyword">const</span> userAuth = <span class="hljs-keyword">await</span> <span class="hljs-title function_">setAuth</span>(<span class="hljs-string">&quot;scope.album&quot;</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;userAuth: &quot;</span>, userAuth);<br>  <span class="hljs-keyword">if</span> (!userAuth) &#123;<br>    <span class="hljs-keyword">return</span> my.<span class="hljs-title function_">showToast</span>(&#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;保存照片失败, 需要相册权限&quot;</span>,<br>      <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>    &#125;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="setAuth-实现"><a href="#setAuth-实现" class="headerlink" title="setAuth 实现"></a>setAuth 实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">setAuth</span>(<span class="hljs-params">scopeAuthName, &#123; type = <span class="hljs-string">&quot;&quot;</span>, series = <span class="hljs-string">&quot;&quot;</span> &#125; = &#123;&#125;</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    my.<span class="hljs-title function_">getSetting</span>(&#123;<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;res: -----------授权&quot;</span>, res);<br>        <span class="hljs-comment">// const &#123; camera &#125; = res.authSetting;</span><br>        <span class="hljs-keyword">let</span> isSuitAuthInfo = res.<span class="hljs-property">authSetting</span>[scopeAuthName];<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isSuitAuthInfo: &quot;</span>, isSuitAuthInfo);<br>        <span class="hljs-keyword">if</span> (isSuitAuthInfo) &#123;<br>          <span class="hljs-comment">// 用户已经授权</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;用户已经授权: &quot;</span>);<br>          <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-comment">// 用户还没有授权，向用户发起授权请求</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;用户还没有授权，向用户发起授权请求: &quot;</span>);<br>          my.<span class="hljs-title function_">authorize</span>(&#123;<br>            <span class="hljs-attr">scopes</span>: scopeAuthName,<br>            <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;res: 用户同意授权&quot;</span>, res);<br>              <span class="hljs-comment">// 用户同意授权</span><br>              <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>);<br>            &#125;,<br>            <span class="hljs-attr">fail</span>: <span class="hljs-keyword">async</span> () =&gt; &#123;<br>              <span class="hljs-comment">// 用户不同意授权</span><br>              <span class="hljs-keyword">const</span> confirm = <span class="hljs-keyword">await</span> <span class="hljs-title function_">showAuthModal</span>(scopeAuthName);<br>              <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">false</span>);<br>            &#125;,<br>          &#125;);<br>        &#125;<br>      &#125;,<br>      <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取用户授权信息失败&quot;</span>, res);<br>        <span class="hljs-title function_">reject</span>(res);<br>        my.<span class="hljs-title function_">showToast</span>(&#123;<br>          <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;获取用户授权信息失败&quot;</span>,<br>          <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>          <span class="hljs-attr">duration</span>: <span class="hljs-number">3000</span>,<br>        &#125;);<br>      &#125;,<br>    &#125;);<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">showAuthModal</span>(<span class="hljs-params">scopeAuthName</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> defaultConfig = &#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>      <span class="hljs-attr">confirmText</span>: <span class="hljs-string">&quot;立即授权&quot;</span>,<br>      <span class="hljs-attr">confirmColor</span>: <span class="hljs-string">&quot;#02BB00&quot;</span>,<br>      <span class="hljs-attr">content</span>:<br>        scopeAuthName === <span class="hljs-string">&quot;scope.camera&quot;</span> ? <span class="hljs-string">&quot;添加相机权限&quot;</span> : <span class="hljs-string">&quot;添加相册权限&quot;</span>,<br>    &#125;;<br><br>    my.<span class="hljs-title function_">confirm</span>(&#123;<br>      <span class="hljs-attr">title</span>: defaultConfig.<span class="hljs-property">title</span>,<br>      <span class="hljs-attr">content</span>: defaultConfig.<span class="hljs-property">content</span>,<br>      <span class="hljs-attr">confirmButtonText</span>: defaultConfig.<span class="hljs-property">confirmText</span>,<br>      <span class="hljs-attr">cancelButtonText</span>: <span class="hljs-string">&quot;暂不需要&quot;</span>,<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (result.<span class="hljs-property">confirm</span>) &#123;<br>          my.<span class="hljs-title function_">openSetting</span>(&#123;<br>            <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>);<br>            &#125;,<br>          &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!result.<span class="hljs-property">confirm</span>) &#123;<br>          <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">false</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;未知问题&quot;</span>));<br>        &#125;<br>      &#125;,<br>    &#125;);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>tb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>原生 APP 和 H5 的交互桥</title>
    <link href="/2023/04/22/APP%E5%92%8CH5%20%E7%9A%84%E4%BA%A4%E4%BA%92%E6%96%B9%E5%BC%8F/"/>
    <url>/2023/04/22/APP%E5%92%8CH5%20%E7%9A%84%E4%BA%A4%E4%BA%92%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="原生-APP-和-H5-的交互桥"><a href="#原生-APP-和-H5-的交互桥" class="headerlink" title="原生 APP 和 H5 的交互桥"></a>原生 APP 和 H5 的交互桥</h2><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>主流 APP 应用基本都采用 APP+H5 的模式，比如支付宝 APP 中的蚂蚁森林、基金的部分页面都是采用的 H5 页面。这里需要考虑 APP 和 H5 之间的通信，即：APP 和 H5 的交互桥</p><span id="more"></span><p>现在接触的交互桥有两种，1、通过 UniApp 开发的 APP 与 H5 交互，2、原生 APP 与 H5 的交互，以下主要是：原生 APP 和 H5 的通信</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> browserType <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;/@/utils/browserType&quot;</span>;<br><br><span class="hljs-keyword">const</span> setupWVJBridge = (callback): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(browserType, <span class="hljs-string">&quot;browserType&quot;</span>);<br>  <span class="hljs-keyword">if</span> (browserType.<span class="hljs-property">system</span> === <span class="hljs-string">&quot;android&quot;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">WebViewJavascriptBridge</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">callback</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">WebViewJavascriptBridge</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<br>        <span class="hljs-string">&quot;WebViewJavascriptBridgeReady&quot;</span>,<br>        <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">callback</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">WebViewJavascriptBridge</span>),<br>        <span class="hljs-literal">false</span><br>      );<br>    &#125;<br>  &#125; <span class="hljs-comment">// android</span><br><br>  <span class="hljs-keyword">if</span> (browserType.<span class="hljs-property">system</span> === <span class="hljs-string">&quot;ios&quot;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">WebViewJavascriptBridge</span>)<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">callback</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">WebViewJavascriptBridge</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">WVJBCallbacks</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">WVJBCallbacks</span>.<span class="hljs-title function_">push</span>(callback);<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">WVJBCallbacks</span> = [callback];<br>    <span class="hljs-keyword">const</span> <span class="hljs-title class_">WVJBIframe</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;iframe&quot;</span>);<br>    <span class="hljs-title class_">WVJBIframe</span>.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;none&quot;</span>;<br>    <span class="hljs-title class_">WVJBIframe</span>.<span class="hljs-property">src</span> = <span class="hljs-string">&quot;https://__bridge_loaded__&quot;</span>;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">appendChild</span>(<span class="hljs-title class_">WVJBIframe</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">removeChild</span>(<span class="hljs-title class_">WVJBIframe</span>);<br>    &#125;, <span class="hljs-number">0</span>);<br>  &#125; <span class="hljs-comment">// ios</span><br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getBridge</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">setupWVJBridge</span>(<span class="hljs-function">(<span class="hljs-params">bridge</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!bridge) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;无法获取bridge&quot;</span>));<br>      &#125;<br>      <span class="hljs-title function_">resolve</span>(bridge);<br>    &#125;);<br>  &#125;);<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> getBridge;<br></code></pre></td></tr></table></figure><h3 id="判断系统"><a href="#判断系统" class="headerlink" title="判断系统"></a>判断系统</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs js">interface browserTypeResult &#123;<br>  <span class="hljs-attr">system</span>: string; <span class="hljs-comment">// 系统</span><br>  <span class="hljs-attr">systemVs</span>: string; <span class="hljs-comment">// 系统版本</span><br>  <span class="hljs-attr">platform</span>: string; <span class="hljs-comment">// 平台</span><br>  <span class="hljs-attr">supporter</span>: string; <span class="hljs-comment">// 内核</span><br>  <span class="hljs-attr">supporterVs</span>: string; <span class="hljs-comment">// 内核版本</span><br>  <span class="hljs-attr">engine</span>: string; <span class="hljs-comment">// 载体</span><br>  <span class="hljs-attr">engineVs</span>: string; <span class="hljs-comment">// 载体版本</span><br>  shell?: string; <span class="hljs-comment">// 外壳</span><br>  shellVs?: string; <span class="hljs-comment">// 外壳版本</span><br>&#125;<br><br><span class="hljs-keyword">const</span> browserType = (): <span class="hljs-function"><span class="hljs-params">browserTypeResult</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> ua = navigator.<span class="hljs-property">userAgent</span>.<span class="hljs-title function_">toLowerCase</span>();<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">testUa</span> = (<span class="hljs-params">regexp: <span class="hljs-built_in">RegExp</span></span>) =&gt; regexp.<span class="hljs-title function_">test</span>(ua);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">testVs</span> = (<span class="hljs-params">regexp: <span class="hljs-built_in">RegExp</span></span>) =&gt;<br>    (ua.<span class="hljs-title function_">match</span>(regexp) + <span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[^0-9|_.]/gi</span>, <span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/_/gi</span>, <span class="hljs-string">&quot;.&quot;</span>);<br><br>  <span class="hljs-comment">// 系统</span><br>  <span class="hljs-keyword">let</span> system = <span class="hljs-string">&quot;unknown&quot;</span>;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows|win32|win64|wow32|wow64/gi</span>)) &#123;<br>    system = <span class="hljs-string">&quot;windows&quot;</span>; <span class="hljs-comment">// window系统</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/macintosh|macintel/gi</span>)) &#123;<br>    system = <span class="hljs-string">&quot;osx&quot;</span>; <span class="hljs-comment">// osx系统</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/x11/gi</span>)) &#123;<br>    system = <span class="hljs-string">&quot;linux&quot;</span>; <span class="hljs-comment">// linux系统</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/android|adr/gi</span>)) &#123;<br>    system = <span class="hljs-string">&quot;android&quot;</span>; <span class="hljs-comment">// android系统</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/ios|iphone|ipad|ipod|iwatch/gi</span>)) &#123;<br>    system = <span class="hljs-string">&quot;ios&quot;</span>; <span class="hljs-comment">// ios系统</span><br>  &#125;<br><br>  <span class="hljs-comment">// 系统版本</span><br>  <span class="hljs-keyword">let</span> systemVs = <span class="hljs-string">&quot;unknown&quot;</span>;<br>  <span class="hljs-keyword">if</span> (system === <span class="hljs-string">&quot;windows&quot;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 5.0|windows 2000/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;2000&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 5.1|windows xp/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;xp&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 5.2|windows 2003/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;2003&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 6.0|windows vista/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;vista&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 6.1|windows 7/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;7&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 6.2|windows 8/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;8&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 6.3|windows 8.1/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;8.1&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/windows nt 10.0|windows 10/gi</span>)) &#123;<br>      systemVs = <span class="hljs-string">&quot;10&quot;</span>;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (system === <span class="hljs-string">&quot;osx&quot;</span>) &#123;<br>    systemVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/os x [\d._]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (system === <span class="hljs-string">&quot;android&quot;</span>) &#123;<br>    systemVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/android [\d._]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (system === <span class="hljs-string">&quot;ios&quot;</span>) &#123;<br>    systemVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/os [\d._]+/gi</span>);<br>  &#125;<br><br>  <span class="hljs-comment">// 平台</span><br>  <span class="hljs-keyword">let</span> platform = <span class="hljs-string">&quot;unknow&quot;</span>;<br>  <span class="hljs-keyword">if</span> (system === <span class="hljs-string">&quot;windows&quot;</span> || system === <span class="hljs-string">&quot;osx&quot;</span> || system === <span class="hljs-string">&quot;linux&quot;</span>) &#123;<br>    platform = <span class="hljs-string">&quot;desktop&quot;</span>; <span class="hljs-comment">// 桌面端</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (system === <span class="hljs-string">&quot;android&quot;</span> || system === <span class="hljs-string">&quot;ios&quot;</span> || <span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/mobile/gi</span>)) &#123;<br>    platform = <span class="hljs-string">&quot;mobile&quot;</span>; <span class="hljs-comment">// 移动端</span><br>  &#125;<br><br>  <span class="hljs-comment">// 内核和载体</span><br>  <span class="hljs-keyword">let</span> engine = <span class="hljs-string">&quot;unknow&quot;</span>;<br>  <span class="hljs-keyword">let</span> supporter = <span class="hljs-string">&quot;unknow&quot;</span>;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/applewebkit/gi</span>) &amp;&amp; <span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/safari/gi</span>)) &#123;<br>    engine = <span class="hljs-string">&quot;webkit&quot;</span>; <span class="hljs-comment">// webkit内核</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/edge/gi</span>)) &#123;<br>      supporter = <span class="hljs-string">&quot;edge&quot;</span>; <span class="hljs-comment">// edge浏览器</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/opr/gi</span>)) &#123;<br>      supporter = <span class="hljs-string">&quot;opera&quot;</span>; <span class="hljs-comment">// opera浏览器</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/chrome/gi</span>)) &#123;<br>      supporter = <span class="hljs-string">&quot;chrome&quot;</span>; <span class="hljs-comment">// chrome浏览器</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      supporter = <span class="hljs-string">&quot;safari&quot;</span>; <span class="hljs-comment">// safari浏览器</span><br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/gecko/gi</span>) &amp;&amp; <span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/firefox/gi</span>)) &#123;<br>    engine = <span class="hljs-string">&quot;gecko&quot;</span>; <span class="hljs-comment">// gecko内核</span><br>    supporter = <span class="hljs-string">&quot;firefox&quot;</span>; <span class="hljs-comment">// firefox浏览器</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/presto/gi</span>)) &#123;<br>    engine = <span class="hljs-string">&quot;presto&quot;</span>; <span class="hljs-comment">// presto内核</span><br>    supporter = <span class="hljs-string">&quot;opera&quot;</span>; <span class="hljs-comment">// opera浏览器</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/trident|compatible|msie/gi</span>)) &#123;<br>    engine = <span class="hljs-string">&quot;trident&quot;</span>; <span class="hljs-comment">// trident内核</span><br>    supporter = <span class="hljs-string">&quot;iexplore&quot;</span>; <span class="hljs-comment">// iexplore浏览器</span><br>  &#125;<br><br>  <span class="hljs-comment">// 内核版本</span><br>  <span class="hljs-keyword">let</span> engineVs = <span class="hljs-string">&quot;unknow&quot;</span>;<br>  <span class="hljs-keyword">if</span> (engine === <span class="hljs-string">&quot;webkit&quot;</span>) &#123;<br>    engineVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/applewebkit\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (engine === <span class="hljs-string">&quot;gecko&quot;</span>) &#123;<br>    engineVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/gecko\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (engine === <span class="hljs-string">&quot;presto&quot;</span>) &#123;<br>    engineVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/presto\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (engine === <span class="hljs-string">&quot;trident&quot;</span>) &#123;<br>    engineVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/trident\/[\d.]+/gi</span>);<br>  &#125;<br><br>  <span class="hljs-comment">// 载体版本</span><br>  <span class="hljs-keyword">let</span> supporterVs = <span class="hljs-string">&quot;unknow&quot;</span>;<br>  <span class="hljs-keyword">if</span> (supporter === <span class="hljs-string">&quot;chrome&quot;</span>) &#123;<br>    supporterVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/chrome\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (supporter === <span class="hljs-string">&quot;safari&quot;</span>) &#123;<br>    supporterVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/version\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (supporter === <span class="hljs-string">&quot;firefox&quot;</span>) &#123;<br>    supporterVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/firefox\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (supporter === <span class="hljs-string">&quot;opera&quot;</span>) &#123;<br>    supporterVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/opr\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (supporter === <span class="hljs-string">&quot;iexplore&quot;</span>) &#123;<br>    supporterVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/(msie [\d.]+)|(rv:[\d.]+)/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (supporter === <span class="hljs-string">&quot;edge&quot;</span>) &#123;<br>    supporterVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/edge\/[\d.]+/gi</span>);<br>  &#125;<br><br>  <span class="hljs-comment">// 外壳和外壳版本</span><br>  <span class="hljs-keyword">let</span> shell = <span class="hljs-string">&quot;none&quot;</span>;<br>  <span class="hljs-keyword">let</span> shellVs = <span class="hljs-string">&quot;unknow&quot;</span>;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/wanxue/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;wanxue&quot;</span>; <span class="hljs-comment">// 完美大学 app</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/wanxue\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/micromessenger/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;wechat&quot;</span>; <span class="hljs-comment">// 微信浏览器</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/micromessenger\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/qqbrowser/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;qq&quot;</span>; <span class="hljs-comment">// QQ浏览器</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/qqbrowser\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/ubrowser/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;uc&quot;</span>; <span class="hljs-comment">// UC浏览器</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/ubrowser\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/2345explorer/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;2345&quot;</span>; <span class="hljs-comment">// 2345浏览器</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/2345explorer\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/metasr/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;sougou&quot;</span>; <span class="hljs-comment">// 搜狗浏览器</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/lbbrowser/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;liebao&quot;</span>; <span class="hljs-comment">// 猎豹浏览器</span><br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/maxthon/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;maxthon&quot;</span>; <span class="hljs-comment">// 遨游浏览器</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/maxthon\/[\d.]+/gi</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">testUa</span>(<span class="hljs-regexp">/bidubrowser/gi</span>)) &#123;<br>    shell = <span class="hljs-string">&quot;baidu&quot;</span>; <span class="hljs-comment">// 百度浏览器</span><br>    shellVs = <span class="hljs-title function_">testVs</span>(<span class="hljs-regexp">/bidubrowser [\d.]+/gi</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> &#123;<br>    engine, <span class="hljs-comment">// 系统</span><br>    engineVs, <span class="hljs-comment">// 系统版本</span><br>    platform, <span class="hljs-comment">// 平台</span><br>    supporter, <span class="hljs-comment">// 内核</span><br>    supporterVs, <span class="hljs-comment">// 内核版本</span><br>    system, <span class="hljs-comment">// 载体</span><br>    systemVs, <span class="hljs-comment">// 载体版本</span><br>    ...(shell === <span class="hljs-string">&quot;none&quot;</span> ? &#123;&#125; : &#123; shell, shellVs &#125;), <span class="hljs-comment">// shell:外壳 shellVs:外壳版本</span><br>  &#125;;<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">browserType</span>(); <span class="hljs-comment">// 判断当前运行环境</span><br></code></pre></td></tr></table></figure><h3 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">getBridge</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">bridge: any</span>) =&gt;</span> bridge.<span class="hljs-title function_">callHandler</span>(<span class="hljs-string">&quot;onSwitchOpen&quot;</span>));<br></code></pre></td></tr></table></figure><h2 id="当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App"><a href="#当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App" class="headerlink" title="当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App"></a>当已有H5的功能页面时，可能会有复用H5页面的需求。即：点击App内的路由会直接跳转到浏览器的H5页面，然后在H5进行操作之后，再跳转回App</h2><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><ol><li><p>App的前置工作</p><p>UniApp中也提供了一个web-view容器，用来打开外部的页面</p><p>形如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">web-view</span> <span class="hljs-attr">:webview-styles</span>=<span class="hljs-string">&quot;webviewStyles&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;src&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">web-view</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>src即是需要跳转到的H5的页面路径。路径上可以通过拼接的方式携带对应的参数，Uni本身也提供了一种post Message的方式来传递参数</p></li><li><p>H5的前置工作和引用</p><ol><li><p>首页引入Uni的js桥</p><p>在public的文件夹下的index.html中，引入Uni的SDK，形如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script src=<span class="hljs-string">&quot;&lt;%= BASE_URL %&gt;js/uni.js&quot;</span> rel=<span class="hljs-string">&quot;prefetch&quot;</span>&gt;&lt;/script&gt;<br>&lt;!-- <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> --&gt;<br></code></pre></td></tr></table></figure><p>可以下载下来或者直接引用网络地址（不同的版本的SDK可能会有不同的bug和效果，要关注官网最新的SDK）</p></li><li><p>在对应页面进行桥事件的监听，并调用Uni的方法</p><p>SDK提供了一个事件UniAppJSBridgeReady，可以监听桥是否完成，完成后，可以直接调用给定的uni的方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;UniAppJSBridgeReady&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.goback&quot;</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-function">(<span class="hljs-params">evt</span>) =&gt;</span> &#123;<br>          uni.<span class="hljs-title function_">navigateBack</span>(&#123;<br>            <span class="hljs-attr">delta</span>: <span class="hljs-number">1</span>,<br>          &#125;);<br>        &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p>如上述代码，当桥完成后，进行了一个绑定的操作，当点击H5中的按钮，可以直接调用uni.navigateBack，回到app</p></li><li><p>通过调用uni的路由方法，跳回App中</p><p>在H5中，也可以直接调用Uni的路由，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">uni.<span class="hljs-title function_">navigateTo</span>(&#123;<br>          <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/pages/couponManager/couponManager&quot;</span>,<br>&#125;);<br></code></pre></td></tr></table></figure></li></ol></li></ol><h3 id="实际开发遇到的问题"><a href="#实际开发遇到的问题" class="headerlink" title="实际开发遇到的问题"></a>实际开发遇到的问题</h3><ol><li><p>UniAppJSBridgeReady方法不生效</p><p>首先要检查UniAppJSBridgeReady的监听事件是否书写正确，然后检查sdk版本。有的版本的sdk是有bug的，会在打包后，部署到测试环境失效。一般需要使用官网的最新sdk</p></li><li><p>绑定事件阻塞</p><p>本次开发的H5页面会有较大的图片加载过程，会遇到绑定点击返回事件后，点击失效的情况，即浏览器正在加载js和下载图片，无法处理绑定的click事件，需要等图片下载完成后，再执行click事件。这里我直接通过图片初始化地址为空，然后在mounted周期给图片赋值地址来临时解决</p></li><li><p>请求头</p><p>后端有判断不同请求头走对应的接口的逻辑，所以，可以在跳转的链接中拼接hearderInfo来替换H5中的请求头，如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">config.<span class="hljs-property">headers</span> = &#123;<br>          <span class="hljs-attr">terminalcode</span>: headerTem.<span class="hljs-property">terminalcode</span>,<br>          <span class="hljs-attr">terminaltype</span>: headerTem.<span class="hljs-property">terminaltype</span>,<br>          <span class="hljs-attr">devicetype</span>: headerTem.<span class="hljs-property">devicetype</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>当从app跳转到h5时，devicetype为：APP，当用户直接用小程序或者H5访问时，devicetype为：WECHAT</p></li><li><p>埋点</p><p>需要实现编辑、修改、保存等埋点。这里的问题是，当从app跳入h5后，做一系列的操作，再返回到app这个过程中，需要在离开h5的时候发送埋点请求。而vue中通常使用的周期如：beforeDestroy无法在上述情况下触发。需要采用新的判断方法：visibilitychange</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;visibilitychange&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">compareChange</span>);<br></code></pre></td></tr></table></figure><p>visibilitychange可以判断的是：当前浏览器是否被隐藏或者显示。</p><p>当从h5跳回app时，不是销毁或者离开页面，而是直接销毁或者隐藏整个webView的浏览器，所以只会触发visibilitychange事件。</p></li><li><p>待续</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>APP</tag>
      
      <tag>H5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>埋点的配置</title>
    <link href="/2023/03/21/%E5%9F%8B%E7%82%B9%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/03/21/%E5%9F%8B%E7%82%B9%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="埋点的配置"><a href="#埋点的配置" class="headerlink" title="埋点的配置"></a>埋点的配置</h2><p>记录埋点的配置步骤</p><span id="more"></span><h3 id="微信小程序埋点"><a href="#微信小程序埋点" class="headerlink" title="微信小程序埋点"></a>微信小程序埋点</h3><ol><li>安装依赖<br>package.json</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install umtrack-wx@latest --save<br></code></pre></td></tr></table></figure><ol start="2"><li>配置config<br>app.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;umtrack-wx&quot;</span>;<br><span class="hljs-title class_">App</span>(&#123;<br>  <span class="hljs-attr">umengConfig</span>:&#123;<br>    <span class="hljs-attr">appKey</span>:<span class="hljs-string">&#x27;YOUR_UMENG_APPKEY&#x27;</span>,<span class="hljs-comment">//由友盟分配的APP_KEY</span><br>    <span class="hljs-attr">useOpenid</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">// 是否使用openid进行统计，此项为false时将使用友盟+随机ID进行用户统计。使用openid来统计微信小程序的用户，会使统计的指标更为准确，对系统准确性要求高的应用推荐使用OpenID。</span><br>    <span class="hljs-attr">autoGetOpenid</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">// 是否需要通过友盟后台获取openid，如若需要，请到友盟后台设置appId及secret</span><br>    <span class="hljs-attr">debug</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">//是否打开调试模式</span><br>    <span class="hljs-attr">uploadUserInfo</span>:<span class="hljs-literal">true</span><span class="hljs-comment">// 上传用户信息，上传后可以查看有头像的用户分享信息，同时在查看用户画像时，公域画像的准确性会提升。</span><br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><blockquote><p>开启autoGetOpenid: true并在友盟后台设置有效appId及secret信息。友盟后台配置地址：<a href="https://mp.umeng.com/setting/appset">https://mp.umeng.com/setting/appset</a></p></blockquote></blockquote><ol start="3"><li>添加安全域名</li></ol><p>在微信开发者后台添加request合法域名：umini.shujupie.com</p><ol start="4"><li>调用接口</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.<span class="hljs-property">uma</span>.<span class="hljs-title function_">trackEvent</span>(eventId, eventData);<br></code></pre></td></tr></table></figure><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>tips:</p><p>eventData中如果要传number类型的数据，需要先做String(id)字符串化后，才能正确的被友盟后台记录到，否则一直会是空数据，无法记录到友盟后台</p><p><a href="https://developer.umeng.com/docs/147615/detail/201803">友盟文档</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>point</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue使用</title>
    <link href="/2022/09/15/Vue%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/09/15/Vue%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="Vue使用"><a href="#Vue使用" class="headerlink" title="Vue使用"></a>Vue使用</h2><span id="more"></span><h3 id="Vue常用库"><a href="#Vue常用库" class="headerlink" title="Vue常用库"></a>Vue常用库</h3><h4 id="toast库"><a href="#toast库" class="headerlink" title="toast库"></a>toast库</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install vue-sonner<br></code></pre></td></tr></table></figure><h3 id="refs-的使用"><a href="#refs-的使用" class="headerlink" title="$refs 的使用"></a>$refs 的使用</h3><p>有时候会访问子组件实例或子元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 父组件</span><br>&lt;base-input ref=<span class="hljs-string">&quot;usernameInput&quot;</span>&gt;&lt;/base-input&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 子组件</span><br>&lt;input ref=<span class="hljs-string">&quot;input&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>那么，我们可以通过 refs 的形式来访问子组件内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">methods</span>: &#123;<br>  <span class="hljs-comment">// 用来从父级组件聚焦输入框</span><br>  <span class="hljs-attr">focus</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">input</span>.<span class="hljs-title function_">focus</span>()<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="问题点"><a href="#问题点" class="headerlink" title="问题点"></a>问题点</h4><p>$refs 只会在组件渲染完成之后生效，并且它们不是响应式的。这仅作为一个用于直接操作子组件的“逃生舱”——<strong>你应该避免在模板或计算属性中访问 $refs</strong></p><p>即：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">computed</span>: &#123;<br>  <span class="hljs-title function_">players</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">playerRef</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> e.<span class="hljs-property">$el</span>;<br>    &#125;);<br>  &#125;,<br>&#125;,<br></code></pre></td></tr></table></figure><p>上述写法是不合理的，这种写法会导致不停的查询 ref 和渲染，导致画面抖动</p><h3 id="自定义指令-loading"><a href="#自定义指令-loading" class="headerlink" title="自定义指令 loading"></a>自定义指令 loading</h3><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> loading <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./loading/index.js&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">install</span>(<span class="hljs-params">Vue</span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&quot;loading&quot;</span>, loading);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="绑定指令文件"><a href="#绑定指令文件" class="headerlink" title="绑定指令文件"></a>绑定指令文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> initPageLoading <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./initPageLoading.vue&quot;</span>;<br><span class="hljs-keyword">import</span> loading <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./normalLoading.vue&quot;</span>;<br><br><span class="hljs-keyword">const</span> initPageLoadingMask = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(initPageLoading); <span class="hljs-comment">// 页面初始化的loading动画（KIVICUBE文字动画）</span><br><span class="hljs-keyword">const</span> loadingMask = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(loading); <span class="hljs-comment">// 数据加载中的页面动画（转圈动画）</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">toggleLoading</span> = (<span class="hljs-params">el, binding</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (binding.<span class="hljs-property">value</span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">nextTick</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      el.<span class="hljs-property">instance</span>.<span class="hljs-property">visible</span> = <span class="hljs-literal">true</span>;<br>      <span class="hljs-title function_">insertDom</span>(el, binding);<br>    &#125;);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    el.<span class="hljs-property">instance</span>.<span class="hljs-property">visible</span> = <span class="hljs-literal">false</span>;<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">insertDom</span> = (<span class="hljs-params">el, binding</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> &#123; fullscreen &#125; = binding?.<span class="hljs-property">modifiers</span>;<br>  <span class="hljs-keyword">if</span> (fullscreen) &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#app&quot;</span>).<span class="hljs-title function_">appendChild</span>(el.<span class="hljs-property">mask</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    el.<span class="hljs-title function_">appendChild</span>(el.<span class="hljs-property">mask</span>);<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">createMask</span> = (<span class="hljs-params">fullscreen</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (fullscreen) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">initPageLoadingMask</span>(&#123;<br>      <span class="hljs-attr">el</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>),<br>      <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;&#125;,<br>    &#125;);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">loadingMask</span>(&#123;<br>      <span class="hljs-attr">el</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>),<br>      <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;&#125;,<br>    &#125;);<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">changeScreenLock</span> = (<span class="hljs-params">isLockLoadDom, isLock</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!isLockLoadDom) <span class="hljs-keyword">return</span>; <span class="hljs-comment">// 如果不是带有锁定滚动的loading，直接return</span><br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">style</span>.<span class="hljs-property">overflow</span> = isLock ? <span class="hljs-string">&quot;hidden&quot;</span> : <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-keyword">if</span> (isLock) &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<br>      <span class="hljs-string">&quot;touchmove&quot;</span>,<br>      <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>        e.<span class="hljs-title function_">preventDefault</span>();<br>      &#125;,<br>      <span class="hljs-literal">false</span><br>    );<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">removeEventListener</span>(<br>      <span class="hljs-string">&quot;touchmove&quot;</span>,<br>      <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>        e.<span class="hljs-title function_">preventDefault</span>();<br>      &#125;,<br>      <span class="hljs-literal">false</span><br>    );<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">changeParentDomPosition</span> = (<span class="hljs-params">el, isShow</span>) =&gt; &#123;<br>  el.<span class="hljs-property">style</span>.<span class="hljs-property">position</span> = isShow ? <span class="hljs-string">&quot;relative&quot;</span> : <span class="hljs-string">&quot;static&quot;</span>;<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-comment">// 初始化绑定(el：父元素，binding：参数)</span><br>  <span class="hljs-attr">inserted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;el: &quot;</span>, el);<br>    <span class="hljs-keyword">const</span> &#123; fullscreen, lock &#125; = binding?.<span class="hljs-property">modifiers</span>;<br>    <span class="hljs-keyword">let</span> mask = <span class="hljs-title function_">createMask</span>(fullscreen);<br>    <span class="hljs-keyword">if</span> (!fullscreen) &#123;<br>      <span class="hljs-title function_">changeParentDomPosition</span>(el, <span class="hljs-literal">true</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-title function_">changeScreenLock</span>(lock, <span class="hljs-literal">true</span>);<br>    &#125;<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(el, &#123;<br>      <span class="hljs-attr">instance</span>: mask,<br>      <span class="hljs-attr">mask</span>: mask.<span class="hljs-property">$el</span>,<br>    &#125;);<br>    binding.<span class="hljs-property">value</span> &amp;&amp; <span class="hljs-title function_">toggleLoading</span>(el, binding);<br>  &#125;,<br>  <span class="hljs-comment">// 数据更新</span><br>  <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el, binding</span>) &#123;<br>    <span class="hljs-keyword">const</span> &#123; fullscreen, lock &#125; = binding?.<span class="hljs-property">modifiers</span>;<br>    <span class="hljs-keyword">if</span> (binding.<span class="hljs-property">oldValue</span> !== binding.<span class="hljs-property">value</span>) &#123;<br>      <span class="hljs-title function_">toggleLoading</span>(el, binding);<br>      <span class="hljs-keyword">if</span> (!fullscreen) &#123;<br>        <span class="hljs-title function_">changeParentDomPosition</span>(el, <span class="hljs-literal">false</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">changeScreenLock</span>(lock, <span class="hljs-literal">false</span>);<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class="hljs-comment">// 离开销毁</span><br>  <span class="hljs-attr">unbind</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) &#123;<br>    el.<span class="hljs-property">instance</span> &amp;&amp; el.<span class="hljs-property">instance</span>.$destroy();<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="loading-样式"><a href="#loading-样式" class="headerlink" title="loading 样式"></a>loading 样式</h4><ol><li><p>initPageLoading.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div<br>    :class=&quot;[visible ? &#x27;visibility opacity1&#x27; : &#x27;un-visibility opacity0&#x27;]&quot;<br>    class=&quot;svg-container flex-center z-100&quot;<br>  &gt;<br>    &lt;svg width=&quot;100%&quot; height=&quot;100%&quot;&gt;<br>      &lt;text<br>        v-for=&quot;item in 3&quot;<br>        :key=&quot;item&quot;<br>        text-anchor=&quot;middle&quot;<br>        x=&quot;50%&quot;<br>        y=&quot;50%&quot;<br>        class=&quot;loading-text&quot;<br>        :class=&quot;`loading-text-$&#123;item&#125;`&quot;<br>        dominant-baseline=&quot;middle&quot;<br>      &gt;<br>        &#123;&#123; loadingText &#125;&#125;<br>      &lt;/text&gt;<br>    &lt;/svg&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br> <span class="hljs-keyword">return</span> &#123;<br>   <span class="hljs-attr">loadingText</span>: <span class="hljs-string">&quot;KIVI CUBE&quot;</span>,<br>   <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br> &#125;;<br>&#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style scoped lang=&quot;scss&quot;&gt;<br><span class="hljs-selector-class">.svg-container</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">background-color</span>: white;<br>  <span class="hljs-attribute">transition</span>: all $el_entering_duration ease-out;<br>&#125;<br><br><span class="hljs-selector-class">.loading-text</span> &#123;<br>  <span class="hljs-attribute">animation</span>: stroke <span class="hljs-number">6s</span> infinite linear;<br>  fill: none;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">48px</span>;<br>  <span class="hljs-attribute">font-weight</span>: bold;<br>  <span class="hljs-attribute">letter-spacing</span>: <span class="hljs-number">3px</span>;<br>  stroke-dasharray: <span class="hljs-number">130</span> <span class="hljs-number">270</span>;<br>  stroke-<span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">text-transform</span>: uppercase;<br>&#125;<br><br><span class="hljs-selector-class">.loading-text-1</span> &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">2s</span>;<br>  stroke: <span class="hljs-number">#15c993</span>;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">#15c993</span>;<br>&#125;<br><br><span class="hljs-selector-class">.loading-text-2</span> &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">4s</span>;<br>  stroke: <span class="hljs-number">#04adc0</span>;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">#04adc0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.loading-text-3</span> &#123;<br>  <span class="hljs-attribute">animation-delay</span>: -<span class="hljs-number">6s</span>;<br>  stroke: <span class="hljs-number">#3ce7d0</span>;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">#3ce7d0</span>;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> stroke &#123;<br>  <span class="hljs-number">100%</span> &#123;<br>    stroke-dashoffset: -<span class="hljs-number">400</span>;<br>  &#125;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure></li><li><p>normalLoading.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div<br>    :class=&quot;[visible ? &#x27;visibility opacity1&#x27; : &#x27;un-visibility opacity0&#x27;]&quot;<br>    class=&quot;svg-warp-container flex-center z-1&quot;<br>  &gt;<br>    &lt;div class=&quot;svg-container&quot;&gt;<br>      &lt;svg&gt;<br>        &lt;circle<br>          class=&quot;loading-inner&quot;<br>          cx=&quot;25&quot;<br>          cy=&quot;25&quot;<br>          r=&quot;20&quot;<br>          fill=&quot;none&quot;<br>          stroke=&quot;#00b2f8&quot;<br>          stroke-width=&quot;3&quot;<br>          stroke-linecap=&quot;round&quot;<br>        /&gt;<br>      &lt;/svg&gt;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style scoped lang=&quot;scss&quot;&gt;<br><span class="hljs-selector-class">.svg-warp-container</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>($color: <span class="hljs-number">#fff</span>, $alpha: <span class="hljs-number">0.9</span>);<br>  <span class="hljs-attribute">transition</span>: all $el_entering_duration ease-out;<br><br>  <span class="hljs-selector-class">.svg-container</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-selector-class">.loading-inner</span> &#123;<br>  <span class="hljs-attribute">animation</span>: kf-inner <span class="hljs-number">1.5s</span> ease-in-out infinite;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> kf-inner &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    stroke-dasharray: <span class="hljs-number">1</span>, <span class="hljs-number">125</span>;<br>    stroke-dashoffset: <span class="hljs-number">0</span>;<br>  &#125;<br><br>  <span class="hljs-number">50%</span> &#123;<br>    stroke-dasharray: <span class="hljs-number">100</span>, <span class="hljs-number">125</span>;<br>    stroke-dashoffset: -<span class="hljs-number">25px</span>;<br>  &#125;<br><br>  <span class="hljs-number">100%</span> &#123;<br>    stroke-dasharray: <span class="hljs-number">100</span>, <span class="hljs-number">125</span>;<br>    stroke-dashoffset: -<span class="hljs-number">125px</span>;<br>  &#125;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure></li></ol><h4 id="main-js-中引用自定义指令"><a href="#main-js-中引用自定义指令" class="headerlink" title="main.js 中引用自定义指令"></a>main.js 中引用自定义指令</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> directive <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/directive/index&quot;</span>;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(directive);<br></code></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pc-bg&quot;</span> <span class="hljs-attr">v-loading.fullscreen.lock</span>=<span class="hljs-string">&quot;fullscreenLoading&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pc-bg&quot;</span> <span class="hljs-attr">v-loading</span>=<span class="hljs-string">&quot;loading&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h3><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">ARScenesList</span> = [<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">0</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s0.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s1.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s2.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s3.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">4</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s4.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">5</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s5.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">6</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s6.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">7</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s7.jpg&quot;</span>),<br>       &#125;,<br>       &#123;<br>         <span class="hljs-attr">id</span>: <span class="hljs-number">8</span>,<br>         <span class="hljs-attr">src</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@img/pages/home/making-step/s8.jpg&quot;</span>),<br>       &#125;,<br>     ],<br></code></pre></td></tr></table></figure><h4 id="改造携带-order"><a href="#改造携带-order" class="headerlink" title="改造携带 order"></a>改造携带 order</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> finalVideo = <span class="hljs-title function_">deepClone</span>(<span class="hljs-title class_">ARScenesList</span>).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">e, index</span>) =&gt;</span> &#123;<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(e, &#123;<br>    <span class="hljs-attr">order</span>: index,<br>  &#125;);<br>  <span class="hljs-keyword">return</span> e;<br>&#125;);<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">videosWithOrder</span>.<span class="hljs-title function_">push</span>(...finalVideo);<br></code></pre></td></tr></table></figure><h4 id="渲染数据"><a href="#渲染数据" class="headerlink" title="渲染数据"></a>渲染数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div<br>    v-for=&quot;(video, index) in videosWithOrder&quot;<br>    :key=&quot;index&quot;<br>    :style=&quot;checkVideoStyle(video, index)&quot;<br>    @click=&quot;clickCurrentVideo(video, index)&quot;<br>  &gt;<br>    &lt;img<br>      class=&quot;single-carousel-image pointer&quot;<br>      :src=&quot;video.src&quot;<br>      :alt=&quot;$t(&#x27;components.VideoCarousel.videoPoster&#x27;)&quot;<br>    /&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><h4 id="生成位置样式"><a href="#生成位置样式" class="headerlink" title="生成位置样式"></a>生成位置样式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;<br> computed: &#123;<br>  checkVideoStyle() &#123;<br>    return (video, renderIndex) =&gt; &#123;<br>      const positionList = [];<br>      const videosWithOrderLength = this.videosWithOrder.length - 1;<br>      const middleNumber = getMiddleNumber(videosWithOrderLength);<br>      this.videosWithOrder.forEach((e, index) =&gt; &#123;<br>        positionList.push(<br>          this.generateTransformNumberX(<br>            index,<br>            middleNumber,<br>            video.order,<br>            renderIndex<br>          )<br>        );<br>      &#125;);<br>       const offsetX = positionList[video.order];<br>      const offsetY = 0;<br>      let style = &#123;<br>        transform: `scale(1) translate3d($&#123;offsetX&#125;%, $&#123;offsetY&#125;, 0)`,<br>      &#125;;<br>      return style;<br>    &#125;;<br>  &#125;,<br>&#125;,<br>  methods: &#123;<br>    generateTransformNumberX(index, middleNumber, order) &#123;<br>      let transformNumberX = 0;<br>      if (this.type === &quot;card&quot;) &#123;<br>        // pc端卡片式轮播图<br>        const singleSpacing = 100 + 13; // 单个间距<br>        const scaleSpacing = 17; // 缩放导致初始位置靠右,需减去误差<br>        transformNumberX = index * singleSpacing - scaleSpacing;<br>        if (index &gt;= middleNumber) &#123;<br>          transformNumberX += 40;<br>        &#125;<br>      &#125;<br>      return transformNumberX;<br>    &#125;,<br>     clickCurrentVideo(item, index) &#123;<br>      if (index !== this.currentPlayingVideoIndex) &#123;<br>        this.transformDirection = &quot;rightToLeft&quot;;<br>        this.currentPlayingVideoIndex = index;<br>        this.changeVideoOrderThenPlay(<br>          item?.order,<br>          this.currentPlayingVideoIndex<br>        );<br>      &#125;<br>    &#125;,<br>   changeVideoOrderThenPlay(clickOrder, currentPlayingVideoIndex) &#123;<br>       const middleIndex = getMiddleNumber(this.videosWithOrder?.length - 1)<br>      const switchStep = middleIndex - clickOrder;<br>      const totalVideoLength = this.videosWithOrder?.length;<br>      this.videosWithOrder.forEach((e) =&gt; &#123;<br>        if (<br>          e.order + switchStep &gt;= 0 &amp;&amp;<br>          e.order + switchStep &lt;= totalVideoLength - 1<br>        ) &#123;<br>          e.order += switchStep;<br>        &#125; else if (e.order + switchStep &lt; 0) &#123;<br>          e.order = e.order + totalVideoLength + switchStep;<br>        &#125; else if (e.order + switchStep &gt; totalVideoLength - 1) &#123;<br>          e.order = e.order - totalVideoLength + switchStep;<br>        &#125;<br>      &#125;);<br>     &#125;,<br>    getMiddleNumber(totalNumber)  &#123;<br>     if (typeof totalNumber === &quot;number&quot;) &#123;<br>       return Math.ceil(totalNumber / 2);<br>     &#125;<br>&#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="样式或者-vue-中写法的记录问题贴"><a href="#样式或者-vue-中写法的记录问题贴" class="headerlink" title="样式或者 vue 中写法的记录问题贴"></a>样式或者 vue 中写法的记录问题贴</h3><p>这个里主要是关于样式中的坑和 vue 中一些特定写法的记录，统一放入这个帖子中，方便查询</p><p><strong>vue 中直接在 style 中进行判断</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-tag</span></span><br><span class="hljs-tag">  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#x27;backgroundColor:white;marginLeft:20px;border:none;marginRight:20px;fontSize:14px;color:&#x27;+ (isEdit == true ? &#x27;black&#x27;: &#x27;lightgrey&#x27;) +&#x27;&#x27;&quot;</span></span><br><span class="hljs-tag">  &gt;</span>是否续订:&lt;/el-tag<br>&gt;<br></code></pre></td></tr></table></figure><blockquote><p>外部用“”，内部还需要用‘’包裹，然后再内部使用拼接的写法，同时判断这个条件，还需要用括号包裹起来，并且，对应的值，也需要用‘’包裹起来。</p></blockquote><h3 id="Array-apply-null-length-20-和-new-Array-20"><a href="#Array-apply-null-length-20-和-new-Array-20" class="headerlink" title="Array.apply(null, { length: 20 }) 和 new Array(20)"></a><strong>Array.apply(null, { length: 20 }) 和 new Array(20)</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">render</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">createElement</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>,<br>    <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>, &#123; <span class="hljs-attr">length</span>: <span class="hljs-number">20</span> &#125;).<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;hi&#x27;</span>)<br>    &#125;)<br>  )<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>Array.apply(null, { length: 20 }) 生成的数组形式为[undifiend,undifiend,undifiend,…..],</p><p>new Array(20)等价于[，，，，]</p></blockquote><p>后面使用.map 方法的时候，map 方法的限制为：map 函数并不会遍历数组中没有初始化或者被 delete 的元素（有相同限制还有 forEach, reduce 方法）。而 new Array 并没有初始化。所以，需要采用官方的写法。</p><h3 id="ES6-新方法"><a href="#ES6-新方法" class="headerlink" title="ES6 新方法"></a>ES6 新方法</h3><p><strong>使用 reduce 取代 map 和 filter</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> num = [<span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>];<br><span class="hljs-keyword">let</span> doubleNum = num.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">finalNum, num</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">let</span> numTem = num * <span class="hljs-number">2</span>;<br>  <span class="hljs-keyword">if</span> (numTem &gt; <span class="hljs-number">50</span>) &#123;<br>    finalNum.<span class="hljs-title function_">push</span>(numTem);<br>  &#125;<br>  <span class="hljs-keyword">return</span> finalNum;<br>&#125;, []);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(doubleNum);<br></code></pre></td></tr></table></figure><p><strong>统计数组中相同项的个数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> name = [<span class="hljs-string">&quot;tom&quot;</span>, <span class="hljs-string">&quot;jerry&quot;</span>, <span class="hljs-string">&quot;tony&quot;</span>, <span class="hljs-string">&quot;jack&quot;</span>, <span class="hljs-string">&quot;tony&quot;</span>, <span class="hljs-string">&quot;jack&quot;</span>];<br><span class="hljs-keyword">let</span> nameAsiys = name.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">nameObject, object</span>) =&gt;</span> &#123;<br>  nameObject[object] = nameObject[object] ? ++nameObject[object] : <span class="hljs-number">1</span>;<br>&#125;, &#123;&#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(nameAsiys);<br></code></pre></td></tr></table></figure><p><strong>删除不需要的属性</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> &#123; _lee, _meng, ...others &#125; = &#123;<br>  <span class="hljs-attr">_lee</span>: <span class="hljs-string">&quot;first&quot;</span>,<br>  <span class="hljs-attr">_meng</span>: <span class="hljs-string">&quot;last&quot;</span>,<br>  <span class="hljs-attr">object1</span>: <span class="hljs-string">&quot;111&quot;</span>,<br>  <span class="hljs-attr">object2</span>: <span class="hljs-string">&quot;222&quot;</span>,<br>  <span class="hljs-attr">object3</span>: <span class="hljs-string">&quot;333&quot;</span>,<br>  <span class="hljs-attr">object4</span>: <span class="hljs-string">&quot;444&quot;</span>,<br>&#125;;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(others);<br></code></pre></td></tr></table></figure><p><strong>在函数参数中解构嵌套对象</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> originObject = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;lee&quot;</span>,<br>  <span class="hljs-attr">test</span>: &#123;<br>    <span class="hljs-attr">origin</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>    <span class="hljs-attr">fix</span>: <span class="hljs-string">&quot;3&quot;</span>,<br>    <span class="hljs-attr">bug</span>: <span class="hljs-string">&quot;555&quot;</span>,<br>  &#125;,<br>&#125;;<br><span class="hljs-keyword">let</span> &#123;<br>  name,<br>  <span class="hljs-attr">test</span>: &#123; bug &#125;,<br>&#125; = originObject;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name, bug);<br></code></pre></td></tr></table></figure><p><strong>数组对象去重</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> person = [<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小明&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小张&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小李&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小孙&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小周&quot;</span> &#125;,<br>  &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小陈&quot;</span> &#125;,<br>];<br><span class="hljs-keyword">let</span> personTem = &#123;&#125;;<br><span class="hljs-keyword">let</span> finalList = person.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">personList, element</span>) =&gt;</span> &#123;<br>  personTem[element.<span class="hljs-property">id</span>]<br>    ? <span class="hljs-string">&quot;&quot;</span><br>    : (personTem[element.<span class="hljs-property">id</span>] = <span class="hljs-literal">true</span> &amp;&amp; personList.<span class="hljs-title function_">push</span>(element));<br>  <span class="hljs-keyword">return</span> personList;<br>&#125;, []);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(finalList);<br></code></pre></td></tr></table></figure><h3 id="监听页面离开和返回"><a href="#监听页面离开和返回" class="headerlink" title="监听页面离开和返回"></a>监听页面离开和返回</h3><p><a href="http://www.ruanyifeng.com/blog/2018/11/page_lifecycle_api.html">监听页面离开和返回</a></p><h3 id="可能用到的请求和下载"><a href="#可能用到的请求和下载" class="headerlink" title="可能用到的请求和下载"></a>可能用到的请求和下载</h3><h4 id="vue-中的-axios-请求"><a href="#vue-中的-axios-请求" class="headerlink" title="vue 中的 axios 请求"></a>vue 中的 axios 请求</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><span class="hljs-keyword">const</span> host = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./host&quot;</span>);<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Message</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;element-ui&quot;</span>;<br><br><span class="hljs-keyword">const</span> service = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-attr">baseURL</span>: host.<span class="hljs-property">host</span>,<br>  <span class="hljs-attr">timeout</span>: <span class="hljs-number">60000000</span>,<br>&#125;);<br><br>service.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-function">(<span class="hljs-params">config</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> token = sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;token&quot;</span>);<br><br>    config.<span class="hljs-property">headers</span> = token<br>      ? &#123; <span class="hljs-title class_">Authorization</span>: <span class="hljs-string">&quot;Bearer &quot;</span> + sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;token&quot;</span>) &#125;<br>      : <span class="hljs-string">&quot;&quot;</span>;<br><br>    <span class="hljs-keyword">if</span> (config.<span class="hljs-property">ContentType</span>) &#123;<br>      config.<span class="hljs-property">headers</span>[<span class="hljs-string">&quot;Content-Type&quot;</span>] = config.<span class="hljs-property">ContentType</span>;<br>      <span class="hljs-keyword">delete</span> config.<span class="hljs-property">ContentType</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<br>      <span class="hljs-comment">//本地环境情况下，需要把login的host写死。避免频繁的切换host</span><br>      process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_DEBUG</span> === <span class="hljs-string">&quot;development&quot;</span> &amp;&amp;<br>      config.<span class="hljs-property">url</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;?&quot;</span>)[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;/admin/login&quot;</span><br>    ) &#123;<br>      config.<span class="hljs-property">baseURL</span> = process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_HOST</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">//测试环境或者正式环境，需要将所有的host改成环境文件中的host</span><br>      <span class="hljs-keyword">switch</span> (config.<span class="hljs-property">basicUrl</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;/mall&quot;</span>:<br>          config.<span class="hljs-property">baseURL</span> = process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_HOST1</span>;<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-attr">default</span>:<br>          config.<span class="hljs-property">baseURL</span> = process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_HOST</span>;<br>          <span class="hljs-keyword">break</span>;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> config;<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>();<br>  &#125;<br>);<br><br>service.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-function">(<span class="hljs-params">response</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (response.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>      <span class="hljs-keyword">if</span> (response.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">200</span>) &#123;<br>        <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title class_">Message</span>(&#123;<br>          <span class="hljs-attr">message</span>: response.<span class="hljs-property">data</span>.<span class="hljs-property">msg</span>,<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>          <span class="hljs-attr">duration</span>: <span class="hljs-number">2</span> * <span class="hljs-number">1000</span>,<br>        &#125;);<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>();<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>();<br>    &#125;<br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">String</span>(error).<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;Network Error&quot;</span>)) &#123;<br>      <span class="hljs-title class_">Message</span>(&#123;<br>        <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;网络出错了,请检查网络&quot;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">2</span> * <span class="hljs-number">1000</span>,<br>      &#125;);<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (error.<span class="hljs-property">response</span>.<span class="hljs-property">status</span> === <span class="hljs-number">500</span> || error.<span class="hljs-property">response</span>.<span class="hljs-property">status</span> === <span class="hljs-number">403</span>) &#123;<br>      <span class="hljs-title class_">Message</span>(&#123;<br>        <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;登录已失效，请重新登录&quot;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">2</span> * <span class="hljs-number">1000</span>,<br>      &#125;);<br>      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        sessionStorage.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&quot;resources&quot;</span>);<br>        sessionStorage.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&quot;token&quot;</span>);<br>        sessionStorage.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&quot;adminUserInfo&quot;</span>);<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span> =<br>          process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&quot;development&quot;</span><br>            ? <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">protocol</span> +<br>              <span class="hljs-string">&quot;//&quot;</span> +<br>              <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">host</span> +<br>              <span class="hljs-string">&quot;/#/login&quot;</span><br>            : <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">protocol</span> +<br>              <span class="hljs-string">&quot;//&quot;</span> +<br>              <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">host</span> +<br>              process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_PUBLIC</span> +<br>              <span class="hljs-string">&quot;#/login&quot;</span>;<br>      &#125;, <span class="hljs-number">2000</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>      error.<span class="hljs-property">response</span>.<span class="hljs-property">data</span>.<span class="hljs-property">message</span> === <span class="hljs-string">&quot;The service or item was not found.&quot;</span><br>    ) &#123;<br>      <span class="hljs-title class_">Message</span>(&#123;<br>        <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;平台升级中...&quot;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">2</span> * <span class="hljs-number">1000</span>,<br>      &#125;);<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-title class_">Message</span>(&#123;<br>        <span class="hljs-attr">message</span>: error.<span class="hljs-property">response</span>.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">2</span> * <span class="hljs-number">1000</span>,<br>      &#125;);<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error);<br>    &#125;<br>  &#125;<br>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> service;<br></code></pre></td></tr></table></figure><h4 id="uni-中的请求"><a href="#uni-中的请求" class="headerlink" title="uni 中的请求"></a>uni 中的请求</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; browser, <span class="hljs-title class_">Phone</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/net.js&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">request</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">config</span>) =&gt; &#123;<br>  <span class="hljs-comment">// ****************APP打包请求url配置****************</span><br>  <span class="hljs-comment">//   @当APP进行打包后，从process.env.NODE_ENV获取得到的总是&#x27;production&#x27;，需要新加一种手动控制url的字段，by:李蒙</span><br><br>  <span class="hljs-comment">// let currentEnv = &#x27;development&#x27; //打包APP时使用测试地址</span><br>  <span class="hljs-keyword">let</span> currentEnv = <span class="hljs-string">&quot;production&quot;</span>; <span class="hljs-comment">//打包APP时使用正式地址</span><br>  <span class="hljs-keyword">if</span> (!uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;currentEnv&quot;</span>))<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;currentEnv&quot;</span>, currentEnv);<br>  <span class="hljs-comment">// ****************APP打包请求url配置****************</span><br><br>  <span class="hljs-keyword">let</span> baseUrlDev = <span class="hljs-string">&quot;http://wx.114family.cn/family-iface-dev&quot;</span>; <span class="hljs-comment">//默认请求</span><br>  <span class="hljs-keyword">let</span> bseUrlPro = <span class="hljs-string">&quot;https://wechat.114family.cn/family-iface&quot;</span>; <span class="hljs-comment">//默认请求</span><br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">WXbaseUrlDev</span> = <span class="hljs-string">&quot;http://wx.114family.cn/family-iface-tiny-dev&quot;</span>; <span class="hljs-comment">//微店请求</span><br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">WXbaseUrlPro</span> = <span class="hljs-string">&quot;https://wechat.114family.cn/family-iface-tiny&quot;</span>; <span class="hljs-comment">//微店请求</span><br>  <span class="hljs-keyword">let</span> isDev = currentEnv == <span class="hljs-string">&quot;production&quot;</span>; <span class="hljs-comment">//true为正式环境，false为测试环境</span><br><br>  <span class="hljs-comment">// 1.对基础url进行逻辑判断</span><br>  <span class="hljs-keyword">if</span> (config.<span class="hljs-property">isV</span>) &#123;<br>    <span class="hljs-comment">//是否是微店请求</span><br>    config.<span class="hljs-property">url</span> = isDev ? <span class="hljs-title class_">WXbaseUrlPro</span> + config.<span class="hljs-property">url</span> : <span class="hljs-title class_">WXbaseUrlDev</span> + config.<span class="hljs-property">url</span>;<br>    <span class="hljs-keyword">if</span> (!uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;__urlisV__&quot;</span>)) &#123;<br>      uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;__urlisV__&quot;</span>, isDev ? <span class="hljs-title class_">WXbaseUrlPro</span> : <span class="hljs-title class_">WXbaseUrlDev</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (config.<span class="hljs-property">isPay</span>) &#123;<br>    <span class="hljs-comment">//是否是支付请求</span><br>    config.<span class="hljs-property">url</span> =<br>      <span class="hljs-string">&quot;https://share.qingmh.com/wechat-pay-common/wechatpay/hjt/create&quot;</span>;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (config.<span class="hljs-property">isPayQuery</span>) &#123;<br>    <span class="hljs-comment">// 是否是支付结果查询接口</span><br>    config.<span class="hljs-property">url</span> =<br>      <span class="hljs-string">&quot;https://share.qingmh.com/wechat-pay-common/wechatpay/order/query&quot;</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">//默认请求</span><br>    config.<span class="hljs-property">url</span> = isDev ? bseUrlPro + config.<span class="hljs-property">url</span> : baseUrlDev + config.<span class="hljs-property">url</span>;<br>    <span class="hljs-keyword">if</span> (!uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;url&quot;</span>)) &#123;<br>      uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;url&quot;</span>, isDev ? bseUrlPro : baseUrlDev);<br>    &#125;<br>  &#125;<br>  config.<span class="hljs-property">header</span> = &#123;<br>    <span class="hljs-attr">region</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">terminalcode</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">// 设备号,PC端传浏览器版本号</span><br>    <span class="hljs-attr">terminaltype</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">// 端口类型，例如 APP,XCX,WECHAT,WEB</span><br>    <span class="hljs-attr">stoken</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">// 授权</span><br>    <span class="hljs-attr">devicetype</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">//所属平台,例如 IOS,ANDROID,XCX,WECHAT,WEB(浏览器名称)</span><br>  &#125;;<br><br>  <span class="hljs-comment">//region :lat是string纬度,lng是string经度,province是string省,city是string市,district否string区县,</span><br>  <span class="hljs-comment">//street否string街道,street_number否string街道号</span><br>  <span class="hljs-keyword">let</span> platform = uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;platform&quot;</span>); <span class="hljs-comment">// 机型</span><br>  <span class="hljs-keyword">let</span> stoken = uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;stoken&quot;</span>); <span class="hljs-comment">// 获取后台反的token</span><br>  <span class="hljs-keyword">let</span> isfirstGetSysInfo = uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;firstGetSysInfo&quot;</span>); <span class="hljs-comment">//判断是否已经获取了设备的信息(某些浏览器，无法在第一次打开时获取信息，所以额外的添加了字段)</span><br>  <span class="hljs-comment">// 2.对提供的options进行逻辑判断</span><br>  <span class="hljs-keyword">if</span> (config.<span class="hljs-property">needToken</span>) &#123;<br>    <span class="hljs-comment">//当前请求是否需要token</span><br>    <span class="hljs-keyword">if</span> (stoken == <span class="hljs-string">&quot;&quot;</span> || stoken == <span class="hljs-literal">null</span> || stoken == <span class="hljs-literal">undefined</span> || !stoken) &#123;<br>      <span class="hljs-comment">//当请求中没有token时，直接跳到登录页，by：李蒙</span><br>      uni.<span class="hljs-title function_">reLaunch</span>(&#123;<br>        <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/pages/Login/otherLogin&quot;</span>,<br>      &#125;);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">const</span> region = &#123;<br>        <span class="hljs-attr">lat</span>: <span class="hljs-string">&quot;30.680905&quot;</span>,<br>        <span class="hljs-attr">lng</span>: <span class="hljs-string">&quot;104.117462&quot;</span>,<br>        <span class="hljs-attr">province</span>: <span class="hljs-string">&quot;四川省&quot;</span>,<br>        <span class="hljs-attr">city</span>: <span class="hljs-string">&quot;成都市&quot;</span>,<br>      &#125;;<br>      <span class="hljs-comment">// if (uni.getStorageSync(&#x27;region&#x27;)) &#123;</span><br>      <span class="hljs-comment">//   let regData = JSON.parse(uni.getStorageSync(&#x27;region&#x27;))</span><br>      <span class="hljs-comment">//   region = &#123; ...region, ...regData &#125;</span><br>      <span class="hljs-comment">// &#125;</span><br><br>      <span class="hljs-comment">// config.header.region = encodeURIComponent(JSON.stringify(region))</span><br>      config.<span class="hljs-property">header</span>.<span class="hljs-property">stoken</span> = stoken;<br>    &#125;<br>  &#125;<br>  <span class="hljs-comment">//新增请求头内的devicetype等信息</span><br>  <span class="hljs-keyword">if</span> (isfirstGetSysInfo == <span class="hljs-string">&quot;done&quot;</span>) &#123;<br>    <span class="hljs-comment">//获取了手机系统信息</span><br>    config.<span class="hljs-property">header</span>.<span class="hljs-property">terminalcode</span> = uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;model&quot;</span>);<br>    config.<span class="hljs-property">header</span>.<span class="hljs-property">terminaltype</span> = <span class="hljs-string">&quot;WAP&quot;</span>;<br>    config.<span class="hljs-property">header</span>.<span class="hljs-property">devicetype</span> = uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;platform&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">//未获取手机系统信息</span><br>    <span class="hljs-keyword">let</span> getSystemInfoSync = <span class="hljs-keyword">await</span> uni.<span class="hljs-title function_">getSystemInfoSync</span>();<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;firstGetSysInfo&quot;</span>, <span class="hljs-string">&quot;done&quot;</span>);<br>    <span class="hljs-keyword">let</span> devicetypeTem = <span class="hljs-string">&quot;android&quot;</span>;<br>    <span class="hljs-keyword">let</span> modelTem = <span class="hljs-string">&quot;WAP&quot;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(getSystemInfoSync, <span class="hljs-string">&quot;2222222&quot;</span>);<br>    <span class="hljs-keyword">if</span> (getSystemInfoSync &amp;&amp; getSystemInfoSync.<span class="hljs-property">platform</span> == <span class="hljs-string">&quot;other&quot;</span>) &#123;<br>      <span class="hljs-comment">//当使用wap开发时，有可能获取不到系统信息，改用navigator.userAgent</span><br>      <span class="hljs-keyword">let</span> ua = <span class="hljs-title function_">browser</span>();<br>      <span class="hljs-keyword">let</span> phone = <span class="hljs-title class_">Phone</span>();<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(ua, phone, <span class="hljs-string">&quot;获取的浏览器数据&quot;</span>);<br>      config.<span class="hljs-property">header</span>.<span class="hljs-property">terminalcode</span> = ua.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>) &amp;&amp; ua.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">0</span>];<br>      config.<span class="hljs-property">header</span>.<span class="hljs-property">terminaltype</span> = <span class="hljs-string">&quot;WAP&quot;</span>;<br>      config.<span class="hljs-property">header</span>.<span class="hljs-property">devicetype</span> = phone;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      devicetypeTem =<br>        getSystemInfoSync.<span class="hljs-property">platform</span> == <span class="hljs-string">&quot;devtools&quot;</span><br>          ? <span class="hljs-string">&quot;ios&quot;</span><br>          : getSystemInfoSync.<span class="hljs-property">platform</span>;<br>      modelTem = getSystemInfoSync.<span class="hljs-property">model</span> ? getSystemInfoSync.<span class="hljs-property">model</span> : <span class="hljs-string">&quot;android&quot;</span>;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(modelTem, <span class="hljs-string">&quot;1111&quot;</span>);<br>    config.<span class="hljs-property">header</span>.<span class="hljs-property">terminalcode</span> = modelTem;<br>    config.<span class="hljs-property">header</span>.<span class="hljs-property">terminaltype</span> = <span class="hljs-string">&quot;WAP&quot;</span>;<br>    config.<span class="hljs-property">header</span>.<span class="hljs-property">devicetype</span> = devicetypeTem;<br>    <span class="hljs-comment">//本地存储，后续可能会用到</span><br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;model&quot;</span>, modelTem);<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;platform&quot;</span>, devicetypeTem);<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;windowWidth&quot;</span>, getSystemInfoSync.<span class="hljs-property">windowWidth</span>);<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;windowHeight&quot;</span>, getSystemInfoSync.<span class="hljs-property">windowHeight</span>);<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;safeAreaH&quot;</span>, getSystemInfoSync.<span class="hljs-property">safeArea</span>.<span class="hljs-property">height</span>);<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;safeAreaT&quot;</span>, getSystemInfoSync.<span class="hljs-property">safeArea</span>.<span class="hljs-property">top</span>);<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;statusBarHeight&quot;</span>, getSystemInfoSync.<span class="hljs-property">statusBarHeight</span>);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (!config.<span class="hljs-property">data</span>) &#123;<br>    config.<span class="hljs-property">data</span> = &#123;&#125;;<br>  &#125;<br>  <span class="hljs-comment">//存储一下configHeaderInfo,当你跳转到图文海报的h5的时候，需要将header做一个替换</span><br>  <span class="hljs-keyword">if</span> (!uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;configHeaderInfo&quot;</span>))<br>    uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;configHeaderInfo&quot;</span>, config.<span class="hljs-property">header</span>);<br>  <span class="hljs-comment">//   console.log(config, &#x27;*****请求中携带的参数********&#x27;)</span><br>  <span class="hljs-comment">// 3.将已经配置好的uni.request作为一个promise返回</span><br>  <span class="hljs-keyword">let</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    uni<br>      .<span class="hljs-title function_">request</span>(config)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">responses</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(responses, <span class="hljs-string">&quot;返回的数据&quot;</span>);<br>        <span class="hljs-keyword">if</span> (responses[<span class="hljs-number">0</span>]) &#123;<br>          <span class="hljs-comment">//   if (uni.getStorageSync(&#x27;firstLogin&#x27;)) &#123;</span><br>          <span class="hljs-comment">//     reject(&#123; message: &#x27;网络超时&#x27; &#125;)</span><br>          <span class="hljs-comment">//   &#125; else &#123;</span><br>          uni.<span class="hljs-title function_">clearStorageSync</span>();<br>          uni.<span class="hljs-title function_">reLaunch</span>(&#123;<br>            <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/pages/Login/otherLogin&quot;</span>,<br>          &#125;);<br>          <span class="hljs-comment">//   &#125;</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-keyword">let</span> response = responses[<span class="hljs-number">1</span>].<span class="hljs-property">data</span>; <span class="hljs-comment">// 如果返回的结果是data.data的，嫌麻烦可以用这个，return res,这样只返回一个data</span><br>          <span class="hljs-keyword">if</span> (<br>            (response.<span class="hljs-property">code</span> === <span class="hljs-string">&quot;0016&quot;</span> &amp;&amp; response.<span class="hljs-property">message</span> === <span class="hljs-string">&quot;口令认证失败&quot;</span>) ||<br>            response.<span class="hljs-property">code</span> === <span class="hljs-string">&quot;00909&quot;</span> ||<br>            response.<span class="hljs-property">message</span> === <span class="hljs-string">&quot;网络超时&quot;</span><br>          ) &#123;<br>            uni.<span class="hljs-title function_">clearStorageSync</span>();<br>            uni.<span class="hljs-title function_">reLaunch</span>(&#123;<br>              <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/pages/Login/otherLogin&quot;</span>,<br>              <span class="hljs-title function_">fail</span>(<span class="hljs-params">e</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);<br>              &#125;,<br>            &#125;);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;触发认证失败&quot;</span>, response);<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-title function_">resolve</span>(response);<br>          &#125;<br>        &#125;<br>      &#125;)<br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">reject</span>(error);<br>      &#125;);<br>  &#125;);<br>  <span class="hljs-keyword">return</span> promise;<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> request;<br></code></pre></td></tr></table></figure><h4 id="下载-oss-地址文件"><a href="#下载-oss-地址文件" class="headerlink" title="下载 oss 地址文件"></a>下载 oss 地址文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">downLoadFile</span>(<span class="hljs-params">e</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e, <span class="hljs-string">&#x27;e&#x27;</span>)<br>      <span class="hljs-keyword">let</span> str = e.<span class="hljs-property">name</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>]<br>      <span class="hljs-comment">//   this.downloadByAxios(e.url, str)</span><br>      <span class="hljs-keyword">let</span> urlstr = e.<span class="hljs-property">url</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;http&#x27;</span>, <span class="hljs-string">&#x27;https&#x27;</span>)<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(urlstr, <span class="hljs-string">&#x27;urlstr&#x27;</span>)<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">download</span>(urlstr, str)<br>    &#125;,<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">download</span>(<span class="hljs-params">url, filename</span>) &#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 下载</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span>  &#123;<span class="hljs-type">String</span>&#125; url 目标文件地址</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span>  &#123;<span class="hljs-type">String</span>&#125; filename 想要保存的文件名称</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getBlob</span>(url, <span class="hljs-function">(<span class="hljs-params">blob</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">saveAs</span>(blob, filename)<br>  &#125;)<br>&#125;,<br><span class="hljs-title function_">getBlob</span>(<span class="hljs-params">url, cb</span>) &#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 获取 blob</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span>  &#123;<span class="hljs-type">String</span>&#125; url 目标文件地址</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">cb</span>&#125;</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>()<br>  xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>, url, <span class="hljs-literal">true</span>)<br>  xhr.<span class="hljs-property">responseType</span> = <span class="hljs-string">&#x27;blob&#x27;</span><br>  xhr.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>      <span class="hljs-title function_">cb</span>(xhr.<span class="hljs-property">response</span>)<br>    &#125;<br>  &#125;<br>  xhr.<span class="hljs-title function_">send</span>()<br>&#125;,<br><span class="hljs-title function_">saveAs</span>(<span class="hljs-params">blob, filename</span>) &#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 保存</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span>  &#123;<span class="hljs-type">Blob</span>&#125; <span class="hljs-variable">blob</span></span><br><span class="hljs-comment">   * <span class="hljs-doctag">@param</span>  &#123;<span class="hljs-type">String</span>&#125; filename 想要保存的文件名称</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span>.<span class="hljs-property">msSaveOrOpenBlob</span>) &#123;<br>    navigator.<span class="hljs-title function_">msSaveBlob</span>(blob, filename)<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">var</span> link = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;a&#x27;</span>)<br>    <span class="hljs-keyword">var</span> body = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;body&#x27;</span>)<br>    link.<span class="hljs-property">href</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob)<br>    link.<span class="hljs-property">download</span> = filename<br>    <span class="hljs-comment">// fix Firefox</span><br>    link.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&#x27;none&#x27;</span><br>    body.<span class="hljs-title function_">appendChild</span>(link)<br>    link.<span class="hljs-title function_">click</span>()<br>    body.<span class="hljs-title function_">removeChild</span>(link)<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">revokeObjectURL</span>(link.<span class="hljs-property">href</span>)<br>  &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><h4 id="下载服务器文件"><a href="#下载服务器文件" class="headerlink" title="下载服务器文件"></a>下载服务器文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">exportInfo</span>(<span class="hljs-params">info</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">axios</span>(&#123;<br>      <span class="hljs-attr">method</span>: info.<span class="hljs-property">method</span>,<br>      <span class="hljs-attr">url</span>: info.<span class="hljs-property">params</span> ? info.<span class="hljs-property">url</span> + <span class="hljs-title function_">setUrlParam</span>(info.<span class="hljs-property">params</span>) : info.<span class="hljs-property">url</span>,<br>      <span class="hljs-attr">data</span>: info.<span class="hljs-property">params</span>,<br>      <span class="hljs-attr">responseType</span>: info.<span class="hljs-property">responseType</span>, <span class="hljs-comment">// 优先尝试 blob</span><br>      <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-title class_">Authorization</span>: <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;token&quot;</span>)<br>          ? <span class="hljs-string">&quot;Bearer &quot;</span> + <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;token&quot;</span>)<br>          : <span class="hljs-string">&quot;&quot;</span>,<br>      &#125;,<br>    &#125;)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> objectUrl = <span class="hljs-literal">null</span>,<br>          blob = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span> (info.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;excel&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/vnd.ms-excel&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (info.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;img&quot;</span>) &#123;<br>          objectUrl =<br>            <span class="hljs-string">&quot;data:image/png;base64,&quot;</span> +<br>            <span class="hljs-title function_">btoa</span>(<br>              <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(res.<span class="hljs-property">data</span>).<span class="hljs-title function_">reduce</span>(<br>                <span class="hljs-function">(<span class="hljs-params">data, byte</span>) =&gt;</span> data + <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(byte),<br>                <span class="hljs-string">&quot;&quot;</span><br>              )<br>            );<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (info.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;zip&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/zip&quot;</span> &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (info.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;doc&quot;</span>) &#123;<br>          blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/msword&quot;</span>,<br>          &#125;);<br>          objectUrl = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob);<br>        &#125;<br>        <span class="hljs-keyword">let</span> a = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;a&quot;</span>);<br>        a.<span class="hljs-property">href</span> = objectUrl;<br>        a.<span class="hljs-property">download</span> = info.<span class="hljs-property">name</span>;<br>        <span class="hljs-comment">//a.click();</span><br>        <span class="hljs-comment">//下面这个写法兼容火狐</span><br>        a.<span class="hljs-title function_">dispatchEvent</span>(<br>          <span class="hljs-keyword">new</span> <span class="hljs-title class_">MouseEvent</span>(<span class="hljs-string">&quot;click&quot;</span>, &#123;<br>            <span class="hljs-attr">bubbles</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">cancelable</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">view</span>: <span class="hljs-variable language_">window</span>,<br>          &#125;)<br>        );<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">revokeObjectURL</span>(blob);<br>        <span class="hljs-title function_">resolve</span>(res);<br>      &#125;)<br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;response: &quot;</span>, error);<br>        <span class="hljs-title function_">reject</span>(error);<br>      &#125;);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="前端下载并打包-zip"><a href="#前端下载并打包-zip" class="headerlink" title="前端下载并打包 zip"></a>前端下载并打包 zip</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;script-loader!file-saver&quot;</span>);<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">JSZip</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;jszip&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">FileSaver</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;file-saver&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getFile</span> = (<span class="hljs-params">url</span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>    xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;GET&quot;</span>, url);<br>    xhr.<span class="hljs-property">responseType</span> = <span class="hljs-string">&quot;arraybuffer&quot;</span>;<br>    xhr.<span class="hljs-property">onerror</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">/* handle errors*/</span><br>    &#125;;<br>    xhr.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>        <span class="hljs-title function_">resolve</span>(xhr.<span class="hljs-property">response</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">reject</span>(&#123;&#125;);<br>      &#125;<br>    &#125;;<br>    xhr.<span class="hljs-title function_">send</span>();<br>  &#125;);<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">exportZip</span>(<span class="hljs-params">data, zipName</span>) &#123;<br>  <span class="hljs-keyword">const</span> zip = <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSZip</span>();<br>  <span class="hljs-keyword">const</span> cache = &#123;&#125;;<br>  <span class="hljs-keyword">const</span> promises = [];<br>  <span class="hljs-keyword">await</span> data.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> promise = <span class="hljs-title function_">getFile</span>(item.<span class="hljs-property">url</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>      <span class="hljs-comment">// 下载文件, 并存成ArrayBuffer对象</span><br>      zip.<span class="hljs-title function_">file</span>(item.<span class="hljs-property">name</span> + <span class="hljs-string">&quot;.jpg&quot;</span>, data, &#123;<br>        <span class="hljs-attr">binary</span>: <span class="hljs-literal">true</span>,<br>      &#125;); <span class="hljs-comment">// 逐个添加文件</span><br>      cache[item.<span class="hljs-property">name</span>] = data;<br>    &#125;);<br>    promises.<span class="hljs-title function_">push</span>(promise);<br>  &#125;);<br>  <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">all</span>(promises).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    zip<br>      .<span class="hljs-title function_">generateAsync</span>(&#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;blob&quot;</span>,<br>      &#125;)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">content</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 生成二进制流</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(content);<br>        <span class="hljs-title function_">saveAs</span>(content, zipName + <span class="hljs-string">&quot;.zip&quot;</span>); <span class="hljs-comment">// 利用file-saver保存文件</span><br>      &#125;);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Vue-中为什么要有-nextTick"><a href="#Vue-中为什么要有-nextTick" class="headerlink" title="Vue 中为什么要有 nextTick"></a>Vue 中为什么要有 nextTick</h3><!-- more --><h4 id="Vue-针对渲染的优化"><a href="#Vue-针对渲染的优化" class="headerlink" title="Vue 针对渲染的优化"></a>Vue 针对渲染的优化</h4><p>Vue 会针对多次重复数据更新进行优化，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> num = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100000</span>; i++) &#123;<br>  num.<span class="hljs-property">value</span> = i;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>如果 num 是一个响应式变量，理论上每一次变化都会触发 Vue 的渲染。那么，以上代码会触发十万次渲染。<br>实际上，绝大部分情况下，用户需要的第一次 num：0 和最后一次 num：100000 的渲染。</p></blockquote><p>Vue 针对这种情况做了优化：</p><ol><li>在一次事件循环中，将不同的变量更新存储下来。而相同的变量更新会把最新的变化保留下来，而之前的变动数据会被丢弃掉。</li><li>等到同一事件循环中，所有的数据变动都完成时，再进行 Dom 的渲染更新</li></ol><p>这种优化会导致一个问题。如果我们在数据变化后，并且在 Vue 对 Dom 更新之前，想要基于最新的 Dom 去进行某些操作。那么，我们是找不到合适的操作时机的！<br>举个最典型的例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">vif</span>=<span class="hljs-string">&quot;isShowParentNode&quot;</span>&gt;</span>parentNode<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> isShowParentNode = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);<br><br><span class="hljs-keyword">let</span> childrenNode = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br>isShowParentNode.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-title class_">ParentNode</span>.<span class="hljs-title function_">append</span>(childrenNode);<br></code></pre></td></tr></table></figure><p>以上的代码，需要在 显示 ParentNode 之后，直接为其添加 childrenNode。<br>实际上，代码执行时，很有可能是拿不到 ParentNode 而报错。<br>此时，需要 NextTick</p><h4 id="NextTick-作用"><a href="#NextTick-作用" class="headerlink" title="NextTick 作用"></a>NextTick 作用</h4><p>利用 NextTick 可以达到目标</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 修改数据</span><br>vm.<span class="hljs-property">message</span> = <span class="hljs-string">&quot;修改后的值&quot;</span>;<br><span class="hljs-comment">// DOM 还没有更新</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm.<span class="hljs-property">$el</span>.<span class="hljs-property">textContent</span>); <span class="hljs-comment">// 原始的值</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">nextTick</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">// DOM 更新了</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vm.<span class="hljs-property">$el</span>.<span class="hljs-property">textContent</span>); <span class="hljs-comment">// 修改后的值</span><br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p></blockquote><h4 id="NextTick-原理"><a href="#NextTick-原理" class="headerlink" title="NextTick 原理"></a>NextTick 原理</h4><p>从代码上来看</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">vif</span>=<span class="hljs-string">&quot;isShowParentNode&quot;</span>&gt;</span>parentNode<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> isShowParentNode = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);<br><br><span class="hljs-keyword">let</span> childrenNode = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br>isShowParentNode.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-title class_">NextTick</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-title class_">ParentNode</span>.<span class="hljs-title function_">append</span>(childrenNode);<br>&#125;);<br></code></pre></td></tr></table></figure><p>这里的 append 操作像是在 isShowParentNode 改变为 true 之后，就直接调用了。<br>但是实际上，NextTick 会把 出入的回调函数 放入到任务队列中进行等待，执行的是一个异步操作。</p><p>源码位置：/src/core/util/next-tick.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">nextTick</span>(<span class="hljs-params">cb?: <span class="hljs-built_in">Function</span>, ctx?: <span class="hljs-built_in">Object</span></span>) &#123;<br>  <span class="hljs-keyword">let</span> _resolve;<br>  <span class="hljs-comment">// cb 回调函数会经统一处理压入 callbacks 数组</span><br>  callbacks.<span class="hljs-title function_">push</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (cb) &#123;<br>      <span class="hljs-comment">// 给 cb 回调函数执行加上了 try-catch 错误处理</span><br>      <span class="hljs-keyword">try</span> &#123;<br>        cb.<span class="hljs-title function_">call</span>(ctx);<br>      &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>        <span class="hljs-title function_">handleError</span>(e, ctx, <span class="hljs-string">&quot;nextTick&quot;</span>);<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (_resolve) &#123;<br>      <span class="hljs-title function_">_resolve</span>(ctx);<br>    &#125;<br>  &#125;);<br>  <span class="hljs-comment">// 执行异步延迟函数 timerFunc</span><br>  <span class="hljs-keyword">if</span> (!pending) &#123;<br>    pending = <span class="hljs-literal">true</span>;<br>    <span class="hljs-title function_">timerFunc</span>();<br>  &#125;<br>  <span class="hljs-comment">// 当 nextTick 没有传入函数参数的时候，返回一个 Promise 化的调用</span><br>  <span class="hljs-keyword">if</span> (!cb &amp;&amp; <span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Promise</span> !== <span class="hljs-string">&quot;undefined&quot;</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>      _resolve = resolve;<br>    &#125;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> isUsingMicroTask = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Promise</span> !== <span class="hljs-string">&quot;undefined&quot;</span> &amp;&amp; <span class="hljs-title function_">isNative</span>(<span class="hljs-title class_">Promise</span>)) &#123;<br>  <span class="hljs-comment">//判断1：是否原生支持Promise</span><br>  <span class="hljs-keyword">const</span> p = <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>();<br>  timerFunc = <span class="hljs-function">() =&gt;</span> &#123;<br>    p.<span class="hljs-title function_">then</span>(flushCallbacks);<br>    <span class="hljs-keyword">if</span> (isIOS) <span class="hljs-built_in">setTimeout</span>(noop);<br>  &#125;;<br>  isUsingMicroTask = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>  !isIE &amp;&amp;<br>  <span class="hljs-keyword">typeof</span> <span class="hljs-title class_">MutationObserver</span> !== <span class="hljs-string">&quot;undefined&quot;</span> &amp;&amp;<br>  (<span class="hljs-title function_">isNative</span>(<span class="hljs-title class_">MutationObserver</span>) ||<br>    <span class="hljs-title class_">MutationObserver</span>.<span class="hljs-title function_">toString</span>() === <span class="hljs-string">&quot;[object MutationObserverConstructor]&quot;</span>)<br>) &#123;<br>  <span class="hljs-comment">//判断2：是否原生支持MutationObserver</span><br>  <span class="hljs-keyword">let</span> counter = <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MutationObserver</span>(flushCallbacks);<br>  <span class="hljs-keyword">const</span> textNode = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createTextNode</span>(<span class="hljs-title class_">String</span>(counter));<br>  observer.<span class="hljs-title function_">observe</span>(textNode, &#123;<br>    <span class="hljs-attr">characterData</span>: <span class="hljs-literal">true</span>,<br>  &#125;);<br>  timerFunc = <span class="hljs-function">() =&gt;</span> &#123;<br>    counter = (counter + <span class="hljs-number">1</span>) % <span class="hljs-number">2</span>;<br>    textNode.<span class="hljs-property">data</span> = <span class="hljs-title class_">String</span>(counter);<br>  &#125;;<br>  isUsingMicroTask = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> setImmediate !== <span class="hljs-string">&quot;undefined&quot;</span> &amp;&amp; <span class="hljs-title function_">isNative</span>(setImmediate)) &#123;<br>  <span class="hljs-comment">//判断3：是否原生支持setImmediate</span><br>  timerFunc = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">setImmediate</span>(flushCallbacks);<br>  &#125;;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-comment">//判断4：上面都不行，直接用setTimeout</span><br>  timerFunc = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">setTimeout</span>(flushCallbacks, <span class="hljs-number">0</span>);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">flushCallbacks</span>(<span class="hljs-params"></span>) &#123;<br>  pending = <span class="hljs-literal">false</span>;<br>  <span class="hljs-keyword">const</span> copies = callbacks.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>);<br>  callbacks.<span class="hljs-property">length</span> = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; copies.<span class="hljs-property">length</span>; i++) &#123;<br>    copies[i]();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面代码最主要的就是执行 timerFunc() ，而 timerFunc 就是 setTimeout(flushCallbacks, 0)，flushCallbacks 函数主要就是调用 NextTick 中传入的 Fn。</p><p>主要步骤如下：</p><ol><li>把回调函数放入 callbacks（即生成了一个由 callback 组成的数组） 等待执行，</li><li>（利用 setTimeout）将执行函数放到微任务或者宏任务中，</li><li>事件循环到了微任务或者宏任务，执行函数依次执行 callbacks 中的回调。</li></ol><h4 id="事件循环"><a href="#事件循环" class="headerlink" title="事件循环"></a>事件循环</h4><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8xNTU4NjUwMi00ZjJkM2Y3MWE5NGE0YTAwLnBuZw?x-oss-process=image/format,png" alt="事件循环"></p><h3 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h3><blockquote><p>当你需要对普通 DOM 元素<strong>进行底层操作</strong>，这时候就会用到自定义指令</p></blockquote><ol><li><p>全局注册和局部注册</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 注册一个全局自定义指令 `v-focus`</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;focus&#x27;</span>, &#123;<br>  <span class="hljs-comment">// 当被绑定的元素插入到 DOM 中时……</span><br>  <span class="hljs-attr">inserted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">el</span>) &#123;<br>    <span class="hljs-comment">// 聚焦元素</span><br>    el.<span class="hljs-title function_">focus</span>()<br>  &#125;<br>&#125;)<br><br><span class="hljs-comment">//注册一个局部组件指令</span><br><span class="hljs-attr">directive</span>:&#123;<br>  <span class="hljs-attr">focus</span>:&#123;<br>     <span class="hljs-comment">// 指令的定义</span><br>    <span class="hljs-attr">inserted</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">el</span>)&#123;<br>      el.<span class="hljs-title function_">focus</span>()<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>示例（改造后台系统的权限功能）</p><p>根据后台返回的权限数据来判断是否显示按钮</p><ul><li>HTML 结构</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;div id=<span class="hljs-string">&quot;app&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr_15&quot;</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span></span></span><br><span class="hljs-tag"><span class="language-xml">            <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;isLoading&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">            @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addNewItem&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">            <span class="hljs-attr">v-has:merchantsMatchActivity_add</span></span></span><br><span class="hljs-tag"><span class="language-xml">            &gt;</span>新增&lt;/el-button</span><br><span class="language-xml">          &gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>JS</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&quot;has&quot;</span>, &#123;<br>  <span class="hljs-attr">inserted</span>: <span class="hljs-function">(<span class="hljs-params">el, binding, vnode</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(vnode, el.<span class="hljs-property">parentNode</span>);<br>    <span class="hljs-keyword">let</span> path = vnode.<span class="hljs-property">context</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">path</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">checkHasPass</span>(path, binding.<span class="hljs-property">arg</span>)) &#123;<br>      el.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(el);<br>    &#125;<br>  &#125;,<br>&#125;);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkHasPass</span>(<span class="hljs-params">path, name</span>) &#123;<br>  <span class="hljs-keyword">let</span> operator = <span class="hljs-title function_">openFun</span>(path);<br>  <span class="hljs-keyword">let</span> pass = <span class="hljs-literal">false</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> operator) &#123;<br>    <span class="hljs-keyword">if</span> (key == name) &#123;<br>      pass = <span class="hljs-literal">true</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> pass;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs js">openFun是一个筛选数据的函数，如果有对应的权限字段，会返回一个对象<br><span class="hljs-keyword">let</span> op = &#123;&#125;;<br><span class="hljs-keyword">let</span> oneLevelArr = [];<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPer</span>(<span class="hljs-params">arr</span>) &#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-comment">//只要商客 sys:10</span><br>    <span class="hljs-keyword">if</span> (arr[i].<span class="hljs-property">sys</span> == <span class="hljs-number">10</span>) &#123;<br>      <span class="hljs-keyword">if</span> (arr[i][<span class="hljs-string">&quot;children&quot;</span>] &amp;&amp; arr[i][<span class="hljs-string">&quot;children&quot;</span>].<span class="hljs-property">length</span>) &#123;<br>        <span class="hljs-title function_">getPer</span>(arr[i][<span class="hljs-string">&quot;children&quot;</span>]);<br>      &#125;<br>      oneLevelArr.<span class="hljs-title function_">push</span>(arr[i]);<br>    &#125;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">const</span> openFun = <span class="hljs-keyword">function</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<br>  op = &#123;&#125;;<br>  oneLevelArr = [];<br>  <span class="hljs-title function_">getPer</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;resources&quot;</span>)));<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; oneLevelArr.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">String</span>(oneLevelArr[i][<span class="hljs-string">&quot;icon&quot;</span>]) === name) &#123;<br>      op[oneLevelArr[i][<span class="hljs-string">&quot;resourceMark&quot;</span>]] =<br>        <span class="hljs-title class_">Number</span>(oneLevelArr[i][<span class="hljs-string">&quot;resourceType&quot;</span>]) === <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> op;<br>&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> openFun;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">resources形如:通过循环router中的children.<span class="hljs-property">resourceMark</span>去判断是否有权限<br>[<br>  &#123;<br>    <span class="hljs-attr">router</span>: <span class="hljs-string">&#x27;merchantsMatchActivity&#x27;</span>,<br>    <span class="hljs-attr">resourceName</span>: <span class="hljs-string">&#x27;比赛激励管理&#x27;</span>,<br>    <span class="hljs-attr">sys</span>: <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">children</span>: [<br>      <span class="hljs-attr">resourceMark</span>: <span class="hljs-string">&#x27;merchantsMatchActivity_add&#x27;</span>,<br>      <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;merchantsMatchActivity&#x27;</span>,<br>    ]<br>  &#125;<br>]<br></code></pre></td></tr></table></figure><p>Tips:</p><ol><li>el.parentNode.removeChild(el)方法需要配合 inserted 周期，配置 bind 周期会报错，父节点为 null</li><li>v-has:merchantsMatchActivity_add，冒号后面的字段会通过 arg 来拿到，并和 resource 去循环判断</li></ol></li><li><p>详细说明</p><ol><li><p>钩子函数</p><ul><li><strong>bind</strong>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</li><li><strong>inserted</strong>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</li><li><strong>update</strong>：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新。</li><li><strong>componentUpdated</strong>：指令所在组件的 VNode 及其子 VNode 全部更新后调用。</li><li><strong>unbind</strong>：只调用一次，指令与元素解绑时调用。</li></ul></li><li><p>钩子函数参数</p><blockquote><p>除了 <code>el</code> 之外，其它参数都应该是只读的</p></blockquote><p>指令钩子函数会被传入以下参数：</p><ul><li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</li><li><code>binding</code>：一个对象，包含以下属性：<ul><li><code>name</code>：指令名，不包括 v- 前缀。</li><li><code>value</code>：指令的绑定值，例如：v-my-directive=”1 + 1” 中，绑定值为 2。</li><li><code>oldValue</code>：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。</li><li><code>expression</code>：字符串形式的指令表达式。例如 v-my-directive=”1 + 1” 中，表达式为 “1 + 1”。</li><li><code>arg</code>：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 “foo”。</li><li><code>modifiers</code>：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</li></ul></li><li><code>vnode</code>：Vue 编译生成的虚拟节点。</li><li><code>oldVnode</code>：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</li></ul></li></ol><h3 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h3><h4 id="官网动态路由解释"><a href="#官网动态路由解释" class="headerlink" title="官网动态路由解释"></a>官网动态路由解释</h4><p>当多个 router-link 对应一个组件的时候，可以去使用动态路由，而不用设置多个组件一一对应</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">User</span> = &#123;<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;&lt;div&gt;User&lt;/div&gt;&quot;</span>,<br>&#125;;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueRouter</span>(&#123;<br>  <span class="hljs-attr">routes</span>: [<br>    <span class="hljs-comment">// 动态路径参数 以冒号开头</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/user/:id&quot;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">User</span> &#125;,<br>  ],<br>&#125;);<br></code></pre></td></tr></table></figure><p>组件内部:可以通过$route.params 的形式拿到数据，从而可以渲染不同的数据出来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">User</span> = &#123;<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;&lt;div&gt;User &#123;&#123; $route.params.id &#125;&#125;&lt;/div&gt;&quot;</span>,<br>&#125;;<br></code></pre></td></tr></table></figure><blockquote><p>当使用动态路由的时候，mounted 周期会失效，因为为了节省开销，VUE 在你使用动态路由功能的时候会复用之前已经生成的组件，导致根本就不会进入初始化周期。为此，添加一个新的周期：beforeRouteUpdate</p></blockquote></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">User</span> = &#123;<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;...&quot;</span>,<br>  <span class="hljs-title function_">beforeRouteUpdate</span>(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) &#123;<br>    <span class="hljs-comment">// react to route changes...</span><br>    <span class="hljs-comment">// don&#x27;t forget to call next()</span><br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="实际上的动态路由应用"><a href="#实际上的动态路由应用" class="headerlink" title="实际上的动态路由应用"></a>实际上的动态路由应用</h4><p>实际上，我们谈论动态路由的时候，更多的是说获取后端的数据、动态添加路由、从而实现权限等渲染控制。类似动态生成菜单功能</p><ol><li><p>后端返回的数组数据</p><p>后端返回路由数据如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js">routerList = [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/other&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-string">&quot;Layout&quot;</span>,<br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&quot;noRedirect&quot;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;otherPage&quot;</span>,<br>    <span class="hljs-attr">meta</span>: &#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;测试&quot;</span>,<br>    &#125;,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;a&quot;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-string">&quot;file/a&quot;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;a&quot;</span>,<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;a页面&quot;</span>, <span class="hljs-attr">noCache</span>: <span class="hljs-string">&quot;true&quot;</span> &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;b&quot;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-string">&quot;file/b&quot;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;b&quot;</span>,<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;b页面&quot;</span>, <span class="hljs-attr">noCache</span>: <span class="hljs-string">&quot;true&quot;</span> &#125;,<br>      &#125;,<br>    ],<br>  &#125;,<br>];<br></code></pre></td></tr></table></figure></li><li><p>前端静态路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Router</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Layout</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/layout&quot;</span>;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Router</span>);<br><span class="hljs-comment">// 配置项目中没有涉及权限的公共路由</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> constantRoutes = [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/login&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">import</span>(<span class="hljs-string">&quot;@/views/login&quot;</span>),<br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/404&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">import</span>(<span class="hljs-string">&quot;@/views/404&quot;</span>),<br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>];<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">createRouter</span> = (<span class="hljs-params"></span>) =&gt;<br>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Router</span>(&#123;<br>    <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;history&quot;</span>,<br>    <span class="hljs-attr">scrollBehavior</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">0</span> &#125;),<br>    <span class="hljs-attr">routes</span>: constantRoutes,<br>  &#125;);<br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>();<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">resetRouter</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> newRouter = <span class="hljs-title function_">createRouter</span>();<br>  router.<span class="hljs-property">matcher</span> = newRouter.<span class="hljs-property">matcher</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router;<br></code></pre></td></tr></table></figure><p>静态路由就直接按照正常的写法来处理</p></li><li><p>处理后台返回的路由格式</p><p>新建一个公共的<code>asyncRouter.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 引入路由文件这种的公共路由</span><br><span class="hljs-keyword">import</span> &#123; constantRoutes &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../router&quot;</span>;<br><span class="hljs-comment">// Layout 组件是项目中的主页面，切换路由时，仅切换Layout中的组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Layout</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/layout&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getAsyncRoutes</span>(<span class="hljs-params">routes</span>) &#123;<br>  <span class="hljs-keyword">const</span> res = [];<br>  <span class="hljs-comment">// 定义路由中需要的自定名</span><br>  <span class="hljs-keyword">const</span> keys = [<span class="hljs-string">&quot;path&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;children&quot;</span>, <span class="hljs-string">&quot;redirect&quot;</span>, <span class="hljs-string">&quot;meta&quot;</span>, <span class="hljs-string">&quot;hidden&quot;</span>];<br>  <span class="hljs-comment">// 遍历路由数组去重组可用的路由</span><br>  routes.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> newItem = &#123;&#125;;<br>    <span class="hljs-keyword">if</span> (item.<span class="hljs-property">component</span>) &#123;<br>      <span class="hljs-comment">// 判断 item.component 是否等于 &#x27;Layout&#x27;,若是则直接替换成引入的 Layout 组件</span><br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">component</span> === <span class="hljs-string">&quot;Layout&quot;</span>) &#123;<br>        newItem.<span class="hljs-property">component</span> = <span class="hljs-title class_">Layout</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">//  item.component 不等于 &#x27;Layout&#x27;,则说明它是组件路径地址，因此直接替换成路由引入的方法</span><br>        newItem.<span class="hljs-property">component</span> = <span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span><br>          <span class="hljs-built_in">require</span>([<span class="hljs-string">`@/views/<span class="hljs-subst">$&#123;item.component&#125;</span>`</span>], resolve);<br><br>        <span class="hljs-comment">// 此处用reqiure比较好，import引入变量会有各种莫名的错误</span><br>        <span class="hljs-comment">// newItem.component = (() =&gt; import(`@/views/$&#123;item.component&#125;`));</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> item) &#123;<br>      <span class="hljs-keyword">if</span> (keys.<span class="hljs-title function_">includes</span>(key)) &#123;<br>        newItem[key] = item[key];<br>      &#125;<br>    &#125;<br>    <span class="hljs-comment">// 若遍历的当前路由存在子路由，需要对子路由进行递归遍历</span><br>    <span class="hljs-keyword">if</span> (newItem.<span class="hljs-property">children</span> &amp;&amp; newItem.<span class="hljs-property">children</span>.<span class="hljs-property">length</span>) &#123;<br>      newItem.<span class="hljs-property">children</span> = <span class="hljs-title function_">getAsyncRoutes</span>(item.<span class="hljs-property">children</span>);<br>    &#125;<br>    res.<span class="hljs-title function_">push</span>(newItem);<br>  &#125;);<br>  <span class="hljs-comment">// 返回处理好且可用的路由数组</span><br>  <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中，newItem 这个变量会被改造成类似如下结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>       <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/file&#x27;</span>,<br>       <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">import</span>(<span class="hljs-string">&#x27;@/views/file&#x27;</span>),<br>       <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span>,<br>       <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;a&quot;</span>,<br>       <span class="hljs-attr">meta</span>: &#123; <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;a页面&quot;</span>, <span class="hljs-string">&quot;noCache&quot;</span>: <span class="hljs-string">&quot;true&quot;</span> &#125;<br>   &#125;,<br></code></pre></td></tr></table></figure></li><li><p>添加到 router 上去</p><p>创建路由守卫：创建公共的 permission.js 文件，设置路由守卫</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//  进度条引入设置如上面第一种描述一样</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./router&quot;</span>;<br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">NProgress</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;nprogress&quot;</span>; <span class="hljs-comment">// progress bar</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;nprogress/nprogress.css&quot;</span>; <span class="hljs-comment">// progress bar style</span><br><span class="hljs-keyword">import</span> &#123; getToken &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/auth&quot;</span>; <span class="hljs-comment">// get token from cookie</span><br><span class="hljs-keyword">import</span> &#123; getAsyncRoutes &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/asyncRouter&quot;</span>;<br><br><span class="hljs-keyword">const</span> whiteList = [<span class="hljs-string">&quot;/login&quot;</span>];<br>router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-keyword">async</span> (to, <span class="hljs-keyword">from</span>, next) =&gt; &#123;<br>  <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">start</span>();<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = to.<span class="hljs-property">meta</span>.<span class="hljs-property">title</span>;<br>  <span class="hljs-comment">// 获取用户token，用来判断当前用户是否登录</span><br>  <span class="hljs-keyword">const</span> hasToken = <span class="hljs-title function_">getToken</span>();<br>  <span class="hljs-keyword">if</span> (hasToken) &#123;<br>    <span class="hljs-keyword">if</span> (to.<span class="hljs-property">path</span> === <span class="hljs-string">&quot;/login&quot;</span>) &#123;<br>      <span class="hljs-title function_">next</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span> &#125;);<br>      <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">//异步获取store中的路由</span><br>      <span class="hljs-keyword">let</span> route = <span class="hljs-keyword">await</span> store.<span class="hljs-property">state</span>.<span class="hljs-property">addRoutes</span>;<br>      <span class="hljs-keyword">const</span> hasRouters = route &amp;&amp; route.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>;<br>      <span class="hljs-comment">//判断store中是否有路由，若有，进行下一步</span><br>      <span class="hljs-keyword">if</span> (hasRouters) &#123;<br>        <span class="hljs-title function_">next</span>();<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">//store中没有路由，则需要获取获取异步路由，并进行格式化处理</span><br>        <span class="hljs-keyword">try</span> &#123;<br>          <span class="hljs-keyword">const</span> accessRoutes = <span class="hljs-title function_">getAsyncRoutes</span>(<span class="hljs-keyword">await</span> store.<span class="hljs-property">state</span>.<span class="hljs-property">addRoutes</span>);<br>          <span class="hljs-comment">// 动态添加格式化过的路由</span><br>          router.<span class="hljs-title function_">addRoutes</span>(accessRoutes);<br>          <span class="hljs-title function_">next</span>(&#123; ...to, <span class="hljs-attr">replace</span>: <span class="hljs-literal">true</span> &#125;);<br>        &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>          <span class="hljs-comment">// Message.error(&#x27;出错了&#x27;)</span><br>          <span class="hljs-title function_">next</span>(<span class="hljs-string">`/login?redirect=<span class="hljs-subst">$&#123;to.path&#125;</span>`</span>);<br>          <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>();<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> (whiteList.<span class="hljs-title function_">indexOf</span>(to.<span class="hljs-property">path</span>) !== -<span class="hljs-number">1</span>) &#123;<br>      <span class="hljs-title function_">next</span>();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-title function_">next</span>(<span class="hljs-string">`/login?redirect=<span class="hljs-subst">$&#123;to.path&#125;</span>`</span>);<br>      <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>();<br>    &#125;<br>  &#125;<br>&#125;);<br><br>router.<span class="hljs-title function_">afterEach</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>();<br>&#125;);<br></code></pre></td></tr></table></figure></li><li><p>在 main.js 中引入 permission.js 文件</p></li><li><p>在 login 登录的时候将路由信息存储到 store 中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//  登录接口调用后，调用路由接口，后端返回相应用户的路由res.router，我们需要存储到store中，方便其他地方拿取</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-title function_">dispatch</span>(<span class="hljs-string">&quot;addRoutes&quot;</span>, res.<span class="hljs-property">router</span>);<br></code></pre></td></tr></table></figure><p>到这里，整个动态路由就可以走通了，但是页面跳转、路由守卫处理是异步的，会存在动态路由添加后跳转的是空白页面，这是因为路由在执行 next()时，router 里面的数据还不存在，此时，你可以通过 window.location.reload()来刷新路由</p></li></ol><h3 id="混入（mixin）"><a href="#混入（mixin）" class="headerlink" title="混入（mixin）"></a>混入（mixin）</h3><h3 id="VueX-的基本介绍和使用"><a href="#VueX-的基本介绍和使用" class="headerlink" title="VueX 的基本介绍和使用"></a>VueX 的基本介绍和使用</h3><h4 id="VueX-的基本结构"><a href="#VueX-的基本结构" class="headerlink" title="VueX 的基本结构"></a>VueX 的基本结构</h4><ol><li><p>state</p><p>状态存储，类似 Data。</p></li><li><p>getter</p><p>可以将 getter 视为一个监听函数。可以避免重复引入一些方法，例如：每次都要对数据进行重复筛选 filter 功能，那么就要引入相同的公共函数。那么就可以用 getter 去直接筛选，并通过类似如下：</p><p>页面中使用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;item in filterModuleList(searchText)&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">computed</span>: &#123;<br>  ...<span class="hljs-title function_">mapGetters</span>(&#123;<br>      <span class="hljs-attr">filterModuleList</span>: <span class="hljs-string">&quot;mailHomePageConfig/filterModuleList&quot;</span><br>    &#125;),<br>&#125;<br></code></pre></td></tr></table></figure><p>VueX 中定义：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> getters = &#123;<br>  <span class="hljs-attr">filterModuleList</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> <span class="hljs-function">(<span class="hljs-params">searchText</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (searchText) &#123;<br>      <span class="hljs-keyword">return</span> state.<span class="hljs-property">moduleList</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(item);<br>        <span class="hljs-keyword">return</span> item[<span class="hljs-string">&quot;name&quot;</span>].<span class="hljs-title function_">indexOf</span>(searchText) &gt; -<span class="hljs-number">1</span>;<br>      &#125;);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> state.<span class="hljs-property">moduleList</span>;<br>    &#125;<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure></li><li><p>action</p><p>action 实际上是一个专门用于 提供复杂业务逻辑及异步操作（如 axios 的异步请求），然后通过 commit 或者 dispatch 来触发 mutation 从而更新 state 中的数据。</p></li><li><p>mutation</p><p>mutation 用于更新 state 数据，并且只用于更新数据。</p></li></ol><h4 id="VueX-的要点"><a href="#VueX-的要点" class="headerlink" title="VueX 的要点"></a>VueX 的要点</h4><ol><li><p>…mapState,…mapGetter</p><p>这个是为了节省重复引入 VueX 内的 state 的字段而设计的。</p><p>ES6 的结构方法，函数使用如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">computed</span>: &#123;<br>   ...<span class="hljs-title function_">mapState</span>(&#123;<br>     <span class="hljs-comment">// 传字符串参数 &#x27;moduleList&#x27; ，可以省略后续的return</span><br>     moduleList,<br>     <span class="hljs-comment">// 传字符串参数 &#x27;count&#x27; 等同于 `state =&gt; state.count`，这个是别名countAlias</span><br>     <span class="hljs-attr">countAlias</span>: <span class="hljs-string">&#x27;count&#x27;</span>,<br>     <span class="hljs-attr">operator</span>: <span class="hljs-function"><span class="hljs-params">state</span> =&gt;</span> state.<span class="hljs-property">mailHomePageConfig</span>.<span class="hljs-property">operator</span>,<br>     <span class="hljs-comment">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span><br>     countPlusLocalState (state) &#123;<br>     <span class="hljs-keyword">return</span> state.<span class="hljs-property">count</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">localCount</span><br>   &#125;<br>   &#125;),<br>   ...<span class="hljs-title function_">mapGetters</span>(&#123;<br>     <span class="hljs-attr">filterModuleList</span>: <span class="hljs-string">&quot;mailHomePageConfig/filterModuleList&quot;</span><br>   &#125;),<br>   <span class="hljs-attr">curCity</span>: &#123;<br>     <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;<br>       <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-property">state</span>.<span class="hljs-property">mailHomePageConfig</span>.<span class="hljs-property">curCity</span>;<br>     &#125;,<br>     <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;mailHomePageConfig/updateCurCity&quot;</span>, value);<br>     &#125;<br>   &#125;<br> &#125;,<br></code></pre></td></tr></table></figure></li><li><p>dispatch 和 commit</p><p>commit 和 dispatch 的区别在于 commit 是提交 mutatious 的同步操作，dispatch 是分发 actions 的异步操作然后再手动调用 commit 更新</p><p>dispatch：含有异步操作，例如向后台提交数据，写法： this.$store.dispatch(‘action 方法名’,值)</p><p>dispatch 实际上是调用一个异步方法，然后再异步方法中再调用 commit 去同步更新。</p><p>commit：同步操作，写法：this.$store.commit(‘mutations 方法名’,值)</p></li></ol><h3 id="scss-的换肤功能"><a href="#scss-的换肤功能" class="headerlink" title="scss 的换肤功能"></a>scss 的换肤功能</h3><h4 id="scss-配置文件"><a href="#scss-配置文件" class="headerlink" title="scss 配置文件"></a>scss 配置文件</h4><p>变量的定义文件_handle.scss</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs js">@<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./_themes.scss&#x27;</span>;<br><br><span class="hljs-comment">//遍历主题map</span><br>@mixin themeify &#123;<br>  @each $theme-name, $theme-map <span class="hljs-keyword">in</span> $themes &#123;<br>    <span class="hljs-comment">//!global 把局部变量强升为全局变量</span><br>    $theme-<span class="hljs-attr">map</span>: $theme-map !<span class="hljs-variable language_">global</span>;<br>    <span class="hljs-comment">//判断html的data-theme的属性值  #&#123;&#125;是sass的插值表达式</span><br>    <span class="hljs-comment">//&amp; sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot</span><br>    [data-theme=<span class="hljs-string">&#x27;#&#123;$theme-name&#125;&#x27;</span>] &amp; &#123;<br>      @content;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">//声明一个根据Key获取颜色的function</span><br>@<span class="hljs-keyword">function</span> <span class="hljs-title function_">themed</span>(<span class="hljs-params">$key</span>) &#123;<br>  @<span class="hljs-keyword">return</span> map-<span class="hljs-title function_">get</span>($theme-map, $key);<br>&#125;<br><br><span class="hljs-comment">//获取背景颜色</span><br>@mixin <span class="hljs-title function_">background_color</span>(<span class="hljs-params">$color</span>) &#123;<br>  @include themeify &#123;<br>    background-<span class="hljs-attr">color</span>: <span class="hljs-title function_">themed</span>($color) !important;<br>  &#125;<br>&#125;<br><br>@mixin <span class="hljs-title function_">background</span>(<span class="hljs-params">$color</span>) &#123;<br>  @include themeify &#123;<br>    <span class="hljs-attr">background</span>: <span class="hljs-title function_">themed</span>($color) !important;<br>  &#125;<br>&#125;<br><span class="hljs-comment">// 阴影颜色</span><br><br>@mixin <span class="hljs-title function_">box_shadow</span>(<span class="hljs-params">$color</span>) &#123;<br>  @include themeify &#123;<br>    box-<span class="hljs-attr">shadow</span>: <span class="hljs-title function_">themed</span>($color) !important;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">//获取字体颜色</span><br>@mixin <span class="hljs-title function_">font_color</span>(<span class="hljs-params">$color</span>) &#123;<br>  @include themeify &#123;<br>    <span class="hljs-attr">color</span>: <span class="hljs-title function_">themed</span>($color) !important;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">//获取边框颜色</span><br>@mixin <span class="hljs-title function_">border_color</span>(<span class="hljs-params">$color</span>) &#123;<br>  @include themeify &#123;<br>    border-<span class="hljs-attr">color</span>: <span class="hljs-title function_">themed</span>($color) !important;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>主题色配置文件_themes</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//_themes.scss</span><br><span class="hljs-comment">//当HTML的data-theme为dark时，样式引用dark</span><br><span class="hljs-comment">//data-theme为其他值时，就采用组件库的默认样式</span><br><span class="hljs-comment">//注意一点是，每套配色方案里的key可以自定义但必须一致，不然就会混乱</span><br><br><span class="hljs-attr">$themes</span>: (<br>    <span class="hljs-attr">green</span>: (<br>      <span class="hljs-comment">//字体</span><br>      <span class="hljs-attr">font_color1</span>: #0BB3AC,<br>      <span class="hljs-attr">font_color2</span>: #4CCBC8,<br><br>      <span class="hljs-comment">//背景</span><br>      <span class="hljs-attr">background_color1</span>: #0BB3AC,<br>      <span class="hljs-attr">background_color2</span>: <span class="hljs-title function_">rgba</span>(<span class="hljs-number">11</span>, <span class="hljs-number">179</span>, <span class="hljs-number">172</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">box_shadow3</span>: 0px 2px 6px 0px <span class="hljs-title function_">rgba</span>(<span class="hljs-number">11</span>, <span class="hljs-number">179</span>, <span class="hljs-number">172</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">background1</span>: linear-<span class="hljs-title function_">gradient</span>(90deg,<span class="hljs-title function_">rgba</span>(<span class="hljs-number">76</span>,<span class="hljs-number">203</span>,<span class="hljs-number">200</span>,<span class="hljs-number">1</span>),<span class="hljs-title function_">rgba</span>(<span class="hljs-number">11</span>,<span class="hljs-number">179</span>,<span class="hljs-number">172</span>,<span class="hljs-number">1</span>)),<br>      <span class="hljs-comment">//边框</span><br>      <span class="hljs-attr">border_color1</span>: #0BB3AC,<br>    ),<br>    <span class="hljs-comment">// 橘色主题</span><br>    <span class="hljs-attr">orange</span>: (<br>        <span class="hljs-comment">//字体</span><br>        <span class="hljs-attr">font_color1</span>: #<span class="hljs-title class_">FF6A</span>47,<br>        <span class="hljs-attr">font_color2</span>: <span class="hljs-title function_">rgb</span>(<span class="hljs-number">248</span>, <span class="hljs-number">138</span>, <span class="hljs-number">114</span>),<br><br>        <span class="hljs-comment">//背景</span><br>        <span class="hljs-attr">background_color1</span>: #<span class="hljs-title class_">FF6A</span>47,<br>        <span class="hljs-attr">background_color2</span>: <span class="hljs-title function_">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">106</span>,<span class="hljs-number">71</span>,<span class="hljs-number">0.2</span>),<br>        <span class="hljs-attr">box_shadow3</span>: 0px 2px 6px 0px <span class="hljs-title function_">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">106</span>,<span class="hljs-number">71</span>,<span class="hljs-number">0.2</span>),<br>        <span class="hljs-attr">background1</span>: linear-<span class="hljs-title function_">gradient</span>(90deg,<span class="hljs-title function_">rgba</span>(<span class="hljs-number">245</span>, <span class="hljs-number">149</span>, <span class="hljs-number">128</span>, <span class="hljs-number">1</span>),<span class="hljs-title function_">rgba</span>(<span class="hljs-number">245</span>, <span class="hljs-number">128</span>, <span class="hljs-number">101</span>, <span class="hljs-number">1</span>)),<br><br>        <span class="hljs-comment">//边框</span><br>        <span class="hljs-attr">border_color1</span>: #<span class="hljs-title class_">FF6A</span>47,<br><br>    ),<br><br>    <span class="hljs-attr">blue</span>: (<br>      <span class="hljs-comment">//字体</span><br>      <span class="hljs-attr">font_color1</span>: #2E9CFF,<br>      <span class="hljs-attr">font_color2</span>: <span class="hljs-title function_">rgb</span>(<span class="hljs-number">101</span>, <span class="hljs-number">175</span>, <span class="hljs-number">240</span>),<br><br>      <span class="hljs-comment">//背景</span><br>      <span class="hljs-attr">background_color1</span>: #2E9CFF,<br>      <span class="hljs-attr">background_color2</span>: <span class="hljs-title function_">rgba</span>(<span class="hljs-number">46</span>,<span class="hljs-number">156</span>,<span class="hljs-number">255</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">box_shadow3</span>: 0px 2px 6px 0px <span class="hljs-title function_">rgba</span>(<span class="hljs-number">46</span>,<span class="hljs-number">156</span>,<span class="hljs-number">255</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">background1</span>: linear-<span class="hljs-title function_">gradient</span>(90deg,<span class="hljs-title function_">rgba</span>(<span class="hljs-number">99</span>, <span class="hljs-number">172</span>, <span class="hljs-number">236</span>, <span class="hljs-number">1</span>),<span class="hljs-title function_">rgba</span>(<span class="hljs-number">46</span>,<span class="hljs-number">156</span>,<span class="hljs-number">255</span>,<span class="hljs-number">1</span>)),<br>      <span class="hljs-comment">//边框</span><br>      <span class="hljs-attr">border_color1</span>: #2E9CFF,<br><br>    ),<br><br>    <span class="hljs-attr">yellow</span>: (<br>      <span class="hljs-comment">//字体</span><br>      <span class="hljs-attr">font_color1</span>: #<span class="hljs-title class_">FFAF2E</span>,<br>      <span class="hljs-attr">font_color2</span>: <span class="hljs-title function_">rgb</span>(<span class="hljs-number">240</span>, <span class="hljs-number">197</span>, <span class="hljs-number">128</span>),<br><br>      <span class="hljs-comment">//背景</span><br>      <span class="hljs-attr">background_color1</span>: #<span class="hljs-title class_">FFAF2E</span>,<br>      <span class="hljs-attr">background_color2</span>: <span class="hljs-title function_">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">175</span>,<span class="hljs-number">46</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">box_shadow3</span>: 0px 2px 6px 0px <span class="hljs-title function_">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">175</span>,<span class="hljs-number">46</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">background1</span>: linear-<span class="hljs-title function_">gradient</span>(90deg,<span class="hljs-title function_">rgba</span>(<span class="hljs-number">240</span>, <span class="hljs-number">186</span>, <span class="hljs-number">99</span>, <span class="hljs-number">1</span>),<span class="hljs-title function_">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">175</span>,<span class="hljs-number">46</span>,<span class="hljs-number">1</span>)),<br>      <span class="hljs-comment">//边框</span><br>      <span class="hljs-attr">border_color1</span>: #<span class="hljs-title class_">FFAF2E</span>,<br><br>    ),<br><br>    <span class="hljs-attr">red</span>: (<br>      <span class="hljs-comment">//字体</span><br>      <span class="hljs-attr">font_color1</span>: #<span class="hljs-variable constant_">F52231</span>,<br>      <span class="hljs-attr">font_color2</span>: <span class="hljs-title function_">rgb</span>(<span class="hljs-number">238</span>, <span class="hljs-number">79</span>, <span class="hljs-number">90</span>),<br><br>      <span class="hljs-comment">//背景</span><br>      <span class="hljs-attr">background_color1</span>: #<span class="hljs-variable constant_">F52231</span>,<br>      <span class="hljs-attr">background_color2</span>: <span class="hljs-title function_">rgba</span>(<span class="hljs-number">245</span>,<span class="hljs-number">34</span>,<span class="hljs-number">49</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">box_shadow3</span>: 0px 2px 6px 0px <span class="hljs-title function_">rgba</span>(<span class="hljs-number">245</span>,<span class="hljs-number">34</span>,<span class="hljs-number">49</span>, <span class="hljs-number">0.2</span>),<br>      <span class="hljs-attr">background1</span>: linear-<span class="hljs-title function_">gradient</span>(90deg,<span class="hljs-title function_">rgba</span>(<span class="hljs-number">247</span>, <span class="hljs-number">198</span>, <span class="hljs-number">121</span>, <span class="hljs-number">1</span>),<span class="hljs-title function_">rgba</span>(<span class="hljs-number">245</span>,<span class="hljs-number">34</span>,<span class="hljs-number">49</span>,<span class="hljs-number">1</span>)),<br>      <span class="hljs-comment">//边框</span><br>      <span class="hljs-attr">border_color1</span>: #<span class="hljs-variable constant_">F52231</span>,<br>    )<br>);<br></code></pre></td></tr></table></figure><h4 id="引入使用功能"><a href="#引入使用功能" class="headerlink" title="引入使用功能"></a>引入使用功能</h4><p>在 app.vue 中通过设置 data 数据来判断当前主题色，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">window</span>.<span class="hljs-property">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;data-theme&quot;</span>, <span class="hljs-string">&quot;orange&quot;</span>);<br></code></pre></td></tr></table></figure><p>文件中引用变量设置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;style lang=<span class="hljs-string">&quot;scss&quot;</span> scoped&gt;<br>  @<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;@/common/_handle.scss&#x27;</span>;<br>.<span class="hljs-property">btn_reject</span> &#123;<br>  <span class="hljs-comment">//   background: $blueLinear-gradient;</span><br>  @include <span class="hljs-title function_">background_color</span>(<span class="hljs-string">&#x27;background_color1&#x27;</span>);<br>  <span class="hljs-attr">color</span>: #ffffff;<br>  box-<span class="hljs-attr">shadow</span>: <span class="hljs-number">0</span> 5rpx 10rpx <span class="hljs-number">0</span> <span class="hljs-title function_">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">29</span>, <span class="hljs-number">138</span>, <span class="hljs-number">0.3</span>);<br>  @include <span class="hljs-title function_">box_shadow</span>(<span class="hljs-string">&#x27;box_shadow3&#x27;</span>);<br>  <span class="hljs-attr">border</span>: 2px solid #486cdc;<br>  @include <span class="hljs-title function_">borde_color</span>(<span class="hljs-string">&#x27;font_color1&#x27;</span>);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>@include background_color 和@include box_shadow 这些变量都是通过 handle 文件来定义的。</p><p>注意：border 这类需要多个维度来判断的 class，只需要改变其中的颜色部分。会自动覆盖对应之前定义的 border 中的颜色#486cdc</p><h3 id="mini-Vue-极简说明"><a href="#mini-Vue-极简说明" class="headerlink" title="mini-Vue 极简说明"></a>mini-Vue 极简说明</h3><p>省去一切额外开销，几句话讲出 mini-Vue 大概逻辑</p><!-- more --><h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; reactive, effect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../vue3.js&quot;</span>;<br><br><span class="hljs-comment">/* </span><br><span class="hljs-comment">  场景 1</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">const</span> obj = <span class="hljs-title function_">reactive</span>(&#123; <span class="hljs-attr">x</span>: <span class="hljs-number">1</span> &#125;);<br><br><span class="hljs-title function_">effect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">patch</span>();<br>&#125;);<br><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  obj.<span class="hljs-property">x</span> = <span class="hljs-number">2</span>;<br>&#125;, <span class="hljs-number">1000</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">patch</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">innerText</span> = obj.<span class="hljs-property">x</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>当 1S 后执行 obj.x = 2 时，会触发 patch。就说明 obj 是一个响应式对象，改变他的值会触发 effect 内的函数</p><h4 id="收集和触发依赖（reactive）"><a href="#收集和触发依赖（reactive）" class="headerlink" title="收集和触发依赖（reactive）"></a>收集和触发依赖（reactive）</h4><p>reactive 是一个函数，接受复杂对象为参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">reactive</span>(<span class="hljs-params">target</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(target, &#123;<br>  <span class="hljs-title function_">get</span>(<span class="hljs-params">target,key,receiver</span>)&#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-title class_">Reflect</span> <span class="hljs-title function_">get</span>(target,key,receiver)<br>    <span class="hljs-title function_">track</span>()<br>    <span class="hljs-keyword">return</span> res<br>  &#125;,<br>  <span class="hljs-title function_">set</span>(<span class="hljs-params">target,key,receiver</span>)&#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-title class_">Reflect</span> <span class="hljs-title function_">get</span>(target,key,receiver)<br>    <span class="hljs-title function_">trigger</span>()<br>    <span class="hljs-keyword">return</span> res<br>  &#125;,<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>每当 obj.x 执行时，会触发 get，当 obj.x =2 赋值时，会触发 trigger</p><h5 id="track-函数是收集依赖"><a href="#track-函数是收集依赖" class="headerlink" title="track 函数是收集依赖"></a>track 函数是收集依赖</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">track</span>(<span class="hljs-params">target, key</span>) &#123;<br>  <span class="hljs-keyword">let</span> depsMap = targetMap.<span class="hljs-title function_">get</span>(target);<br>  <span class="hljs-keyword">if</span> (!depsMap) &#123;<br>    depsMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br>    targetMap.<span class="hljs-title function_">set</span>(target, depsMap);<br>  &#125;<br><br>  <span class="hljs-keyword">let</span> dep = depsMap.<span class="hljs-title function_">get</span>(key);<br>  <span class="hljs-keyword">if</span> (!dep) &#123;<br>    dep = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>();<br>    depsMap.<span class="hljs-title function_">set</span>(key, dep);<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (dep.<span class="hljs-title function_">has</span>(activeEffect)) <span class="hljs-keyword">return</span>;<br><br>  dep.<span class="hljs-title function_">add</span>(activeEffect);<br>  activeEffect.<span class="hljs-property">deps</span>.<span class="hljs-title function_">push</span>(dep);<br>&#125;<br></code></pre></td></tr></table></figure><p>track 函数就是收集依赖，既然拿到了依赖，就必须要找个对象去存储起来。<br>targetMap 就是用来存储依赖的对象，是一个 weekMap，形如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123; <span class="hljs-comment">// 这是一个WeakMap</span><br>  [target]: &#123; <span class="hljs-comment">// key是reactiveObject, value是一个Map</span><br>    [key]: [] <span class="hljs-comment">// key是reactiveObject的键值, value是一个Set</span><br>  &#125;<br>&#125;<br><span class="hljs-keyword">const</span> obj = <span class="hljs-title function_">reactive</span>(&#123; <span class="hljs-attr">x</span>: <span class="hljs-number">1</span> &#125;);<br></code></pre></td></tr></table></figure><p>以上面的 obj 为例，target 是{ x: 1 }，key 是 x。</p><blockquote><p><strong>那么里面 x 对应的[]是什么呢？留到后面的 Effect 函数</strong></p></blockquote><h5 id="trigger-函数是触发依赖"><a href="#trigger-函数是触发依赖" class="headerlink" title="trigger 函数是触发依赖"></a>trigger 函数是触发依赖</h5><h3 id="cancletoken-的使用（取消上一次的请求）"><a href="#cancletoken-的使用（取消上一次的请求）" class="headerlink" title="cancletoken 的使用（取消上一次的请求）"></a>cancletoken 的使用（取消上一次的请求）</h3><p>当上一次请求没有完成时，再次发起请求，需要首先结束上一次请求。然后再发起新的请求</p><p>axios 有提供 cancletoken 的方案，记录如下</p><!-- more --><h4 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h4><p>现在又个 tabs 切换，第一个 tab 请求数据较大，需要 10 秒获取数据，第二个 tab 需求请求 5 秒，第三个需要请求 1 秒。</p><p>当点击第一个时，等待 1 秒后，再切换第二个 tab，再等待 1 秒，切换第三个 tab。</p><blockquote><p>数据的显示会首先显示第三次请求的数据，然后显示第二次请求的数据，最后显示到页面上渲染出来的时第一次请求到的数据。这个是不正确的，需要显示第三次请求的数据。</p></blockquote><p><img src="https://limengtupian.oss-cn-beijing.aliyuncs.com/canceltoken%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/cancletoken.png" alt="需求图片"></p><h4 id="解决代码"><a href="#解决代码" class="headerlink" title="解决代码"></a>解决代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> service = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-comment">// process.env.NODE_ENV === &#x27;development&#x27; 来判断是否开发环境</span><br>  <span class="hljs-attr">baseURL</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;development&#x27;</span> ? <span class="hljs-string">&#x27;/&#x27;</span> : host.<span class="hljs-property">host</span>,<br>  <span class="hljs-attr">timeout</span>: <span class="hljs-number">60000000</span><br>&#125;);<br><span class="hljs-keyword">let</span> cancel = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> url = <span class="hljs-literal">null</span>;<br>service.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<span class="hljs-function"><span class="hljs-params">config</span> =&gt;</span> &#123;<br>  <span class="hljs-comment">// 在 cardCertificateReceive 页面中，存在tab切换发起多次请求需求，需要在本次请求时取消上次请求，故添加取消请求拦截</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> (cancel) == <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (url == config.<span class="hljs-property">url</span>)<br>      <span class="hljs-title function_">cancel</span>(<span class="hljs-string">&#x27;强制取消了请求&#x27;</span>)<br>  &#125;<br>  url = config.<span class="hljs-property">url</span>;<br>  <span class="hljs-comment">// 将cancel变成function</span><br>  config[<span class="hljs-string">&#x27;cancelToken&#x27;</span>] = <span class="hljs-keyword">new</span> axios.<span class="hljs-title class_">CancelToken</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c, <span class="hljs-string">&#x27;c&#x27;</span>)<br>    cancel = c<br>  &#125;)<br>  <span class="hljs-keyword">return</span> config;<br>&#125;, <span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>();<br>&#125;);<br>service.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">if</span> (response.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>    <span class="hljs-keyword">if</span> (response.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">200</span>) &#123;<br>      <span class="hljs-comment">//请求成功后，将cancel置为null。以通过下次请求。</span><br>      cancel = <span class="hljs-literal">null</span>;<br>      url = <span class="hljs-literal">null</span>;<br>      <span class="hljs-keyword">return</span> response.<span class="hljs-property">data</span>;<br>    &#125;<br>&#125;, <span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="vue-项目上线优化记录"><a href="#vue-项目上线优化记录" class="headerlink" title="vue 项目上线优化记录"></a>vue 项目上线优化记录</h2><p>项目上线，没有进行备案，所以需要架设于境外服务器，所有访问速度较慢，现在记录所作优化步骤：</p><ol><li>引用线上地址</li><li>将静态资源放置于网络存储</li><li>精灵图减少请求</li><li>服务器开通 gzip</li><li>路由懒加载</li></ol><!-- more --><h3 id="引用线上地址"><a href="#引用线上地址" class="headerlink" title="引用线上地址"></a>引用线上地址</h3><p>使用的是 bootstrap，之前是通过下载到本地，然后引用，当 build 的时候，会将其一并打包，所以导致 js 文件过大，所以直接将引用地址改为网络请求，这样，打包后的文件会减小很多。</p><blockquote><script src="https://cdn.staticfile.org/jquery/3.2.1/jquery.min.js"></script><script src="https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js"></script><script src="https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"></blockquote><h3 id="将静态资源放置于网络存储"><a href="#将静态资源放置于网络存储" class="headerlink" title="将静态资源放置于网络存储"></a>将静态资源放置于网络存储</h3><p>网站的大部分图片都不会改动，所以将其上传到 oss 网络存储然后直接引用网络地址，这里采用的是北京的 oss，这样从服务器请求的时候是从北京地区请求的图片，相对速度会快一些。</p><blockquote><p>background-image: url(“<a href="https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png&quot;">https://limengtupian.oss-cn-beijing.aliyuncs.com/%E9%A6%96%E9%A1%B5%E7%B2%BE%E7%81%B5%E5%9B%BE/img.png&quot;</a>);</p></blockquote><h3 id="精灵图减少请求"><a href="#精灵图减少请求" class="headerlink" title="精灵图减少请求"></a>精灵图减少请求</h3><p>每一张图片都会发起一次请求，所以对于一些常用的小图标，我们一般都会将其做成一张图，然后通过定位的方式，显示出其中的一部分，这样的图片就是精灵图。</p><h3 id="服务器开通-gzip"><a href="#服务器开通-gzip" class="headerlink" title="服务器开通 gzip"></a>服务器开通 gzip</h3><p>gzip 可以直接再服务端的时候，就对要传输的数据先进行一次压缩，减少传输数据的体积，这个概念跟下载游戏文件的时候一般下载下来的都是压缩包是类似的，然后再客户端的浏览器上，会进行解压处理，这样就大大减少了文件体积，减少的传输速度。</p><p>由于是采用的 vue-cli 3.0 ，查阅网上资料发现，通过 3.0 去构建的项目，是默认的开启 gzip 的，那么只需要再服务器上的配置文件修改。</p><p>采用的是 nginx，所以找到对应的 conf 文件(/usr/local/nginx/conf)，修改如下：</p><blockquote><p>http {</p><p>gzip on;</p><p>gzip_min_length 1k;</p><p>gzip_buffers 4 16k;</p><p>#gzip_http_version 1.0;</p><p>gzip_comp_level 6;</p><p>gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</p><p>gzip_vary off;</p><p>gzip_disable “MSIE [1-6].“;</p><p>}</p></blockquote><p>再次请求，可以通过谷歌浏览器-F12-network-点击任意文件-header 内的 request header 中，可以看到：</p><p><strong>Accept-Encoding</strong>：gzip</p><p>已经是通过了 zip 压缩的文件了，体积明显缩小</p><h3 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h3><p>单页面应用是会再首页加载的时候将所有的页面直接加载完成，所以会出现首页加载较长的情况，这样就需要采用懒加载，当页面被点击的时候再加载。那么，配置如下：</p><p>在 router 中配置如下：</p><blockquote><p>export default {</p><p>path: ‘/home’,</p><p>component: () =&gt; import(‘@/views/Home.vue’)</p><p>}</p></blockquote><p>将其 component 修改成了() =&gt; import(‘@/views/Home.vue’)。</p><p>但是现在<strong>路由懒加载不生效</strong>，因为 cli 3.0 是直接默认会把所有通过 import()按需加载的 javascript 文件加上 prefetch 。</p><p><strong>关闭 prefetch:</strong> (官网示例)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">// vue.config.js module.exports = &#123; chainWebpack: config =&gt; &#123; // 移除 prefetch<br>插件 config.plugins.delete(&#x27;prefetch&#x27;) // 或者 // 修改它的选项：<br>config.plugin(&#x27;prefetch&#x27;).tap(options =&gt; &#123; options[0].fileBlacklist =<br>options[0].fileBlacklist || []<br>options[0].fileBlacklist.push(/myasyncRoute(.)+?\.js$/) return options &#125;) &#125;<br></code></pre></td></tr></table></figure><p>prefetch 链接会消耗宽带，如果是在移动端，而且存在大量的 chunk，那么可以关掉 prefetch 链接，手动选择要提前获取的代码区块。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">//手动选定要提前获取的代码 import(webpackPrefetch: true,<br>&#x27;./someAsyncComponent.vue&#x27;)<br></code></pre></td></tr></table></figure><h2 id="vue-cli-上线-代理接口报-404-修改-conf"><a href="#vue-cli-上线-代理接口报-404-修改-conf" class="headerlink" title="vue-cli 上线 代理接口报 404 修改 conf"></a>vue-cli 上线 代理接口报 404 修改 conf</h2><p>前言： 项目使用 vue-cli 直接生成项目，然后使用 proxyTable 接口代理后， 在本地调用后台接口，一切正常，但是后期打包上线时，发现页面接口报 404，后找到解决办法为：</p><p>找到 nginx 的 conf 文件，打开后，修改里面的配置如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">server &#123; listen 80;//监听80端口 server_name localhost; location / &#123; root html;<br>index index.html index.htm; try_files $uri $uri/ /index.html;<br>//vue单页面应用，不能刷新，所有会设置这个，避免404 &#125; location /v2/ &#123;<br>proxy_set_header X-Real-IP $remote_addr; proxy_pass http://douban.uieee.com; &#125;<br>error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;<br></code></pre></td></tr></table></figure><p>里面主要添加的配置为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">location /v2/ &#123; proxy_set_header X-Real-IP $remote_addr; proxy_pass<br>http://douban.uieee.com; &#125;<br></code></pre></td></tr></table></figure><p>这个/v2/监听，实际上就是我 api 调用的名字，这个可以在你的 vue.config.js 里可以去设置：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">module.exports = &#123; //axios域代理，解决axios跨域问题 devServer: &#123; proxy: &#123; &#x27;/v2&#x27;:<br>&#123; target: &#x27;https://douban.uieee.com&#x27;, changeOrigin: true, ws: true, &#125; &#125; &#125; &#125;<br></code></pre></td></tr></table></figure><p>我请求的 api 格式如下：</p><blockquote><p><a href="https://douban.uieee.com/v2/movie/top250?start=0&amp;count=12">https://douban.uieee.com/v2/movie/top250?start=0&amp;count=12</a></p></blockquote><p>提供的 api 文档里面可以看到，所有的 api 都带有一个相同的字符/v2/。</p><p>所以以这个字符为关键字来修改代理。</p><meta name="referrer" content="no-referrer"/><h2 id="初始化设置和环境搭建（neginx-centOS，vue-的环境搭建）-GitHub-相关"><a href="#初始化设置和环境搭建（neginx-centOS，vue-的环境搭建）-GitHub-相关" class="headerlink" title="初始化设置和环境搭建（neginx,centOS，vue 的环境搭建）/GitHub 相关"></a>初始化设置和环境搭建（neginx,centOS，vue 的环境搭建）/GitHub 相关</h2><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3><p>一般来讲, 可以用以下三种方式安装 Node.js：</p><ul><li>通过安装包安装(Windows 和 Mac 用户推荐)</li><li>通过源码编译安装(Linux 用户推荐)</li><li>在 Linux 下可以通过 yum|apt-get 安装</li></ul><ol><li><p>通过安装包安装：</p></li><li><p>源码编译安装：</p><!-- more --><p>Linux 用户：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">curl -O https://nodejs.org/dist/v6.<span class="hljs-number">10.3</span>/<span class="hljs-keyword">node</span><span class="hljs-title">-v6</span>.<span class="hljs-number">10.3</span>.tar.gz<br>tar -xzvf <span class="hljs-keyword">node</span><span class="hljs-title">-v6</span>.<span class="hljs-number">10.3</span>.tar.gz<br>cd  <span class="hljs-keyword">node</span><span class="hljs-title">-v6</span>.<span class="hljs-number">10.3</span><br>./configure<br>make<br>make install<br></code></pre></td></tr></table></figure></li></ol><h3 id="安装-cnpm-镜像（可选择）"><a href="#安装-cnpm-镜像（可选择）" class="headerlink" title="安装 cnpm 镜像（可选择）"></a>安装 cnpm 镜像（可选择）</h3><p><a href="https://npm.taobao.org/">淘宝 NPM 镜像</a>是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10 分钟 一次以保证尽量与官方服务同步。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">npm install -g cnpm <span class="hljs-attr">--registry</span>=https:<span class="hljs-comment">//registry.npm.taobao.org</span><br>cnpm install <span class="hljs-selector-attr">[name]</span><br></code></pre></td></tr></table></figure><h3 id="使用-vue-cli"><a href="#使用-vue-cli" class="headerlink" title="使用 vue-cli"></a>使用 vue-cli</h3><ol><li><p>安装</p><p> 如果用 npm 下载速度慢，可以使用 cnpm.</p> <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g vue-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure></li><li><p>init 初始模板</p><p> 目前可用的模板包括：</p><ul><li><p><a href="https://github.com/vuejs-templates/browserify">browserify</a>–全功能的 Browserify + vueify，包括热加载，静态检测，单元测试</p></li><li><p><a href="https://github.com/vuejs-templates/browserify-simple">browserify-simple</a>–一个简易的 Browserify + vueify，以便于快速开始。</p></li><li><p><a href="https://github.com/vuejs-templates/webpack">webpack</a>–全功能的 Webpack + vueify，包括热加载，静态检测，单元测试</p></li><li><p><a href="https://github.com/vuejs-templates/webpack-simple">webpack-simple</a>–一个简易的 Webpack + vueify，以便于快速开始。</p></li><li><p><a href="https://github.com/vuejs-templates/simple">simple</a> - 单个 HTML 文件中最简单的 Vue 设置</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">vue init &lt;<span class="hljs-keyword">template</span>-<span class="hljs-type">name</span>&gt; &lt;project-<span class="hljs-type">name</span>&gt;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>运行项目</p><ol><li>我们的项目选择 webpack,使用以下命令:</li></ol> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">vue <span class="hljs-keyword">init</span> webpack vue-todos<br></code></pre></td></tr></table></figure><ol start="2"><li><p>输入下面的命令就可以运行这个项目了:</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">cd vue-todos<br><span class="hljs-built_in">npm</span> install<br><span class="hljs-built_in">npm</span> run dev<br></code></pre></td></tr></table></figure></li></ol></li></ol><h2 id="CentOS7-安装-Nginx"><a href="#CentOS7-安装-Nginx" class="headerlink" title="CentOS7 安装 Nginx"></a>CentOS7 安装 Nginx</h2><h2 id="安装所需环境"><a href="#安装所需环境" class="headerlink" title="安装所需环境"></a>安装所需环境</h2><p>Nginx 是 C 语言 开发，建议在 Linux 上运行，当然，也可以安装 Windows 版本，本篇则使用 <a href="http://www.linuxidc.com/topicnews.aspx?tid=14">CentOS</a> 7 作为安装环境。</p><p>顺序如下：</p><ol><li><p><strong>gcc 安装</strong></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">yum install gcc</span><span class="hljs-literal">-</span><span class="hljs-comment">c</span><span class="hljs-literal">++</span><br></code></pre></td></tr></table></figure></li><li><p><strong>PCRE pcre-devel 安装</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y pcre pcre-devel<br></code></pre></td></tr></table></figure></li><li><p><strong>zlib 安装</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">yum install -y <span class="hljs-literal">zlib</span> <span class="hljs-literal">zlib</span>-devel<br></code></pre></td></tr></table></figure></li><li><p><strong>OpenSSL 安装</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y openssl openssl-devel<br></code></pre></td></tr></table></figure></li><li><p>下载<code>.tar.gz</code>安装包</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -c https:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/download/</span>nginx-<span class="hljs-number">1.12</span>.<span class="hljs-number">0</span>.tar.gz<br></code></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf nginx-<span class="hljs-number">1</span>.<span class="hljs-number">12</span>.<span class="hljs-number">0</span>.tar.gz<br><span class="hljs-attribute">cd</span> nginx-<span class="hljs-number">1</span>.<span class="hljs-number">12</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li><p><strong>配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure<br></code></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">make</span><br><span class="hljs-built_in">make</span> install<br></code></pre></td></tr></table></figure></li><li><p>启动、停止 nginx</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> <span class="hljs-string">/usr/local/nginx/sbin/</span><br><span class="hljs-string">./nginx</span><br><span class="hljs-string">./nginx</span> -s stop<br><span class="hljs-string">./nginx</span> -s <span class="hljs-keyword">quit</span><br><span class="hljs-string">./nginx</span> -s <span class="hljs-keyword">reload</span><br></code></pre></td></tr></table></figure></li><li><p>重启 <strong>nginx</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/<br>./nginx -s reload<br></code></pre></td></tr></table></figure></li></ol><h2 id="CSS-Tools-Reset-CSS-重置-css"><a href="#CSS-Tools-Reset-CSS-重置-css" class="headerlink" title="CSS Tools: Reset CSS 重置 css"></a>CSS Tools: Reset CSS 重置 css</h2><p>浏览器自带的 css 属性，一般需要重置，记录如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html">/* http://meyerweb.com/eric/tools/css/reset/ v2.0 | 20110126 License: none<br>(public domain) */ html, body, div, span, applet, object, iframe, h1, h2, h3,<br>h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del,<br>dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b,<br>u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table,<br>caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details,<br>embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby,<br>section, summary, time, mark, audio, video &#123; margin: 0; padding: 0; border: 0;<br>font-size: 100%; font: inherit; vertical-align: baseline; &#125; /* HTML5<br>display-role reset for older browsers */ article, aside, details, figcaption,<br>figure, footer, header, hgroup, menu, nav, section &#123; display: block; &#125; body &#123;<br>line-height: 1; &#125; ol, ul &#123; list-style: none; &#125; blockquote, q &#123; quotes: none; &#125;<br>blockquote:before, blockquote:after, q:before, q:after &#123; content: &#x27;&#x27;; content:<br>none; &#125; table &#123; border-collapse: collapse; border-spacing: 0; &#125;<br></code></pre></td></tr></table></figure><h3 id="记录："><a href="#记录：" class="headerlink" title="记录："></a>记录：</h3><ul><li><p>Vetur</p><p>使用 scss 的时候，会遇到 vetur 报错的情况：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;scss&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><br>    @keyframes glitch-one &#123;<br>  @for $i from 20 to 30 &#123;<br>    #&#123;$i / 2&#125;% &#123;<br>      left: #&#123;randomNum(200, -100)&#125;px;<br>      clip-path: inset(#&#123;randomNum(150, 30)&#125;px 0 #&#123;randomNum(150, 30)&#125;px);<br>    &#125;<br>  &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>比如上面的这种情况，就会有红色波浪线提示，但是在浏览器中是正确的。所以需要配置如下：</p><ol><li><p>文件》首选项》设置</p></li><li><p>右上角三个选项的第一个（打开设置 Json）</p></li><li><p>在大括号内添加最后四行（跟 vetur 相关的配置）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123; &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;, &quot;[html]&quot;: &#123;<br>&quot;editor.defaultFormatter&quot;: &quot;vscode.html-language-features&quot; &#125;,<br>&quot;open-in-browser.default&quot;: &quot;chrome&quot;, &quot;explorer.confirmDragAndDrop&quot;: false,<br>&quot;window.zoomLevel&quot;: 1, &quot;[javascript]&quot;: &#123; &quot;editor.defaultFormatter&quot;:<br>&quot;vscode.typescript-language-features&quot; &#125;, &quot;explorer.confirmDelete&quot;: false,<br>&quot;vsicons.dontShowNewVersionMessage&quot;: true, &quot;editor.fontSize&quot;: 20, &quot;[css]&quot;:<br>&#123; &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot; &#125;,<br>&quot;vetur.validation.template&quot;: false,<br>&quot;vetur.experimental.templateInterpolationService&quot;: false,<br>&quot;vetur.validation.style&quot;: false, &quot;vetur.validation.script&quot;: false, &#125;<br></code></pre></td></tr></table></figure></li></ol></li></ul><h2 id="GitHub-相关问题"><a href="#GitHub-相关问题" class="headerlink" title="GitHub 相关问题"></a>GitHub 相关问题</h2><p>GitHub 是一个面向<a href="https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669">开源</a>及私有<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053">软件</a>项目的托管平台，因为只支持 git 作为唯一的版本库格式进行托管，故名 GitHub。</p><h2 id="初始设置-github"><a href="#初始设置-github" class="headerlink" title="初始设置 github"></a>初始设置 github</h2><p>记录开始使用 GitHub 中三点注意：</p><ol><li><p>注册账号会验证邮箱，而 163 邮箱不能接受验证邮件</p><p>**<em>注意</em>**：注册需要设置邮箱，需要选用 qq 邮箱或者 gmail 邮箱，163 邮箱发现不能接收到 GitHub 的邮件！</p><p>新的库，需要设置 sshkeys</p><ol><li><p>检查是否有 sshkeys</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/.ssh<br></code></pre></td></tr></table></figure></li><li><p>创建 ssh</p><p>首先创建一个 SSH，在 Git Bash 中输入</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>ssh-keygen -t rsa -C “你的邮箱”<br></code></pre></td></tr></table></figure><p>然后他就会显示这两行</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">Generating <span class="hljs-keyword">public</span>/<span class="hljs-keyword">private</span> rsa key pair.<br>Enter <span class="hljs-keyword">file</span> in which to save the key (<span class="hljs-regexp">/c/U</span>sers<span class="hljs-regexp">/16627/</span>.ssh/id_rsa):<br></code></pre></td></tr></table></figure><p>这是让你输入一个文件名，用于保存刚才生成的 SSH key 代码。如果你不输入，直接回车，那么就会默认生成 id_rsa 和 id_rsa.pub 两个秘钥文件（如下提示）。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">Created directory ‘<span class="hljs-regexp">/c/</span>Users<span class="hljs-regexp">/16627/</span>.ssh’.<br></code></pre></td></tr></table></figure><p>紧接着又会提示你</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-built_in">Enter</span> <span class="hljs-variable">passphrase</span> <span class="hljs-punctuation">(</span><span class="hljs-variable">empty</span> <span class="hljs-variable">for</span> <span class="hljs-variable">no</span> <span class="hljs-variable">passphrase</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br><span class="hljs-built_in">Enter</span> <span class="hljs-variable">same</span> <span class="hljs-variable">passphrase</span> <span class="hljs-variable">again</span><span class="hljs-operator">:</span><br></code></pre></td></tr></table></figure><p>接着又会提示你输入两次密码（该密码是你 push 文件的时候要输入的密码，而不是 github 管理者的密码），当然你还可以不输入密码，直接按回车。那么 fetch 和 push 的时候就不需要输入密码。</p><p><img src="https://img-blog.csdn.net/20180118114145818?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="chegngong"></p><p>已经创建成功</p><p><img src="https://img-blog.csdn.net/20180118115923234?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="chenggong"></p></li><li><p>添加 ssh 到 GitHub</p><p>按照以下的步骤操作：</p><p><img src="https://img-blog.csdn.net/20180118120316317?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="1"></p><p><img src="https://img-blog.csdn.net/20180118120349241?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="2"></p><p><img src="https://img-blog.csdn.net/20180118120556118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="3"></p><p>title 随便给他起个名字就好。然后是 key，这时候你要打开你刚才在电脑上的 SSH key。刚才提示你建立的那段文字有 SSH key 的地址，按照地址找到你的文件，用记事本<strong>打开 id_rsa.pub 文件，全选其中的内容粘贴到网页的 Key 中即可。</strong></p><p><img src="https://img-blog.csdn.net/20180118121323658?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="4"></p><p><img src="https://img-blog.csdn.net/20180118121457269?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="5"></p><p><strong>然后你就会受到建立成功的邮件了。</strong></p><p><img src="https://img-blog.csdn.net/20180118121751176?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY2NjcxNzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="6"></p></li><li><p>测试一下 ssh key</p><p>在 git Bash 中输入以下代码：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br>注意是git<span class="hljs-variable">@github</span>.com，不是你的邮箱。<br></code></pre></td></tr></table></figure><p>然后会提示你：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">The authenticity of host ‘github.<span class="hljs-keyword">com</span> (<span class="hljs-number">192.30</span>.<span class="hljs-number">255.112</span>)’ can’t <span class="hljs-keyword">be</span> established.<br>RSA key fingerprint <span class="hljs-keyword">is</span> SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.<br>Are you sure you want <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span> connecting (yes/<span class="hljs-keyword">no</span>)?<br></code></pre></td></tr></table></figure><p>正常提示，你只需要 YES 就可以。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如果你没设置密码会提示你:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">Warning: Permanently added ‘github.<span class="hljs-keyword">com</span>,<span class="hljs-number">192.30</span>.<span class="hljs-number">255.112</span>’ (RSA) <span class="hljs-keyword">to</span> the <span class="hljs-keyword">list</span> of known hosts.<br>Hi “用户名”! You’<span class="hljs-keyword">ve</span> successfully authenticated, but GitHub does not provide <span class="hljs-keyword">shell</span> access.<br></code></pre></td></tr></table></figure></li></ol></li><li><p>需要设置 config.name 和 config.email</p><ul><li><p>按照以下的步骤操作</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;yourname&quot;</span> 设置用户名<br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> myemail@qq<span class="hljs-selector-class">.com</span> 设置用户邮箱<br>git config <span class="hljs-attr">--list</span> 查看git设置列表信息<br>git config user<span class="hljs-selector-class">.name</span>  查看用户名<br></code></pre></td></tr></table></figure></li></ul></li></ol><h2 id="git-推动-GitHub-提示-faild"><a href="#git-推动-GitHub-提示-faild" class="headerlink" title="git 推动 GitHub 提示 faild"></a>git 推动 GitHub 提示 faild</h2><p>在添加远程库的时候一直验证不成功，一直提示 failed to push some refs to git 的问题，经过网上查找终于解决了这个问题。</p><p>主要问题指向了 README.md 文件</p><h3 id="git-步骤如下"><a href="#git-步骤如下" class="headerlink" title="git 步骤如下"></a>git 步骤如下</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">1. git add . //添加到暂存区 2. git commit -m &quot;备注内容&quot; //添加到head 3. git push<br>-u origin master //添加到远程仓库<br></code></pre></td></tr></table></figure><p>其中第三步出错，提示 ailed to push some refs to git</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>出现错误的主要原因是 github 中的 README.md 文件不在本地代码目录中，</p><p>可以通过如下命令进行代码合并【注：pull=fetch+merge]</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">git pull --rebase origin master<br></code></pre></td></tr></table></figure><p>执行上面代码后可以看到本地代码库中多了 README.md 文件</p><p>此时再执行语句 git push -u origin master 即可完成代码上传到 github</p><meta name="referrer" content="no-referrer"/><h2 id="keep-alive-的使用与周期"><a href="#keep-alive-的使用与周期" class="headerlink" title="keep-alive 的使用与周期"></a>keep-alive 的使用与周期</h2><h3 id="使用-keep-alive-的时机"><a href="#使用-keep-alive-的时机" class="headerlink" title="使用 keep-alive 的时机"></a>使用 keep-alive 的时机</h3><p>在搭建 vue 项目时，有某些组件没必要多次渲染，所以需要将组件在内存中进行‘持久化，此时 keep-alive 便可以派上用场了。keep-alive 可以使被包含的组件状态维持不变，即便是组件切换了，其内的状态依旧维持在内存之中。在下一次显示时，也不会重现渲染。</p><blockquote><p>PS：<code>与</code>相似，只是一个抽象组件，它不会在 DOM 树中渲染(真实或者虚拟都不会)，也不在父组件链中存在，比如：你永远在 <code>this.$parent</code> 中找不到 <code>keep-alive</code> 。</p></blockquote><!-- more --><h3 id="配合-router-view-去使用"><a href="#配合-router-view-去使用" class="headerlink" title="配合 router-view 去使用"></a>配合 router-view 去使用</h3><p>有些时候可能需要将整个路由页面一切缓存下来，也就是将 `` 进行缓存。这种使用场景还是蛮多的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;keep-alive&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;$router.meta.keepAlive&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br>&lt;/keep-alive&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;!$router.meta.keepAlive&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br><br><span class="hljs-comment">//router配置</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Router</span>(&#123;<br>    <span class="hljs-attr">routes</span>: [<br>        &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;a&#x27;</span>,<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/a&#x27;</span>,<br>            <span class="hljs-attr">component</span>: A,<br>            <span class="hljs-attr">meta</span>: &#123;<br>                <span class="hljs-attr">keepAlive</span>: <span class="hljs-literal">true</span><br>            &#125;<br>        &#125;,<br>        &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;b&#x27;</span>,<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/b&#x27;</span>,<br>            <span class="hljs-attr">component</span>: B<br>        &#125;<br>    ]<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="keep-alive-生命周期和新属性"><a href="#keep-alive-生命周期和新属性" class="headerlink" title="keep-alive 生命周期和新属性"></a>keep-alive 生命周期和新属性</h3><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>被包含在 ``中创建的组件，会多出两个生命周期的钩子:<code>activated</code>与<code>deactivated</code></p><ul><li>activated</li></ul><p>在组件被激活时调用，<strong>在组件第一次渲染时也会被调用</strong>，之后每次 keep-alive 激活时被调用。</p><ul><li>deactivated</li></ul><p>在组件被停用时调用。</p><blockquote><p>注意：只有组件被 <code>keep-alive</code> 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 <code>2.1.0</code> 版本之后，使用 <code>exclude</code> 排除之后，就算被包裹在 <code>keep-alive</code> 中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。</p></blockquote><h4 id="新属性"><a href="#新属性" class="headerlink" title="新属性"></a>新属性</h4><p>在 vue <code>2.1.0</code> 版本之后，<code>keep-alive</code> 新加入了两个属性: <code>include</code>(包含的组件缓存生效) 与 <code>exclude</code>(排除的组件不缓存，优先级大于 include) 。</p><p><code>include</code> 和 <code>exclude</code> 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示</p><p>当使用正则或者是数组时，一定要使用 <code>v-bind</code> !</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!-- 逗号分隔字符串，只有组件a与b被缓存。这样使用场景变得更有意义了 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">include</span>=<span class="hljs-string">&quot;a,b&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">component</span> <span class="hljs-attr">:is</span>=<span class="hljs-string">&quot;view&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">component</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span></span><br><br>&lt;!-- 正则表达式 (需要使用 v-bind，符合匹配规则的都会被缓存) --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">:include</span>=<span class="hljs-string">&quot;/a|b/&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">component</span> <span class="hljs-attr">:is</span>=<span class="hljs-string">&quot;view&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">component</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span></span><br><br>&lt;!-- <span class="hljs-title class_">Array</span> (需要使用 v-bind，被包含的都会被缓存) --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">:include</span>=<span class="hljs-string">&quot;[&#x27;a&#x27;, &#x27;b&#x27;]&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">component</span> <span class="hljs-attr">:is</span>=<span class="hljs-string">&quot;view&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">component</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span></span><br></code></pre></td></tr></table></figure><ul><li>有了 include 之后，再与 <code>router-view</code> 一起使用时便方便许多了:</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!-- 一个include解决了，不需要多写一个标签，也不需要在路由元中添加keepAlive了 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">include</span>=<span class="hljs-string">&#x27;a&#x27;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">keeo-alive</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li><p>keeo-alive 先匹配被包含组件的 <code>name</code> 字段，如果 <code>name</code> 不可用，则匹配当前组件 <code>components</code> 配置中的注册名称。</p></li><li><p>keeo-alive 不会在函数式组件中正常工作，因为它们没有缓存实例。</p></li><li><p>当匹配条件同时在 <code>include</code> 与 <code>exclude</code> 存在时，以 <code>exclude</code> 优先级最高(当前 vue 2.4.2 version)。比如：包含于排除同时匹配到了组件 A，那组件 A 不会被缓存。</p></li><li><p>包含在 keeo-alive 中，但符合 <code>exclude</code> ，不会调用<code>activated</code> 和 <code>deactivated</code>。</p></li><li><p><strong>设置了<code>keep-alive</code>,这个时候不会触发生命周期的钩子函数。</strong></p><p>当页面内的数据没有发生变化时，页面内的操作比如跳转到另一个路由，是不会去经过生命周期函数的，比如：desdtroy 函数等。</p><p>它会直接在进入的时候触发<code>activated</code> 和离开的时候触发 deactivated。</p><p>所以，如果是有涉及到之前放入 mouted 周期中的函数，可以将其放入 activated，放入 desdtroy 周期的函数可以放入 deactivated。</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>移动端记录</title>
    <link href="/2022/09/15/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/09/15/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="移动端记录"><a href="#移动端记录" class="headerlink" title="移动端记录"></a>移动端记录</h2><span id="more"></span><h3 id="移动端点击事件-click-和-touchstart"><a href="#移动端点击事件-click-和-touchstart" class="headerlink" title="移动端点击事件 click 和 touchstart"></a>移动端点击事件 click 和 touchstart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div<br>    @click=&quot;clickCurrentVideo(index)&quot;<br>    @touchstart.stop.prevent=&quot;clickCurrentVideo(index)&quot;<br>  &gt;&lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><blockquote><p>移动端点击事件会有 300ms 延迟,所以需要改用 touchstart 事件<br>移动端需要使用 touchstart.stop.prevent 避免第一次 click 不生效的 bug</p></blockquote><h3 id="移动端自动播放视频"><a href="#移动端自动播放视频" class="headerlink" title="移动端自动播放视频"></a>移动端自动播放视频</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">//移动端监听用于自动播放</span><br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;touchstart&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">scrollMixinElIsFirstShow</span>, &#123;<br>    <span class="hljs-attr">once</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 只执行一次</span><br>    <span class="hljs-attr">passive</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//listener 永远不会调用 preventDefault()</span><br>  &#125;);<br>  <span class="hljs-variable language_">this</span>.$once(<span class="hljs-string">&quot;hook:beforeDestroy&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&quot;touchstart&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">scrollMixinElIsFirstShow</span>);<br>  &#125;);<br>  <span class="hljs-comment">//移动端监听用于自动播放</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>移动端自动播放需要在用户做出操作后,才能开始播放.将自动播放添加到 touchstart 事件上.<br>addEventListener 上通过配置 once 来确保播放事件只执行一次</p><h3 id="如何判断所有平台的环境"><a href="#如何判断所有平台的环境" class="headerlink" title="如何判断所有平台的环境"></a>如何判断所有平台的环境</h3><p>如果我们开发一个网站，这个网站可能被用于：微信小程序 webview、淘宝小程序 webview、京东小程序 webview、微信浏览器、普通浏览器、safari、PC 端。那么，我们需要如何判断当前处于何种环境呢？</p><h4 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span></span><br><span class="hljs-tag">      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, shrink-to-fit=no&quot;</span></span><br><span class="hljs-tag">    /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;theme-color&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;#000000&quot;</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 京东sdk --&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 地址如下：https://storage.360buyimg.com/api-test/jssdk.js --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 文档如下：https://mp-docs.jd.com/doc/dev/component/1694 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./jd_jssdk.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 淘宝sdk --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;navigator.userAgent: ---------&quot;</span>, navigator.<span class="hljs-property">userAgent</span>);</span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (navigator.<span class="hljs-property">userAgent</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;AliApp&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">writeln</span>(</span><br><span class="language-javascript">          <span class="hljs-string">&#x27;&lt;script src=&quot;https://appx/web-view.min.js&quot;&#x27;</span> +</span><br><span class="language-javascript">            <span class="hljs-string">&quot;&gt;&quot;</span> +</span><br><span class="language-javascript">            <span class="hljs-string">&quot;&lt;&quot;</span> +</span><br><span class="language-javascript">            <span class="hljs-string">&quot;/&quot;</span> +</span><br><span class="language-javascript">            <span class="hljs-string">&quot;script&gt;&quot;</span></span><br><span class="language-javascript">        );</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      !(<span class="hljs-keyword">function</span> (<span class="hljs-params">n, e</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">setViewHeight</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">var</span> windowVH = e.<span class="hljs-property">innerHeight</span> / <span class="hljs-number">100</span>;</span><br><span class="language-javascript">          <span class="hljs-keyword">if</span> (navigator.<span class="hljs-property">userAgent</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;AliApp&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;</span><br><span class="language-javascript">            windowVH = n.<span class="hljs-property">body</span>.<span class="hljs-property">offsetHeight</span> / <span class="hljs-number">100</span>;</span><br><span class="language-javascript">          &#125;</span><br><span class="language-javascript">          n.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-title function_">setProperty</span>(<span class="hljs-string">&quot;--vh&quot;</span>, windowVH + <span class="hljs-string">&quot;px&quot;</span>);</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> i = <span class="hljs-string">&quot;orientationchange&quot;</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span> ? <span class="hljs-string">&quot;orientationchange&quot;</span> : <span class="hljs-string">&quot;resize&quot;</span>;</span><br><span class="language-javascript">        n.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, setViewHeight);</span><br><span class="language-javascript">        e.<span class="hljs-title function_">addEventListener</span>(i, setViewHeight);</span><br><span class="language-javascript">      &#125;)(<span class="hljs-variable language_">document</span>, <span class="hljs-variable language_">window</span>);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>首先需要引入对应平台的 JsSdk</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// &quot;ua-parser-js&quot;: &quot;^1.0.39&quot;,</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">UserAgentParser</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ua-parser-js&quot;</span>;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * change version string to number</span><br><span class="hljs-comment"> * 转换数字型版本号字符串为数值</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">versionToNumber</span>(<span class="hljs-params">version, length, exponent</span>) &#123;<br>  <span class="hljs-keyword">var</span> arr;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span> &lt; <span class="hljs-number">3</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  arr = version.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>  version = <span class="hljs-number">0</span>;<br>  arr.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">value, index, array</span>) &#123;<br>    version += value * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">10</span>, length * exponent - <span class="hljs-number">1</span>);<br>    length--;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> version;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * compare version</span><br><span class="hljs-comment"> * 比较版本号</span><br><span class="hljs-comment"> * 仅适用数字型的版本号</span><br><span class="hljs-comment"> * 0: 相等</span><br><span class="hljs-comment"> * 1: 大于</span><br><span class="hljs-comment"> * -1: 小于</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">compareVersion</span>(<span class="hljs-params">version, targetVersion, exponent</span>) &#123;<br>  <span class="hljs-keyword">var</span> getVersionNumber, length;<br>  exponent = exponent || <span class="hljs-number">2</span>;<br>  <span class="hljs-keyword">if</span> (!version || !targetVersion) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Need two versions to compare!&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (version === targetVersion) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  length = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(version.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-property">length</span>, targetVersion.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>).<span class="hljs-property">length</span>);<br>  getVersionNumber = (<span class="hljs-keyword">function</span> (<span class="hljs-params">length, exponent</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">version</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">versionToNumber</span>(version, length, exponent);<br>    &#125;;<br>  &#125;)(length, exponent);<br>  version = <span class="hljs-title function_">getVersionNumber</span>(version);<br>  targetVersion = <span class="hljs-title function_">getVersionNumber</span>(targetVersion);<br>  <span class="hljs-keyword">return</span> version &gt; targetVersion ? <span class="hljs-number">1</span> : version &lt; targetVersion ? -<span class="hljs-number">1</span> : <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> device = (<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">let</span> supportWebGL;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>);<br>    supportWebGL = !!(<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-property">WebGLRenderingContext</span> &amp;&amp;<br>      (canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;webgl&quot;</span>) || canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;experimental-webgl&quot;</span>))<br>    );<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    supportWebGL = <span class="hljs-literal">false</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> supportWebRTC = !!(<br>    (navigator.<span class="hljs-property">mediaDevices</span> &amp;&amp; navigator.<span class="hljs-property">mediaDevices</span>.<span class="hljs-property">getUserMedia</span>) ||<br>    navigator.<span class="hljs-property">getUserMedia</span><br>  );<br><br>  <span class="hljs-keyword">const</span> &#123;<br>    <span class="hljs-attr">browser</span>: &#123; <span class="hljs-attr">name</span>: browserName, <span class="hljs-attr">version</span>: browserVersion &#125;,<br>    <span class="hljs-attr">os</span>: &#123; <span class="hljs-attr">name</span>: osName, <span class="hljs-attr">version</span>: osVersion &#125;,<br>  &#125; = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserAgentParser</span>().<span class="hljs-title function_">getResult</span>();<br><br>  <span class="hljs-keyword">const</span> ua = navigator.<span class="hljs-property">userAgent</span>;<br><br>  <span class="hljs-comment">// iPadOS 会模拟MAC的信息。用特殊方法检测。</span><br>  <span class="hljs-keyword">const</span> isIPad =<br>    osName === <span class="hljs-string">&quot;Mac OS&quot;</span> &amp;&amp;<br>    <span class="hljs-literal">undefined</span> === <span class="hljs-variable language_">window</span>.<span class="hljs-property">safari</span> &amp;&amp;<br>    <span class="hljs-literal">undefined</span> !== navigator.<span class="hljs-property">standalone</span>;<br>  <span class="hljs-keyword">return</span> &#123;<br>    supportWebGL,<br>    supportWebRTC,<br><br>    <span class="hljs-attr">isThanIos11</span>:<br>      <span class="hljs-title function_">compareVersion</span>(isIPad ? browserVersion : osVersion, <span class="hljs-string">&quot;11.0.0&quot;</span>) &gt;= <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">isThanIos13</span>:<br>      <span class="hljs-title function_">compareVersion</span>(isIPad ? browserVersion : osVersion, <span class="hljs-string">&quot;13.0.0&quot;</span>) &gt;= <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">isIos</span>: osName === <span class="hljs-string">&quot;iOS&quot;</span> || isIPad,<br>    <span class="hljs-comment">// isAndroid: osName === &quot;Android&quot;,</span><br>    <span class="hljs-attr">isAndroid</span>: osName === <span class="hljs-string">&quot;Android&quot;</span> || osName === <span class="hljs-string">&quot;android&quot;</span>,<br>    <span class="hljs-attr">isWechat</span>: browserName === <span class="hljs-string">&quot;WeChat&quot;</span>,<br>    <span class="hljs-attr">isQQ</span>: browserName === <span class="hljs-string">&quot;QQ&quot;</span>,<br>    <span class="hljs-attr">isWeibo</span>: <span class="hljs-regexp">/weibo/i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isSafari</span>:<br>      browserName === <span class="hljs-string">&quot;Mobile Safari&quot;</span> || (isIPad &amp;&amp; browserName === <span class="hljs-string">&quot;Safari&quot;</span>),<br>    <span class="hljs-attr">isUc</span>: browserName === <span class="hljs-string">&quot;UCBrowser&quot;</span>,<br>    <span class="hljs-attr">isLine</span>: <span class="hljs-regexp">/line\//i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isQQBrowser</span>: browserName === <span class="hljs-string">&quot;QQBrowser&quot;</span>,<br>    <span class="hljs-attr">isChrome</span>: browserName === <span class="hljs-string">&quot;Chrome&quot;</span>,<br>    <span class="hljs-attr">isFirfox</span>: browserName === <span class="hljs-string">&quot;Firefox&quot;</span>,<br>    <span class="hljs-attr">isFacebook</span>: browserName === <span class="hljs-string">&quot;Facebook&quot;</span>,<br>    <span class="hljs-attr">isInstagram</span>: <span class="hljs-regexp">/instagram/i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isTbsKernel</span>: <span class="hljs-regexp">/MQQBrowser\/.*tbs/i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isXWebKernel</span>: <span class="hljs-regexp">/XWEB\/.*MMWEBSDK/i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isJdApp</span>: <span class="hljs-regexp">/jdapp/i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isXHS</span>: <span class="hljs-regexp">/xhsminiapp/i</span>.<span class="hljs-title function_">test</span>(ua),<br>    <span class="hljs-attr">isSafariOrChrome</span>:<br>      browserName === <span class="hljs-string">&quot;Mobile Safari&quot;</span> ||<br>      (isIPad &amp;&amp; browserName === <span class="hljs-string">&quot;Safari&quot;</span>) ||<br>      browserName === <span class="hljs-string">&quot;Chrome&quot;</span><br>        ? <span class="hljs-literal">true</span><br>        : <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">isPC</span>: !(<br>      osName === <span class="hljs-string">&quot;Android&quot;</span> ||<br>      osName === <span class="hljs-string">&quot;android&quot;</span> ||<br>      osName === <span class="hljs-string">&quot;iOS&quot;</span> ||<br>      isIPad<br>    ),<br>  &#125;;<br>&#125;)();<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getCurrentEnv</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> &#123;<br>    <span class="hljs-attr">browser</span>: &#123; <span class="hljs-attr">name</span>: browserName &#125;,<br>  &#125; = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserAgentParser</span>().<span class="hljs-title function_">getResult</span>();<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;browserName: &quot;</span>, browserName);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;device: &quot;</span>, device);<br><br>    <span class="hljs-keyword">if</span> (browserName == <span class="hljs-string">&quot;WeChat&quot;</span>) &#123;<br>      wx.<span class="hljs-property">miniProgram</span>.<span class="hljs-title function_">getEnv</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;res: &quot;</span>, res);<br>        <span class="hljs-keyword">if</span> (res.<span class="hljs-property">miniprogram</span>) &#123;<br>          <span class="hljs-comment">// 走在小程序的逻辑</span><br>          <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&quot;wx_mp&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-comment">// 走不在小程序的逻辑</span><br>          <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&quot;wx_browser&quot;</span>);<br>        &#125;<br>      &#125;);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">//说明不在微信中,走不在小程序的逻辑</span><br>      <span class="hljs-keyword">if</span> (device.<span class="hljs-property">isJdApp</span>) &#123;<br>        <span class="hljs-comment">// 京东</span><br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&quot;jd&quot;</span>);<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.<span class="hljs-property">userAgent</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;AliApp&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-comment">// 阿里</span><br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&quot;tb&quot;</span>);<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (device.<span class="hljs-property">isIos</span> || device.<span class="hljs-property">isAndroid</span>) &#123;<br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&quot;h5&quot;</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;是电脑访问&quot;</span>);<br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&quot;pc&quot;</span>);<br>      &#125;<br>    &#125;<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>以上代码则可以实现环境判断</p><p>使用方式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">env</span> = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getCurrentEnv</span>();<br></code></pre></td></tr></table></figure><p>并且，不同的浏览器需要不同的高度写法，比如：safari 的 100vh 会高于普通浏览器。则需要有如下写法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.layer</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-built_in">var</span>(--vh) * <span class="hljs-number">100</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mobile</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序记录</title>
    <link href="/2022/09/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/09/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="微信小程序记录"><a href="#微信小程序记录" class="headerlink" title="微信小程序记录"></a>微信小程序记录</h2><span id="more"></span><h3 id="微信小程序内嵌-H5"><a href="#微信小程序内嵌-H5" class="headerlink" title="微信小程序内嵌 H5"></a>微信小程序内嵌 H5</h3><h4 id="客户方操作"><a href="#客户方操作" class="headerlink" title="客户方操作"></a>客户方操作</h4><ol><li>登录：<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></li><li>左侧菜单栏：开发管理&gt;&gt; 开发设置</li><li>找到业务域名，点击开始配置</li><li>下载校验文件</li><li>等待第三方上传校验文件</li><li>继续校验文件验证流程</li></ol><h4 id="第三方操作"><a href="#第三方操作" class="headerlink" title="第三方操作"></a>第三方操作</h4><ol><li>将客户提供的校验文件上传到服务器根目录</li><li>通知客户已经上传校验文件，并让客户验证</li></ol><h3 id="微信-ab-转-base64"><a href="#微信-ab-转-base64" class="headerlink" title="微信 ab 转 base64"></a>微信 ab 转 base64</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; filetypemime &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;magic-bytes.js&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">generateDataUrl</span>(<span class="hljs-params">ab, mime</span>) &#123;<br>  <span class="hljs-keyword">if</span> (!mime) &#123;<br>    <span class="hljs-keyword">const</span> mimeList = <span class="hljs-title function_">filetypemime</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(ab, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>));<br>    <span class="hljs-keyword">if</span> (mimeList?.<span class="hljs-property">length</span>) &#123;<br>      mime = mimeList[<span class="hljs-number">0</span>];<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;无法检测出文件MIME类型&quot;</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!mime.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;/&quot;</span>)) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;请输入正确的MIME格式&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-string">`data:<span class="hljs-subst">$&#123;mime&#125;</span>;base64,<span class="hljs-subst">$&#123;wx.arrayBufferToBase64(ab)&#125;</span>`</span>;<br>&#125;<br><br><span class="hljs-title function_">generateDataUrl</span>(ab);<br></code></pre></td></tr></table></figure><h3 id="小程序本身封装的组件"><a href="#小程序本身封装的组件" class="headerlink" title="小程序本身封装的组件"></a>小程序本身封装的组件</h3><ol><li><p>picker（从底部弹起的滚动选择器）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;picker<br>  bindchange=<span class="hljs-string">&quot;bindPickerChange&quot;</span><br>  value=<span class="hljs-string">&quot;&#123;&#123;selectList[index].name&#125;&#125;&quot;</span><br>  range=<span class="hljs-string">&quot;&#123;&#123;selectList&#125;&#125;&quot;</span><br>  range-key=<span class="hljs-string">&quot;&#123;&#123;&#x27;name&#x27;&#125;&#125;&quot;</span><br>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;picker&quot;</span>&gt;</span>&#123;&#123; currentType &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/picker&gt;<br></code></pre></td></tr></table></figure><p>外层用 picker 包裹，内部通过 range 设定滚动数据，range-key 做渲染关键词，最后获得的是 value 的值。</p><p>bindPickerChange 方法做赋值的操作（略。。。）</p></li><li><p>scroll-view（可滚动视图区域)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;scroll-view scroll-x=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav&quot;</span> scroll-left=<span class="hljs-string">&quot;&#123;&#123;navScrollLeft&#125;&#125;&quot;</span> scroll-<span class="hljs-keyword">with</span>-animation=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">block</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">&quot;&#123;&#123;classifyList&#125;&#125;&quot;</span> <span class="hljs-attr">wx:for-index</span>=<span class="hljs-string">&quot;idx&quot;</span> <span class="hljs-attr">wx:for-item</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">wx:key</span>=<span class="hljs-string">&quot;idx&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item &#123;&#123;currentTab == idx ?&#x27;active&#x27;:&#x27;&#x27;&#125;&#125; flex_center_center&quot;</span> <span class="hljs-attr">data-current</span>=<span class="hljs-string">&quot;&#123;&#123;idx&#125;&#125;&quot;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&#x27;&#123;&#123;item.classify_id&#125;&#125;&#x27;</span> <span class="hljs-attr">data-int</span>=<span class="hljs-string">&#x27;&#123;&#123;idx&#125;&#125;&#x27;</span> <span class="hljs-attr">data-name</span>=<span class="hljs-string">&quot;&#123;&#123;item.name&#125;&#125;&quot;</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;switchNav&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;t_name&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">block</span>&gt;</span></span><br>&lt;/scroll-view&gt;<br></code></pre></td></tr></table></figure><p>scroll-left:设置横向滚动条位置</p><p>scroll-with-animation:在设置滚动条位置时使用动画过渡</p></li><li><p>swiper (滑块视图容器)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;swiper<br>  <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;swipers&quot;</span><br>  autoplay=<span class="hljs-string">&quot;&#123;&#123;false&#125;&#125;&quot;</span><br>  duration=<span class="hljs-string">&quot;0&quot;</span><br>  current=<span class="hljs-string">&quot;&#123;&#123;currentTab&#125;&#125;&quot;</span><br>  bindchange=<span class="hljs-string">&quot;swiperChange&quot;</span><br>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">block</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">wx:for</span>=<span class="hljs-string">&quot;&#123;&#123;classifyList&#125;&#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">wx:for-index</span>=<span class="hljs-string">&quot;idxs&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">data-index</span>=<span class="hljs-string">&quot;&#123;&#123;idxs&#125;&#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">wx:for-item</span>=<span class="hljs-string">&quot;item&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">wx:key</span>=<span class="hljs-string">&quot;idx&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">  &gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">swiper-item</span> <span class="hljs-attr">catchtouchmove</span>=<span class="hljs-string">&quot;stopTouchMove&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">block</span>&gt;</span></span><br>&lt;/swiper&gt;<br></code></pre></td></tr></table></figure><p>autoplay:是否自动切换(轮播图的形式)</p><p>duration:滑动动画时长</p><p>current：当前所在滑块的 index</p><p>catchtouchmove：禁止用户手动滑动页面</p></li><li><p>cover-view（覆盖在原生组件之上的文本视图）cover-image（覆盖在原生组件之上的图片视图）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;cover-view hidden=<span class="hljs-string">&quot;&#123;&#123;!hidePause&#125;&#125;&quot;</span> catchtap=<span class="hljs-string">&quot;pauseVideo&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;pause-video&quot;</span>&gt;&lt;/cover-view&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">cover-image</span> <span class="hljs-attr">hidden</span>=<span class="hljs-string">&quot;&#123;&#123;hidePause&#125;&#125;&quot;</span> <span class="hljs-attr">catchtap</span>=<span class="hljs-string">&quot;replayVideo&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/assets/pause@2x.png&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;play-video&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cover-image</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">cover-view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding-top:&#123;&#123;navTop&#125;&#125;px;height:&#123;&#123;navHeight&#125;&#125;px&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">cover-image</span> <span class="hljs-attr">catchtap</span>=<span class="hljs-string">&quot;gotoPrev&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/assets/ic_cancel_white@2x.png&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;back-icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cover-image</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">cover-view</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ol><h3 id="手动封装的组件"><a href="#手动封装的组件" class="headerlink" title="手动封装的组件"></a>手动封装的组件</h3><ol><li><p>AlertBox(页面中间出现的弹框，中间为文字提示，拥有取消和确定按钮)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//父页面中使用</span><br>&lt;<span class="hljs-title class_">AlertBox</span><br>  <span class="hljs-attr">bind</span>:getUserConfirmResult=<span class="hljs-string">&quot;getUserConfirmResult&quot;</span><br>  alert_title=<span class="hljs-string">&quot;&#123;&#123;alert_title&#125;&#125;&quot;</span><br>  is_show=<span class="hljs-string">&quot;&#123;&#123;is_show&#125;&#125;&quot;</span><br>&gt;&lt;/<span class="hljs-title class_">AlertBox</span>&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//子页面的结构</span><br> &lt;!--弹框--&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">&quot;&#123;&#123;is_show&#125;&#125;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert_box&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;clearfloat&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;closeButton&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert_close&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../assets/close@2x.png&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;widthFix&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert_title&quot;</span>&gt;</span>&#123;&#123;alert_title&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert_button&quot;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;confirm_button&quot;</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;confirmButton&quot;</span>&gt;</span>确定<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>涉及到父子组件传值的说明：</p><p>父组件中：bind:getUserConfirmResult = “getUserConfirmResult”相当于自定义事件。可以从子组件获取到用户对于取消和确定的值，从而选择不同的显示效果。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//父组件调用自定义方法</span><br><span class="hljs-title function_">getUserConfirmResult</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-comment">//console.info(&quot;e&quot;, e)</span><br>    <span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;<br>    that.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">is_show</span>: <span class="hljs-literal">false</span><br>    &#125;);<br>  &#125;,<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//子组件中调用的方法。通过this.triggerEvent()通知到父组件的自定义事件。类似于 vue 中 this.$emit。</span><br><span class="hljs-attr">confirmButton</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;1111111&quot;</span>)<br>      <span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;<br><br>      <span class="hljs-keyword">let</span> myEventDetail = &#123;<br>        <span class="hljs-attr">is_show</span>:<span class="hljs-literal">false</span>,<br>      &#125;;<br>      <span class="hljs-keyword">let</span> myEventOption = &#123;<span class="hljs-attr">bubbles</span>:<span class="hljs-literal">false</span>&#125;;<br>      that.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&#x27;getUserConfirmResult&#x27;</span>, myEventDetail, myEventOption)<br>    &#125;,<br></code></pre></td></tr></table></figure><p>自定义组件触发事件时，需要使用 <code>triggerEvent</code> 方法，指定事件名、detail 对象和事件选项：</p><p>选项：bubbles ： 事件是否冒泡；composed：事件是否可以穿越组件边界；capturePhase： 事件是否拥有捕获阶段</p></li></ol><h3 id="使用彩色的图标-1"><a href="#使用彩色的图标-1" class="headerlink" title="使用彩色的图标 1"></a>使用彩色的图标 1</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">配合阿里iconfont，下载icon项目，进入iconfont文件夹<br>npm install -g iconfont-tools<br>iconfont-tools<br>在原来下载的目录中多出来一个文件夹<br>打开文件夹选择其中的wxss文件引入到微信小程序中即可<br></code></pre></td></tr></table></figure><p>使用如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;icon <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;t-icon t-icon-ziyuan9&quot;</span>&gt;&lt;/icon&gt;;<br>icon - ziyuan9就是iconfont中复制的<span class="hljs-keyword">class</span>;<br></code></pre></td></tr></table></figure><h3 id="使用彩色的图标-2"><a href="#使用彩色的图标-2" class="headerlink" title="使用彩色的图标 2"></a>使用彩色的图标 2</h3><p>阿里 iconfont 提供了 Symbol 类型的引入方式，拥有很多优点，记录下再小程序中的使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install mini-program-iconfont-cli --save-dev<br><br>npx iconfont-init<br># 可传入配置输出路径<br># npx iconfont-init --output iconfont.<span class="hljs-property">json</span><br></code></pre></td></tr></table></figure><p>初始化后会生成一个 json 配置文件,修改配置如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;symbol_url&quot;</span>: <span class="hljs-string">&quot;//at.alicdn.com/t/font_2428200_oocwz3ghukn.js&quot;</span>,<br>  <span class="hljs-string">&quot;save_dir&quot;</span>: <span class="hljs-string">&quot;miniprogram/components/iconfont&quot;</span>,<br>  <span class="hljs-string">&quot;use_rpx&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;trim_icon_prefix&quot;</span>: <span class="hljs-string">&quot;icon&quot;</span>,<br>  <span class="hljs-string">&quot;default_icon_size&quot;</span>: <span class="hljs-number">50</span><br>&#125;<br></code></pre></td></tr></table></figure><p>symbol_url：将官网的地址引入</p><p>save_dir：根据自己的目录生成</p><p>生成标准组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"># 可传入配置文件路径<br># npx iconfont-<span class="hljs-variable constant_">XXXX</span> --config iconfont.<span class="hljs-property">json</span><br><br># 微信小程序<br>npx iconfont-wechat<br><br># 支付宝小程序<br>npx iconfont-alipay<br><br># 百度小程序<br>npx iconfont-baidu<br><br># 头条小程序<br>npx iconfont-toutiao<br><br># <span class="hljs-variable constant_">QQ</span>小程序<br>npx iconfont-qq<br></code></pre></td></tr></table></figure><p>引入</p><p>在根目录 的 app.json 文件中引入全局图标组件，避免每个 page 都引入，也可单个 page 引入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 绝对路径<br>&#123;<br>    <span class="hljs-string">&quot;usingComponents&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;iconfont&quot;</span>: <span class="hljs-string">&quot;components/iconfont/iconfont&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 原色彩</span><br>&lt;iconfont name=<span class="hljs-string">&quot;alipay&quot;</span> /&gt;<br><br><span class="hljs-comment">// 单色：红色</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">iconfont</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alipay&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;red&quot;</span> /&gt;</span></span><br><br><span class="hljs-comment">// 多色：红色+橘色</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">iconfont</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alipay&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;&#123;&#123;[&#x27;red&#x27;, &#x27;orange&#x27;]&#125;&#125;&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;300&quot;</span> /&gt;</span></span><br><br><span class="hljs-comment">// 不同格式的颜色写法</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">iconfont</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alipay&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;&#123;&#123;[&#x27;#333&#x27;, &#x27;rgb(50, 124, 39)&#x27;]&#125;&#125;&quot;</span> /&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="微信浏览器打开-h5，然后跳转小程序"><a href="#微信浏览器打开-h5，然后跳转小程序" class="headerlink" title="微信浏览器打开 h5，然后跳转小程序"></a>微信浏览器打开 h5，然后跳转小程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;mp-btn-mask&quot;&gt;<br>    &lt;wx-open-launch-weapp<br>      id=&quot;launch-btn&quot;<br>      ref=&quot;btnBox&quot;<br>      class=&quot;launch-mp-btn&quot;<br>      :appid=&quot;mpConfig.appid&quot;<br>      :path=&quot;mpConfig.path&quot;<br>      @ready=&quot;ready&quot;<br>      @launch=&quot;launch&quot;<br>      @error=&quot;error&quot;<br>      style=&quot;display: block&quot;<br>    &gt;<br>      &lt;script type=&quot;text/wxtag-template&quot;&gt;<br>        &lt;style&gt;<br>          .btn &#123;<br>            display: block;<br>            width: 220px;<br>            height: 45px;<br>            line-height: 45px;<br>            text-align: center;<br>            background: #51afaf;<br>            border-radius: 8px;<br>            font-size: 15px;<br>            font-weight: 400;<br>            color: #fff;<br>            letter-spacing: 3px;<br>            padding: 0;<br>          &#125;<br>        &lt;/style&gt;<br>        &lt;div class=&quot;btn&quot;&gt;前往展示&lt;/div&gt;<br>      &lt;/script&gt;<br>    &lt;/wx-open-launch-weapp&gt;<br>    &lt;!-- &lt;div class=&quot;mask-btn&quot; &gt;&#123;&#123; text &#125;&#125;&lt;/div&gt; --&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Vue from &quot;vue&quot;;<br>// 忽略自定义元素标签抛出的报错<br>Vue.config.ignoredElements = [&quot;wx-open-launch-weapp&quot;];<br>export default &#123;<br>  name: &quot;BuyBtn&quot;,<br>  props: &#123;<br>    mpConfig: &#123;<br>      type: Object,<br>      default: function () &#123;<br>        return &#123;<br>          appid: &quot;wxc9a643121000b22b&quot;,<br>          path: &quot;pages/product-list/product-list.html?categoryId=46&quot;,<br>        &#125;;<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      text: &quot;...&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    ready(e) &#123;<br>      console.log(&quot;ready&quot;, e);<br>      this.text = &quot;前往展示&quot;;<br>      document.getElementById(&quot;launch-btn&quot;).click();<br>      console.log(&quot;click after&quot;, document.getElementById(&quot;launch-btn&quot;));<br>      // console.log(<br>      //   &#x27;document.getElementById(&quot;innerBtn&quot;)&#x27;,<br>      //   document.getElementById(&quot;launch-btn&quot;).children<br>      // );<br>    &#125;,<br>    launch(e) &#123;<br>      console.log(&quot;launch&quot;, e);<br>    &#125;,<br>    error(e) &#123;<br>      console.log(&quot;error&quot;, e);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style lang=&quot;scss&quot; scoped&gt;<br>// .mp-btn-mask &#123;<br>//   // width:60vw;<br>//   height: 12vw;<br>//   position: relative;<br>//   overflow: hidden;<br>//   .mask-btn &#123;<br>//     position: absolute;<br>//     left: 0;<br>//     top: 0;<br>//     width: 60vw;<br>//     height: 12vw;<br>//     background: #51afaf;<br>//     border-radius: 2.13vw;<br>//     font-size: 4vw;<br>//     font-weight: 400;<br>//     color: #ffffff;<br>//     letter-spacing: 3px;<br>//     padding: 0;<br>//     display: flex;<br>//     justify-content: center;<br>//     align-items: center;<br>//     pointer-events: none;<br>//   &#125;<br>// &#125;<br>.launch-mp-btn &#123;<br>  width: 220px;<br>  height: 45px;<br>  // background: #51afaf;<br>  // border-radius: 2.13vw;<br>  // font-size: 3.73vw;<br>  // font-weight: 400;<br>  // color: #ffffff;<br>  // letter-spacing: 3px;<br>  // padding: 0;<br>  // display: flex;<br>  // justify-content: center;<br>  // align-items: center;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>微信 config 配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.<span class="hljs-title function_">config</span>(&#123;<br>  ...res.<span class="hljs-property">data</span>,<br>  <span class="hljs-attr">debug</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">jsApiList</span>: [<br>    <span class="hljs-string">&quot;onMenuShareTimeline&quot;</span>,<br>    <span class="hljs-string">&quot;onMenuShareAppMessage&quot;</span>,<br>    <span class="hljs-string">&quot;onMenuShareQQ&quot;</span>,<br>    <span class="hljs-string">&quot;onMenuShareWeibo&quot;</span>,<br>    <span class="hljs-string">&quot;onMenuShareQZone&quot;</span>,<br>    <span class="hljs-string">&quot;chooseImage&quot;</span>,<br>  ],<br>  <span class="hljs-attr">openTagList</span>: [<span class="hljs-string">&quot;wx-open-launch-weapp&quot;</span>],<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script type=<span class="hljs-string">&quot;text/wxtag-template&quot;</span>&gt;&lt;/script&gt;<br><span class="hljs-comment">//  script中不能使用vw单位，否则会看不到按钮</span><br></code></pre></td></tr></table></figure><h3 id="微信通过渠道参数来访问-webview"><a href="#微信通过渠道参数来访问-webview" class="headerlink" title="微信通过渠道参数来访问 webview"></a>微信通过渠道参数来访问 webview</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">onLoad</span>(<span class="hljs-params">options</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(options, <span class="hljs-string">&quot;----&quot;</span>);<br>  <span class="hljs-keyword">const</span> &#123; url &#125; = options;<br>  <span class="hljs-comment">// let url =</span><br>  <span class="hljs-comment">//   &quot;https%3A%2F%2Fmeta.kivisense.com%2Fcanada-goose-slt%2Findex.html%3F_um_campaign%3D64eddfe78efadc41dccf05a0%26_um_channel%3D64eddfe78efadc41dccf05a1&quot;;</span><br>  <span class="hljs-keyword">if</span> (url) &#123;<br>    <span class="hljs-keyword">let</span> finalUrl = <span class="hljs-built_in">decodeURIComponent</span>(url);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;finalUrl: &quot;</span>, finalUrl);<br>    <span class="hljs-keyword">let</span> right = finalUrl.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;https://&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;right: &quot;</span>, right);<br>    <span class="hljs-keyword">if</span> (right) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">src</span>: finalUrl,<br>      &#125;);<br>    &#125;<br>  &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="正确使用权限"><a href="#正确使用权限" class="headerlink" title="正确使用权限"></a>正确使用权限</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">chosePhoto</span>(<span class="hljs-params"></span>) &#123;<br>  wx.<span class="hljs-title function_">getStorage</span>(&#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;is_check_privacy&quot;</span>,<br>    <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>      wx.<span class="hljs-title function_">showActionSheet</span>(&#123;<br>        <span class="hljs-attr">itemList</span>: [<span class="hljs-string">&quot;拍照&quot;</span>, <span class="hljs-string">&quot;从相册中选择&quot;</span>],<br>        <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">tapIndex</span>);<br>          <span class="hljs-keyword">if</span> (res.<span class="hljs-property">tapIndex</span> === <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;拍照&quot;</span>);<br>            wx.<span class="hljs-title function_">getSetting</span>(&#123;<br>              <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                <span class="hljs-keyword">if</span> (res.<span class="hljs-property">authSetting</span>[<span class="hljs-string">&quot;scope.camera&quot;</span>]) &#123;<br>                  <span class="hljs-comment">// 用户已经授权</span><br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;用户已经授权: &quot;</span>);<br>                  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>                    <span class="hljs-attr">isCameraOpen</span>: <span class="hljs-literal">true</span>,<br>                    <span class="hljs-attr">trigger</span>: <span class="hljs-string">&quot;parent&quot;</span>,<br>                  &#125;);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                  <span class="hljs-comment">// 用户还没有授权，向用户发起授权请求</span><br>                  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;用户还没有授权，向用户发起授权请求: &quot;</span>);<br>                  wx.<span class="hljs-title function_">authorizeForMiniProgram</span>(&#123;<br>                    <span class="hljs-attr">scope</span>: <span class="hljs-string">&quot;scope.camera&quot;</span>,<br>                    <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>                      <span class="hljs-comment">// 用户同意授权</span><br>                      <span class="hljs-comment">// 打开相机组件</span><br>                      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>                        <span class="hljs-attr">isCameraOpen</span>: <span class="hljs-literal">true</span>,<br>                        <span class="hljs-attr">trigger</span>: <span class="hljs-string">&quot;parent&quot;</span>,<br>                      &#125;);<br>                    &#125;,<br>                    <span class="hljs-attr">fail</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>                      <span class="hljs-comment">// 用户不同意授权</span><br>                      <span class="hljs-title function_">showAuthModal</span>(<span class="hljs-string">&quot;scope.camera&quot;</span>, &#123;<br>                        <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;需要使用“摄像头”权限&quot;</span>,<br>                      &#125;);<br>                    &#125;,<br>                  &#125;);<br>                &#125;<br>              &#125;,<br>              <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取用户授权信息失败&quot;</span>, res);<br>                wx.<span class="hljs-title function_">showToast</span>(&#123;<br>                  <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;获取用户授权信息失败&quot;</span>,<br>                  <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>                  <span class="hljs-attr">duration</span>: <span class="hljs-number">3000</span>,<br>                &#125;);<br>              &#125;,<br>            &#125;);<br>            <span class="hljs-title function_">stats</span>(<span class="hljs-string">&quot;AIPaintingUploadPhotos_click_takePhoto&quot;</span>);<br>          &#125;<br>          <span class="hljs-keyword">if</span> (res.<span class="hljs-property">tapIndex</span> === <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>              <span class="hljs-attr">showModal</span>: <span class="hljs-literal">true</span>,<br>            &#125;);<br>            <span class="hljs-title function_">stats</span>(<span class="hljs-string">&quot;AIPaintingUploadPhotos_click_localAlbum&quot;</span>);<br>          &#125;<br>        &#125;,<br>        <span class="hljs-title function_">fail</span>(<span class="hljs-params">res</span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">errMsg</span>);<br>        &#125;,<br>      &#125;);<br>      <span class="hljs-title function_">stats</span>(<span class="hljs-string">&quot;AIPaintingUploadPhotos_click_photo&quot;</span>);<br>    &#125;,<br>    <span class="hljs-attr">fail</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">showPrivacyModal</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">isCheckPrivacy</span>: <span class="hljs-literal">false</span>,<br>      &#125;);<br>    &#125;,<br>  &#125;);<br>&#125;,<br></code></pre></td></tr></table></figure><p>弹起授权弹窗</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">showAuthModal</span>(<span class="hljs-params">scope, config = &#123; content: <span class="hljs-string">&quot;&quot;</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> defaultConfig = &#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>      <span class="hljs-attr">confirmText</span>: <span class="hljs-string">&quot;立即授权&quot;</span>,<br>      <span class="hljs-attr">confirmColor</span>: <span class="hljs-string">&quot;#02BB00&quot;</span>,<br>    &#125;;<br><br>    <span class="hljs-keyword">const</span> &#123; confirm, cancel &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">showModal</span>)(&#123;<br>      ...defaultConfig,<br>      ...config,<br>    &#125;);<br>    <span class="hljs-keyword">if</span> (confirm) &#123;<br>      <span class="hljs-keyword">const</span> &#123;<br>        <span class="hljs-attr">authSetting</span>: &#123; [scope]: isAuth &#125;,<br>      &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">openSetting</span>)();<br>      <span class="hljs-keyword">if</span> (!isAuth) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">showAuthModal</span>(scope, config);<br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cancel) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;未知问题&quot;</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(e);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">promisify</span>(<span class="hljs-params">fn, context</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...config</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>      config[<span class="hljs-number">0</span>] = &#123;<br>        ...config[<span class="hljs-number">0</span>],<br>        <span class="hljs-attr">success</span>: resolve,<br>        <span class="hljs-attr">fail</span>: reject,<br>      &#125;;<br>      <span class="hljs-keyword">const</span> result = fn.<span class="hljs-title function_">apply</span>(context || wx, config);<br>      <span class="hljs-keyword">if</span> (config &amp;&amp; <span class="hljs-keyword">typeof</span> config.<span class="hljs-property">result</span> === <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>        config.<span class="hljs-title function_">result</span>(result);<br>      &#125;<br>    &#125;);<br>  &#125;;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">downloadFile</span>(<span class="hljs-params">url, onProgress = () =&gt; &#123;&#125;</span>) &#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">progressCallBack</span> = (<span class="hljs-params">res</span>) =&gt; &#123;<br>    <span class="hljs-title function_">onProgress</span>(&#123; <span class="hljs-attr">loaded</span>: res.<span class="hljs-property">progress</span>, <span class="hljs-attr">total</span>: <span class="hljs-number">100</span> &#125;);<br>  &#125;;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> downloadTask = wx.<span class="hljs-title function_">downloadFile</span>(&#123;<br>      url,<br>      <span class="hljs-title function_">success</span>(<span class="hljs-params">&#123; statusCode, tempFilePath &#125;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (statusCode === <span class="hljs-number">200</span>) &#123;<br>          <span class="hljs-title function_">resolve</span>(tempFilePath);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">`下载文件(<span class="hljs-subst">$&#123;url&#125;</span>)失败, statusCode: <span class="hljs-subst">$&#123;statusCode&#125;</span>`</span>));<br>        &#125;<br>      &#125;,<br>      <span class="hljs-attr">fail</span>: reject,<br>      <span class="hljs-attr">complete</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>        downloadTask.<span class="hljs-title function_">offProgressUpdate</span>(progressCallBack);<br>      &#125;,<br>    &#125;);<br>    downloadTask.<span class="hljs-title function_">onProgressUpdate</span>(progressCallBack);<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">requestFile</span>(<span class="hljs-params"></span><br><span class="hljs-params">  url,</span><br><span class="hljs-params">  onProgress = () =&gt; &#123;&#125;,</span><br><span class="hljs-params">  responseType = <span class="hljs-string">&quot;arraybuffer&quot;</span></span><br><span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">onProgress</span>(&#123; <span class="hljs-attr">loaded</span>: <span class="hljs-number">0.2</span>, <span class="hljs-attr">total</span>: <span class="hljs-number">1</span> &#125;);<br>    wx.<span class="hljs-title function_">request</span>(&#123;<br>      url,<br>      responseType,<br>      <span class="hljs-title function_">success</span>(<span class="hljs-params">&#123; statusCode, data &#125;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (statusCode === <span class="hljs-number">200</span>) &#123;<br>          <span class="hljs-title function_">onProgress</span>(&#123; <span class="hljs-attr">loaded</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">total</span>: <span class="hljs-number">1</span> &#125;);<br>          <span class="hljs-title function_">resolve</span>(data);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">`下载文件(<span class="hljs-subst">$&#123;url&#125;</span>)失败, statusCode: <span class="hljs-subst">$&#123;statusCode&#125;</span>`</span>));<br>        &#125;<br>      &#125;,<br>      <span class="hljs-attr">fail</span>: reject,<br>    &#125;);<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="另一种调用权限"><a href="#另一种调用权限" class="headerlink" title="另一种调用权限"></a>另一种调用权限</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">askForAuth</span>(<span class="hljs-params"></span><br><span class="hljs-params">  scope,</span><br><span class="hljs-params">  config = &#123; content: <span class="hljs-string">&quot;需要授权才能继续操作&quot;</span> &#125;</span><br><span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">getSetting</span>)();<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">authSetting</span>[scope]) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br><br>  res = <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>    wx.<span class="hljs-title function_">authorize</span>(&#123;<br>      scope,<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>),<br>      <span class="hljs-attr">fail</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">false</span>),<br>    &#125;);<br>  &#125;);<br>  <span class="hljs-keyword">if</span> (res) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">showAuthModal</span>(scope, config);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">showAuthModal</span>(<span class="hljs-params">scope, config = &#123; content: <span class="hljs-string">&quot;&quot;</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> defaultConfig = &#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>      <span class="hljs-attr">confirmText</span>: <span class="hljs-string">&quot;立即授权&quot;</span>,<br>      <span class="hljs-attr">confirmColor</span>: <span class="hljs-string">&quot;#02BB00&quot;</span>,<br>    &#125;;<br><br>    <span class="hljs-keyword">const</span> &#123; confirm &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">showModal</span>)(&#123;<br>      ...defaultConfig,<br>      ...config,<br>    &#125;);<br>    <span class="hljs-keyword">if</span> (confirm) &#123;<br>      <span class="hljs-keyword">const</span> &#123;<br>        <span class="hljs-attr">authSetting</span>: &#123; [scope]: isAuth &#125;,<br>      &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">openSetting</span>)();<br>      <span class="hljs-keyword">if</span> (isAuth) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">showAuthModal</span>(scope, config);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(e);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>&#125;<br><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">promisify</span>(<span class="hljs-params">fn, context</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...config</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>      config[<span class="hljs-number">0</span>] = &#123;<br>        ...config[<span class="hljs-number">0</span>],<br>        <span class="hljs-attr">success</span>: resolve,<br>        <span class="hljs-attr">fail</span>: reject,<br>      &#125;;<br>      <span class="hljs-keyword">const</span> result = fn.<span class="hljs-title function_">apply</span>(context || wx, config);<br>      <span class="hljs-keyword">if</span> (config &amp;&amp; <span class="hljs-keyword">typeof</span> config.<span class="hljs-property">result</span> === <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>        config.<span class="hljs-title function_">result</span>(result);<br>      &#125;<br>    &#125;);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">askForAuth</span>(<span class="hljs-string">&quot;scope.bluetooth&quot;</span>, &#123;<br>     <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;需要使用“蓝牙”权限&quot;</span>,<br>   &#125;);<br>   <span class="hljs-keyword">if</span> (!res) &#123;<br>     wx.<span class="hljs-title function_">showModal</span>(&#123;<br>       <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>       <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;无法获取蓝牙权限，将退回首页&quot;</span>,<br>       <span class="hljs-attr">showCancel</span>: <span class="hljs-literal">false</span>,<br>       <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>         wx.<span class="hljs-title function_">navigateBack</span>(&#123;<br>           <span class="hljs-attr">delta</span>: <span class="hljs-number">1</span>,<br>         &#125;);<br>       &#125;,<br>     &#125;);<br>     <span class="hljs-keyword">return</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><h3 id="插件使用与调试"><a href="#插件使用与调试" class="headerlink" title="插件使用与调试"></a>插件使用与调试</h3><h4 id="本地示例小程序中使用插件"><a href="#本地示例小程序中使用插件" class="headerlink" title="本地示例小程序中使用插件"></a>本地示例小程序中使用插件</h4><p>app.json 中的使用区别</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;pages&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;pages/index/index&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;plugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;chaumet&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dev&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;provider&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;wx2829a059adc932bd&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;sitemapLocation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sitemap.json&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="其他小程序使用开发版插件"><a href="#其他小程序使用开发版插件" class="headerlink" title="其他小程序使用开发版插件"></a>其他小程序使用开发版插件</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;pages&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;pages/index/index&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;plugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;chaumet&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dev-5007f4fc31b382b21d40c1101d1bf5c2&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;provider&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;wx2829a059adc932bd&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;sitemapLocation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sitemap.json&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="其他小程序使用正式版插件"><a href="#其他小程序使用正式版插件" class="headerlink" title="其他小程序使用正式版插件"></a>其他小程序使用正式版插件</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;pages&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;pages/index/index&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;plugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;chaumet&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1.0.0&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;provider&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;wx2829a059adc932bd&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;sitemapLocation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sitemap.json&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="获取一个-node-节点"><a href="#获取一个-node-节点" class="headerlink" title="获取一个 node 节点"></a>获取一个 node 节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createSelectorQuery</span>()<br>    .<span class="hljs-title function_">select</span>(<span class="hljs-string">&quot;.canvas&quot;</span>)<br>    .<span class="hljs-title function_">fields</span>(&#123;<br>      <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">size</span>: <span class="hljs-literal">true</span>,<br>    &#125;)<br>    .<span class="hljs-title function_">exec</span>(<span class="hljs-function">(<span class="hljs-params">els</span>) =&gt;</span> <span class="hljs-title function_">resolve</span>(els[<span class="hljs-number">0</span>]));<br>&#125;);<br><span class="hljs-keyword">const</span> canvas = res.<span class="hljs-property">node</span>;<br></code></pre></td></tr></table></figure><h3 id="使用canvas下载网络图片"><a href="#使用canvas下载网络图片" class="headerlink" title="使用canvas下载网络图片"></a>使用canvas下载网络图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;canvas-container&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span></span><br><span class="hljs-tag">    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;2d&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offsetCanvas&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:&#123;&#123;canvasPixelWidth&#125;&#125;px;height:&#123;&#123;canvasPixelHeight&#125;&#125;px&quot;</span></span><br><span class="hljs-tag">  /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.canvas-container</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">9999px</span>;<br>  <span class="hljs-attribute">left</span>: -<span class="hljs-number">9999px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span></span><br><span class="hljs-comment"> * 组件使用：</span><br><span class="hljs-comment"> * 当外部传入url不为空字符串时，则会触发saveImageByCanvas从而保存网路图片到相册，</span><br><span class="hljs-comment"> * 组件会在保存相册成功后，抛出finish事件。</span><br><span class="hljs-comment"> * -----------</span><br><span class="hljs-comment"> * 可以通过exportType字段设定导出图片模式：</span><br><span class="hljs-comment"> * origin模式：按照图片原始比例保存到相册；</span><br><span class="hljs-comment"> * custom模式：可以指定width和height，保存到相册的图片根据指定宽高来居中裁剪。</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-title class_">Component</span>(&#123;<br>  <span class="hljs-attr">properties</span>: &#123;<br>    <span class="hljs-attr">url</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    &#125;,<br>    <span class="hljs-comment">// 组件传递过来的宽高如果大于手机屏幕本身的宽高，</span><br>    <span class="hljs-comment">// 会被等比例缩放至屏幕相近的大小。</span><br>    <span class="hljs-attr">width</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span>,<br>    &#125;,<br>    <span class="hljs-attr">height</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span>,<br>    &#125;,<br>    <span class="hljs-comment">// origin:根据图片的原始尺寸导出(默认值)</span><br>    <span class="hljs-comment">// custom:根据properties.width和properties.height的值导出</span><br>    <span class="hljs-attr">exportType</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;origin&quot;</span>,<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">ctx</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">canvas</span>: <span class="hljs-literal">null</span>,<br><br>    <span class="hljs-attr">screenWidth</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span>,<br>    <span class="hljs-attr">screenHeight</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span>,<br><br>    <span class="hljs-attr">canvasPixelWidth</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span>,<br>    <span class="hljs-attr">canvasPixelHeight</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span>,<br>  &#125;,<br><br>  <span class="hljs-attr">observers</span>: &#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">u</span>) &#123;<br>      <span class="hljs-keyword">if</span> (u) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">saveImageByCanvas</span>(u);<br>      &#125;<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-keyword">async</span> <span class="hljs-title function_">saveImageByCanvas</span>(<span class="hljs-params">url</span>) &#123;<br>      <span class="hljs-keyword">const</span> &#123; path, width, height &#125; = <span class="hljs-keyword">await</span> wx.<span class="hljs-title function_">getImageInfo</span>(&#123;<br>        <span class="hljs-attr">src</span>: url,<br>      &#125;);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setCanvasSize</span>(width, height);<br><br>      <span class="hljs-keyword">const</span> nodeList = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getNode</span>(<span class="hljs-string">&quot;#offsetCanvas&quot;</span>);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">makeCanvasDisplayBetter</span>(nodeList[<span class="hljs-number">0</span>]);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawImageThenExport</span>(path);<br>    &#125;,<br><br>    <span class="hljs-title function_">setCanvasSize</span>(<span class="hljs-params">width, height</span>) &#123;<br>      <span class="hljs-keyword">let</span> w =<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">exportType</span> === <span class="hljs-string">&quot;origin&quot;</span> ? width : <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">width</span>;<br>      <span class="hljs-keyword">let</span> h =<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">exportType</span> === <span class="hljs-string">&quot;origin&quot;</span><br>          ? height<br>          : <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">height</span>;<br><br>      <span class="hljs-keyword">const</span> &#123; shortW, shortH &#125; = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcCanvasSize</span>(w, h);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">canvasPixelWidth</span>: shortW,<br>        <span class="hljs-attr">canvasPixelHeight</span>: shortH,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">calcCanvasSize</span>(<span class="hljs-params">w, h</span>) &#123;<br>      <span class="hljs-comment">// 如果canvas上的style内联width/height非常大，那么，真机上绘制图片时，可能会白屏</span><br>      <span class="hljs-comment">// https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html</span><br>      <span class="hljs-comment">// 简单测试了下，大概安全宽度和高度是：900*1350，</span><br>      <span class="hljs-comment">// 即：如果canvas的内联样式宽度在900以内，高度在1350以内，真机可以正常渲染</span><br>      <span class="hljs-comment">// 此处为了兼容性，函数会直接将canvas的内联宽高缩放至屏幕大小</span><br>      <span class="hljs-keyword">if</span> (w &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span> || h &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>) &#123;<br>        <span class="hljs-keyword">let</span> screenRatio = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>;<br>        <span class="hljs-keyword">let</span> selfRatio = w / h;<br>        <span class="hljs-keyword">if</span> (screenRatio &gt; selfRatio) &#123;<br>          w = (w * <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>) / h;<br>          h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          h = (h * <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span>) / w;<br>          w = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">shortW</span>: w, <span class="hljs-attr">shortH</span>: h &#125;;<br>    &#125;,<br><br>    <span class="hljs-title function_">getNode</span>(<span class="hljs-params">id</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">res, rej</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> query = wx.<span class="hljs-title function_">createSelectorQuery</span>().<span class="hljs-title function_">in</span>(<span class="hljs-variable language_">this</span>);<br>        query<br>          .<span class="hljs-title function_">select</span>(id)<br>          .<span class="hljs-title function_">fields</span>(&#123; <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">size</span>: <span class="hljs-literal">true</span> &#125;)<br>          .<span class="hljs-title function_">exec</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (e[<span class="hljs-number">0</span>]) &#123;<br>              <span class="hljs-title function_">res</span>(e);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              <span class="hljs-title function_">rej</span>(e);<br>            &#125;<br>          &#125;);<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">makeCanvasDisplayBetter</span>(<span class="hljs-params">nodeInfo</span>) &#123;<br>      <span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">node</span>: canvas &#125; = nodeInfo;<br>      <span class="hljs-keyword">const</span> &#123; pixelRatio &#125; = wx.<span class="hljs-title function_">getSystemInfoSync</span>();<br>      <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>      <span class="hljs-comment">// 此处将canvas的尺寸扩大（3倍）,缩放扩大（3倍），</span><br>      <span class="hljs-comment">// 并且在style内联样式中又指定canvas的宽（1倍）和高（1倍），来实现更清晰的canvas显示效果。</span><br>      <span class="hljs-comment">// 原理：生成3倍大小canvas，通过css缩放到1倍宽高的dom中显示。</span><br>      <span class="hljs-comment">// 相当于将900*900的图片，展示到一个300*300大小的dom框中，清晰度会提高。</span><br>      <span class="hljs-comment">// 微信小程序会显示canvas的最大尺寸为：4096*4096，超出会报错</span><br>      <span class="hljs-keyword">const</span> dpr = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcDPR</span>(pixelRatio);<br>      canvas.<span class="hljs-property">width</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> * dpr;<br>      canvas.<span class="hljs-property">height</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span> * dpr;<br>      ctx.<span class="hljs-title function_">scale</span>(dpr, dpr);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        canvas,<br>        ctx,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">calcDPR</span>(<span class="hljs-params">pixelRatio</span>) &#123;<br>      <span class="hljs-keyword">let</span> dpr = pixelRatio;<br>      <span class="hljs-keyword">if</span> (<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> * pixelRatio &gt; <span class="hljs-number">4096</span> ||<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span> * pixelRatio &gt; <span class="hljs-number">4096</span><br>      ) &#123;<br>        <span class="hljs-keyword">const</span> shortDPR = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcDPR</span>(pixelRatio - <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">return</span> shortDPR;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> dpr;<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-title function_">drawImageThenExport</span>(<span class="hljs-params">path</span>) &#123;<br>      <span class="hljs-keyword">let</span> imgObj = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvas</span>.<span class="hljs-title function_">createImage</span>();<br>      imgObj.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (imgObj.<span class="hljs-property">complete</span>) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawImage</span>(imgObj);<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">saveFileToAlbum</span>();<br>        &#125;<br>      &#125;;<br>      imgObj.<span class="hljs-property">src</span> = path;<br>    &#125;,<br><br>    <span class="hljs-title function_">drawImage</span>(<span class="hljs-params">imgObj</span>) &#123;<br>      <span class="hljs-keyword">const</span> &#123; sx, sy, sWidth, sHeight &#125; = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcDrawDistance</span>(imgObj);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">drawImage</span>(<br>        imgObj,<br>        sx,<br>        sy,<br>        sWidth,<br>        sHeight,<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span>, <span class="hljs-comment">// 这个值会根据比例自动缩放，所以不需要乘以dpr</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span><br>      );<br>    &#125;,<br><br>    <span class="hljs-title function_">calcDrawDistance</span>(<span class="hljs-params">imgObj</span>) &#123;<br>      <span class="hljs-keyword">let</span> sWidth = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">let</span> sHeight = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">let</span> sx = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">let</span> sy = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">let</span> imageRatio = imgObj.<span class="hljs-property">width</span> / imgObj.<span class="hljs-property">height</span>;<br>      <span class="hljs-keyword">let</span> screenRatio =<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span>;<br>      <span class="hljs-keyword">if</span> (imageRatio &gt;= screenRatio) &#123;<br>        sWidth =<br>          (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> * imgObj.<span class="hljs-property">height</span>) /<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span>;<br>        sHeight = imgObj.<span class="hljs-property">height</span>;<br>        sx = (imgObj.<span class="hljs-property">width</span> - sWidth) / <span class="hljs-number">2</span>;<br>        sy = <span class="hljs-number">0</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        sWidth = imgObj.<span class="hljs-property">width</span>;<br>        sHeight =<br>          (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span> * imgObj.<span class="hljs-property">width</span>) /<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span>;<br>        sx = <span class="hljs-number">0</span>;<br>        sy = (imgObj.<span class="hljs-property">height</span> - sHeight) / <span class="hljs-number">2</span>;<br>      &#125;<br>      <span class="hljs-keyword">return</span> &#123;<br>        sx,<br>        sy,<br>        sWidth,<br>        sHeight,<br>      &#125;;<br>    &#125;,<br><br>    <span class="hljs-title function_">saveFileToAlbum</span>(<span class="hljs-params"></span>) &#123;<br>      wx.<span class="hljs-title function_">canvasToTempFilePath</span>(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">canvas</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvas</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>          wx.<span class="hljs-title function_">saveImageToPhotosAlbum</span>(&#123;<br>            <span class="hljs-attr">filePath</span>: res.<span class="hljs-property">tempFilePath</span>,<br>            <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&quot;finish&quot;</span>);<br>            &#125;,<br>          &#125;);<br>        &#125;,<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>&#125;);<br><br></code></pre></td></tr></table></figure><h3 id="使用canvas生成海报"><a href="#使用canvas生成海报" class="headerlink" title="使用canvas生成海报"></a>使用canvas生成海报</h3><p>外部使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">generateImageByCanvas</span>(<span class="hljs-string">&quot;generate&quot;</span>);<br><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">generateImageByCanvas</span>(<span class="hljs-string">&quot;save&quot;</span>);<br><br><span class="hljs-title function_">generateImageByCanvas</span>(<span class="hljs-params">action</span>) &#123;<br>      <span class="hljs-keyword">let</span> updateList = [<br>        &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;image&quot;</span>,<br>          <span class="hljs-attr">url</span>: <span class="hljs-title function_">getStaticUrl</span>(<span class="hljs-string">&quot;qr-code/test_bc.png&quot;</span>),<br>          <span class="hljs-attr">dx</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">dy</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">dWidth</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasWidth</span>,<br>          <span class="hljs-attr">dHeight</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasHeight</span>,<br>          <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;aspectFill&quot;</span>,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;image&quot;</span>,<br>          <span class="hljs-attr">url</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">currentCollectCardDetail</span>.<span class="hljs-property">url</span>,<br>          <span class="hljs-attr">dy</span>: <span class="hljs-number">73</span>,<br>          <span class="hljs-attr">dWidth</span>: <span class="hljs-number">175.2</span>,<br>          <span class="hljs-attr">dHeight</span>: <span class="hljs-number">204</span>,<br>          <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;screenCenter&quot;</span>,<br>          <span class="hljs-attr">borderRadius</span>: <span class="hljs-number">10</span>,<br>          <span class="hljs-attr">borderColor</span>: <span class="hljs-string">&quot;#E0C069&quot;</span>,<br>          <span class="hljs-attr">objectFit</span>: <span class="hljs-string">&quot;aspectFill&quot;</span>,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>          <span class="hljs-attr">content</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">currentCollectCardDetail</span>.<span class="hljs-property">name</span>,<br>          <span class="hljs-attr">dy</span>: <span class="hljs-number">300</span>,<br>          <span class="hljs-attr">font</span>: <span class="hljs-string">&quot;16px&quot;</span>,<br>          <span class="hljs-attr">fillStyle</span>: <span class="hljs-string">&quot;#897160&quot;</span>,<br>          <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;screenCenter&quot;</span>,<br>          <span class="hljs-attr">letterSpacing</span>: <span class="hljs-number">1</span>,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;multilineText&quot;</span>,<br>          <span class="hljs-attr">content</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">currentCollectCardDetail</span>.<span class="hljs-property">description</span>,<br>          <span class="hljs-attr">dx</span>: <span class="hljs-number">44</span>,<br>          <span class="hljs-attr">dy</span>: <span class="hljs-number">320</span>,<br>          <span class="hljs-attr">font</span>: <span class="hljs-string">&quot;12px&quot;</span>,<br>          <span class="hljs-attr">fillStyle</span>: <span class="hljs-string">&quot;#C2A272&quot;</span>,<br>          <span class="hljs-attr">line</span>: <span class="hljs-number">4</span>,<br>          <span class="hljs-attr">lineHeight</span>: <span class="hljs-number">18</span>,<br>          <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">245</span>,<br>          <span class="hljs-attr">letterSpacing</span>: <span class="hljs-number">0.5</span>,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;image&quot;</span>,<br>          <span class="hljs-attr">url</span>: <span class="hljs-title function_">getStaticUrl</span>(<span class="hljs-string">&quot;qr-code/mini_code_circle.png&quot;</span>),<br>          <span class="hljs-attr">dy</span>: <span class="hljs-number">400</span>,<br>          <span class="hljs-attr">dWidth</span>: <span class="hljs-number">70</span>,<br>          <span class="hljs-attr">dHeight</span>: <span class="hljs-number">70</span>,<br>          <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;screenCenter&quot;</span>,<br>        &#125;,<br>        &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>          <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;扫码开启 奇幻之旅&quot;</span>,<br>          <span class="hljs-attr">dy</span>: <span class="hljs-number">484</span>,<br>          <span class="hljs-attr">font</span>: <span class="hljs-string">&quot;11px&quot;</span>,<br>          <span class="hljs-attr">fillStyle</span>: <span class="hljs-string">&quot;#897160&quot;</span>,<br>          <span class="hljs-attr">letterSpacing</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;screenCenter&quot;</span>,<br>        &#125;,<br>      ];<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">saveDomOptions</span>: updateList,<br>        <span class="hljs-attr">action</span>: action,<br>      &#125;);<br>    &#125;,<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span></span><br><span class="hljs-comment"> * 组件使用：</span><br><span class="hljs-comment"> * 组件会在保存相册成功后，抛出finish事件。</span><br><span class="hljs-comment"> * -----------</span><br><span class="hljs-comment"> * options的配置项：</span><br><span class="hljs-comment"> *   type: &quot;multilineText/text/image&quot;, // 绘制类型，支持字符和图片</span><br><span class="hljs-comment"> *   url:&#x27;&#x27;, // 图片地址</span><br><span class="hljs-comment"> *   content: &#x27;&#x27;, // 文字内容</span><br><span class="hljs-comment"> *   dx: 44, // 距离左边距</span><br><span class="hljs-comment"> *   dy: 300, // 距离上边距</span><br><span class="hljs-comment"> *   dWidth: 200, // 绘制的图片宽度</span><br><span class="hljs-comment"> *   dHeight: 200, // 绘制的图片高度</span><br><span class="hljs-comment"> *   font: &quot;12px&quot;, // 字体大小</span><br><span class="hljs-comment"> *   fillStyle: &quot;#C2A272&quot;, //字体颜色</span><br><span class="hljs-comment"> *   textAlign:&#x27;&#x27;, // 字体位置</span><br><span class="hljs-comment"> *   textBaseline:&quot;&quot;, // 字体基线</span><br><span class="hljs-comment"> *   line: 4, // 多行文字行数</span><br><span class="hljs-comment"> *   lineHeight:20, // 多行文字行高</span><br><span class="hljs-comment"> *   maxWidth: 245, // 文字绘制的最大宽度</span><br><span class="hljs-comment"> *   letterSpacing: 0.5, // 文字间距</span><br><span class="hljs-comment"> *   mode: &quot;screenCenter&quot;, // screenCenter：文字屏幕居中</span><br><span class="hljs-comment"> *   objectFit:&#x27;aspectFill&#x27;, // aspectFill：图片适配裁剪模式；</span><br><span class="hljs-comment"> *   borderRadius: 10, // 圆角</span><br><span class="hljs-comment"> *   borderColor: &quot;#E0C069&quot;, // 边框颜色</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-title class_">Component</span>(&#123;<br>  <span class="hljs-attr">properties</span>: &#123;<br>    <span class="hljs-attr">options</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Array</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-function">() =&gt;</span> &#123;&#125;,<br>    &#125;,<br>    <span class="hljs-comment">// show: &#123;</span><br>    <span class="hljs-comment">//   type: Boolean,</span><br>    <span class="hljs-comment">//   value: false,</span><br>    <span class="hljs-comment">// &#125;,</span><br>    <span class="hljs-attr">width</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span>,<br>    &#125;,<br>    <span class="hljs-attr">height</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span>,<br>    &#125;,<br>    <span class="hljs-attr">action</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;save&quot;</span>,<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">ctx</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">canvas</span>: <span class="hljs-literal">null</span>,<br><br>    <span class="hljs-comment">// 手机屏幕本身的宽和高</span><br>    <span class="hljs-attr">screenWidth</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span>,<br>    <span class="hljs-attr">screenHeight</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span>,<br><br>    <span class="hljs-comment">// 用户通过properties.width和height定义的width和height</span><br>    <span class="hljs-attr">canvasPixelWidth</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span>,<br>    <span class="hljs-attr">canvasPixelHeight</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span>,<br><br>    <span class="hljs-attr">pixelRatio</span>: wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">pixelRatio</span>,<br>  &#125;,<br><br>  <span class="hljs-attr">observers</span>: &#123;<br>    <span class="hljs-attr">options</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;n: &quot;</span>, n);<br>      <span class="hljs-keyword">if</span> (n.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>,<br>        &#125;);<br>        wx.<span class="hljs-title function_">showLoading</span>(&#123;<br>          <span class="hljs-attr">title</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">action</span> === <span class="hljs-string">&quot;save&quot;</span> ? <span class="hljs-string">&quot;保存中&quot;</span> : <span class="hljs-string">&quot;生成中&quot;</span>,<br>          <span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span>,<br>        &#125;);<br>        wx.<span class="hljs-title function_">nextTick</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">saveImageByCanvas</span>();<br>        &#125;);<br>      &#125;<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-keyword">async</span> <span class="hljs-title function_">saveImageByCanvas</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">width</span> || !<span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">height</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;%c----需要设定海报的宽高----&quot;</span>, <span class="hljs-string">&quot;color: yellow;&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setCanvasSize</span>();<br><br>      <span class="hljs-keyword">const</span> nodeList = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getNode</span>(<span class="hljs-string">&quot;#saveDomOffsetCanvas&quot;</span>);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">makeCanvasDisplayBetter</span>(nodeList[<span class="hljs-number">0</span>]);<br><br>      <span class="hljs-comment">// 绘制前，先清空一次</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clearCanvas</span>();<br><br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">options</span>.<span class="hljs-property">length</span>; index++) &#123;<br>        <span class="hljs-keyword">let</span> element = <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">options</span>[index];<br>        <span class="hljs-comment">// 绘制图片</span><br>        <span class="hljs-keyword">if</span> (element.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;image&quot;</span>) &#123;<br>          <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawImageByCreateImage</span>(element);<br>        &#125;<br>        <span class="hljs-comment">// 绘制单行字</span><br>        <span class="hljs-keyword">if</span> (element.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;text&quot;</span>) &#123;<br>          <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">fillSingleTextByCanvas</span>(element);<br>        &#125;<br>        <span class="hljs-comment">// 绘制多行字</span><br>        <span class="hljs-keyword">if</span> (element.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;multilineText&quot;</span>) &#123;<br>          <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">fillMultilineTextByCanvas</span>(element);<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">action</span> === <span class="hljs-string">&quot;save&quot;</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">saveFileToAlbum</span>();<br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">action</span> === <span class="hljs-string">&quot;generate&quot;</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">justGenerateImageAndReturnPath</span>();<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-comment">// ----------------------渲染函数------------------------</span><br><br>    <span class="hljs-title function_">fillMultilineTextByCanvas</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-comment">// eslint-disable-next-line no-unused-vars</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">res, rej</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">font</span> = item.<span class="hljs-property">font</span> ? item.<span class="hljs-property">font</span> + <span class="hljs-string">&quot; Arial&quot;</span> : <span class="hljs-string">&quot;22px Arial&quot;</span>;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">fillStyle</span> = item.<span class="hljs-property">fillStyle</span> || <span class="hljs-string">&quot;#C2A272&quot;</span>;<br>        <span class="hljs-keyword">if</span> (item.<span class="hljs-property">line</span>) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawMultilineText</span>(item);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;%c----需要设定多行文字行数----&quot;</span>, <span class="hljs-string">&quot;color: yellow;&quot;</span>);<br>        &#125;<br>        <span class="hljs-title function_">res</span>(<span class="hljs-literal">true</span>);<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">fillSingleTextByCanvas</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-comment">// eslint-disable-next-line no-unused-vars</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">res, rej</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setFontStyle</span>(item);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawText</span>(item);<br>        <span class="hljs-title function_">res</span>(<span class="hljs-literal">true</span>);<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">drawImageByCreateImage</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-comment">// eslint-disable-next-line no-unused-vars</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">res, rej</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> imgObj = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvas</span>.<span class="hljs-title function_">createImage</span>();<br>        imgObj.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-keyword">if</span> (imgObj.<span class="hljs-property">complete</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawImage</span>(imgObj, item);<br>            <span class="hljs-title function_">res</span>(imgObj);<br>          &#125;<br>        &#125;;<br>        imgObj.<span class="hljs-property">src</span> = item.<span class="hljs-property">url</span>;<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">drawImage</span>(<span class="hljs-params">imgObj, item</span>) &#123;<br>      <span class="hljs-comment">// 如果绘制的图片是屏幕居中，则需要手动赋值dx</span><br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">mode</span> === <span class="hljs-string">&quot;screenCenter&quot;</span>) &#123;<br>        <span class="hljs-keyword">let</span> dx = (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> - item.<span class="hljs-property">dWidth</span>) / <span class="hljs-number">2</span>;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(item, &#123;<br>          <span class="hljs-attr">dx</span>: dx,<br>        &#125;);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">mode</span> === <span class="hljs-literal">undefined</span> &amp;&amp; item.<span class="hljs-property">dx</span> === <span class="hljs-literal">undefined</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>          <span class="hljs-string">&quot;%c----不是屏幕居中（screenCenter）情况下，需要设置dx属性----&quot;</span>,<br>          <span class="hljs-string">&quot;color: yellow;&quot;</span><br>        );<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`%c---<span class="hljs-subst">$&#123;item.url&#125;</span>`</span>, <span class="hljs-string">&quot;color: yellow;&quot;</span>);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">borderRadius</span>) &#123;<br>        <span class="hljs-comment">// 如果有边框，需要先绘制圆角图片，再绘制圆角矩形</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawRadiusRectImage</span>(imgObj, item);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBorder</span>(item);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcThenDrawImage</span>(imgObj, item);<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-comment">// ------------------工具函数-----------------</span><br>    <span class="hljs-title function_">setFontStyle</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">font</span> = item.<span class="hljs-property">font</span> ? item.<span class="hljs-property">font</span> + <span class="hljs-string">&quot; Arial&quot;</span> : <span class="hljs-string">&quot;22px Arial&quot;</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">fillStyle</span> = item.<span class="hljs-property">fillStyle</span> || <span class="hljs-string">&quot;#C2A272&quot;</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">textAlign</span> = item.<span class="hljs-property">textAlign</span> || <span class="hljs-string">&quot;start&quot;</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">textBaseline</span> = item.<span class="hljs-property">textBaseline</span> || <span class="hljs-string">&quot;middle&quot;</span>;<br>    &#125;,<br><br>    <span class="hljs-title function_">drawMultilineText</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getWrapText</span>(item).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 多行文字绘制，需要固定为 start和top</span><br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(item, &#123;<br>          <span class="hljs-attr">textAlign</span>: <span class="hljs-string">&quot;start&quot;</span>,<br>          <span class="hljs-attr">textBaseline</span>: <span class="hljs-string">&quot;top&quot;</span>,<br>        &#125;);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setFontStyle</span>(item);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawText</span>(e);<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">drawText</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">letterSpacing</span> &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">// 如果有letterSpacing字间距，则通过逐字形式来渲染</span><br>        <span class="hljs-keyword">let</span> totalWidth = item.<span class="hljs-property">dx</span>; <span class="hljs-comment">// 渲染字符的起始dx位置</span><br>        <span class="hljs-keyword">if</span> (!item.<span class="hljs-property">dx</span>) &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>            <span class="hljs-string">&quot;%c----如果没有传入dx字段，则会默认屏幕居中----&quot;</span>,<br>            <span class="hljs-string">&quot;color: yellow;&quot;</span><br>          );<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`%c<span class="hljs-subst">$&#123;item.content&#125;</span>-未设置dx的值`</span>, <span class="hljs-string">&quot;color: yellow;&quot;</span>);<br>          <span class="hljs-keyword">let</span> strWidth = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">measureText</span>(item.<span class="hljs-property">content</span>).<span class="hljs-property">width</span>;<br>          totalWidth =<br>            (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> -<br>              strWidth -<br>              item.<span class="hljs-property">letterSpacing</span> * (item.<span class="hljs-property">content</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)) /<br>            <span class="hljs-number">2</span>;<br>        &#125;<br>        <span class="hljs-comment">// 根据letterSpacing逐字渲染出来</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; item.<span class="hljs-property">content</span>.<span class="hljs-property">length</span>; i++) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">fillText</span>(item.<span class="hljs-property">content</span>[i], totalWidth, item.<span class="hljs-property">dy</span>);<br>          totalWidth +=<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">measureText</span>(item.<span class="hljs-property">content</span>[i]).<span class="hljs-property">width</span> +<br>            item.<span class="hljs-property">letterSpacing</span>;<br>        &#125;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 如果没有letterSpacing，则直接fillText形式渲染，节省性能</span><br>        <span class="hljs-keyword">if</span> (item.<span class="hljs-property">mode</span> === <span class="hljs-string">&quot;screenCenter&quot;</span>) &#123;<br>          <span class="hljs-comment">// 文字相对于屏幕居中</span><br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">textAlign</span> = <span class="hljs-string">&quot;center&quot;</span>;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">fillText</span>(<br>            item.<span class="hljs-property">content</span>,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> / <span class="hljs-number">2</span>,<br>            item.<span class="hljs-property">dy</span><br>          );<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">fillText</span>(item.<span class="hljs-property">content</span>, item.<span class="hljs-property">dx</span>, item.<span class="hljs-property">dy</span>);<br>        &#125;<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-title function_">getWrapText</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-keyword">let</span> lineHeight = item.<span class="hljs-property">lineHeight</span> || <span class="hljs-number">20</span>;<br>      <span class="hljs-keyword">let</span> letterSpacing = item.<span class="hljs-property">letterSpacing</span> || <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">let</span> txtList = [];<br>      <span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;&quot;</span>;<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, len = item.<span class="hljs-property">content</span>.<span class="hljs-property">length</span>; i &lt; len; i++) &#123;<br>        str += item.<span class="hljs-property">content</span>.<span class="hljs-title function_">charAt</span>(i);<br>        <span class="hljs-keyword">if</span> (<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">measureText</span>(str).<span class="hljs-property">width</span> +<br>            letterSpacing * (str.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) &gt;<br>          item.<span class="hljs-property">maxWidth</span><br>        ) &#123;<br>          <span class="hljs-keyword">let</span> textInfo = &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>            <span class="hljs-attr">font</span>: item.<span class="hljs-property">font</span>,<br>            <span class="hljs-attr">fillStyle</span>: item.<span class="hljs-property">fillStyle</span>,<br>            <span class="hljs-attr">content</span>: str.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, str.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>),<br>            <span class="hljs-attr">dx</span>: item.<span class="hljs-property">dx</span>,<br>            <span class="hljs-attr">dy</span>: item.<span class="hljs-property">dy</span> + lineHeight * txtList.<span class="hljs-property">length</span>,<br>            <span class="hljs-attr">mode</span>: item.<span class="hljs-property">mode</span> || <span class="hljs-string">&quot;&quot;</span>,<br>            <span class="hljs-attr">maxWidth</span>: item.<span class="hljs-property">maxWidth</span>,<br>            <span class="hljs-attr">letterSpacing</span>: item.<span class="hljs-property">letterSpacing</span>,<br>          &#125;;<br>          txtList.<span class="hljs-title function_">push</span>(textInfo);<br>          str = <span class="hljs-string">&quot;&quot;</span>;<br>          i--;<br>        &#125;<br>      &#125;<br>      txtList.<span class="hljs-title function_">push</span>(&#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">font</span>: item.<span class="hljs-property">font</span>,<br>        <span class="hljs-attr">fillStyle</span>: item.<span class="hljs-property">fillStyle</span>,<br>        <span class="hljs-attr">content</span>: str,<br>        <span class="hljs-attr">dx</span>: item.<span class="hljs-property">dx</span>,<br>        <span class="hljs-attr">dy</span>: item.<span class="hljs-property">dy</span> + lineHeight * txtList.<span class="hljs-property">length</span>,<br>        <span class="hljs-attr">mode</span>: item.<span class="hljs-property">mode</span> || <span class="hljs-string">&quot;&quot;</span>,<br>      &#125;);<br>      <span class="hljs-keyword">if</span> (txtList.<span class="hljs-property">length</span> &gt;= item.<span class="hljs-property">line</span>) &#123;<br>        <span class="hljs-keyword">let</span> index = item.<span class="hljs-property">line</span> - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">let</span> lastTextItem = txtList[index][<span class="hljs-string">&quot;content&quot;</span>];<br>        <span class="hljs-keyword">let</span> penultimateStr = lastTextItem[lastTextItem.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>];<br>        <span class="hljs-keyword">let</span> curEndIndex = -<span class="hljs-number">1</span>;<br>        <span class="hljs-comment">// 如果倒数第二个字刚好也是标点符号，则直接将其去掉</span><br>        <span class="hljs-keyword">if</span> (<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">patchZhMark</span>(penultimateStr) ||<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">patchEnMark</span>(penultimateStr)<br>        ) &#123;<br>          curEndIndex = -<span class="hljs-number">2</span>;<br>        &#125;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(txtList[index], &#123;<br>          <span class="hljs-attr">content</span>: lastTextItem.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, curEndIndex) + <span class="hljs-string">&quot;...&quot;</span>,<br>        &#125;);<br>      &#125;<br>      <span class="hljs-keyword">let</span> finalTxtList = txtList.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, item.<span class="hljs-property">line</span>);<br>      <span class="hljs-keyword">return</span> finalTxtList;<br>    &#125;,<br><br>    <span class="hljs-title function_">drawRadiusRectImage</span>(<span class="hljs-params">imgObj, item</span>) &#123;<br>      <span class="hljs-comment">// 绘制圆角图片原理：</span><br>      <span class="hljs-comment">// 1.先保存当前画面，</span><br>      <span class="hljs-comment">// 2.裁剪出圆角矩形画布，</span><br>      <span class="hljs-comment">// 3.绘制图片，</span><br>      <span class="hljs-comment">// 4.恢复裁剪之前的画面</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">save</span>(); <span class="hljs-comment">// 保存</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawRadiusRect</span>(<br>        item.<span class="hljs-property">dx</span>,<br>        item.<span class="hljs-property">dy</span>,<br>        item.<span class="hljs-property">dWidth</span>,<br>        item.<span class="hljs-property">dHeight</span>,<br>        item.<span class="hljs-property">borderRadius</span><br>      ); <span class="hljs-comment">// 画出圆角画布</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">clip</span>(); <span class="hljs-comment">// 裁剪</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcThenDrawImage</span>(imgObj, item); <span class="hljs-comment">// 绘图</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">restore</span>(); <span class="hljs-comment">// 恢复裁剪前的画面</span><br>    &#125;,<br><br>    <span class="hljs-title function_">drawBorder</span>(<span class="hljs-params">item</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">strokeStyle</span> = item.<span class="hljs-property">borderColor</span> || <span class="hljs-string">&quot;#E0C069&quot;</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawRadiusRect</span>(<br>        item.<span class="hljs-property">dx</span>,<br>        item.<span class="hljs-property">dy</span>,<br>        item.<span class="hljs-property">dWidth</span>,<br>        item.<span class="hljs-property">dHeight</span>,<br>        item.<span class="hljs-property">borderRadius</span><br>      );<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">stroke</span>();<br>    &#125;,<br><br>    <span class="hljs-title function_">calcThenDrawImage</span>(<span class="hljs-params">imgObj, item</span>) &#123;<br>      <span class="hljs-keyword">const</span> &#123; sx, sy, sWidth, sHeight &#125; = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcDrawDistance</span>(imgObj, item);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">drawImage</span>(<br>        imgObj,<br>        sx,<br>        sy,<br>        sWidth,<br>        sHeight,<br>        item.<span class="hljs-property">dx</span>,<br>        item.<span class="hljs-property">dy</span>,<br>        item.<span class="hljs-property">dWidth</span>,<br>        item.<span class="hljs-property">dHeight</span><br>      );<br>    &#125;,<br><br>    <span class="hljs-title function_">calcDrawDistance</span>(<span class="hljs-params">imgObj, item</span>) &#123;<br>      <span class="hljs-keyword">let</span> sx = <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">let</span> sy = <span class="hljs-number">0</span>;<br>      <span class="hljs-comment">//  通常情况下，我们传入的图片宽高就是需要绘制到canvas上的宽高</span><br>      <span class="hljs-keyword">let</span> sWidth = item.<span class="hljs-property">dWidth</span>;<br>      <span class="hljs-keyword">let</span> sHeight = item.<span class="hljs-property">dHeight</span>;<br><br>      <span class="hljs-keyword">if</span> (item.<span class="hljs-property">objectFit</span> === <span class="hljs-string">&quot;aspectFill&quot;</span>) &#123;<br>        <span class="hljs-comment">// 裁剪模式一般是图片本身大小和需要显示出来的大小不匹配，需要裁剪一部分，</span><br>        <span class="hljs-keyword">let</span> imageRatio = imgObj.<span class="hljs-property">width</span> / imgObj.<span class="hljs-property">height</span>;<br>        <span class="hljs-keyword">let</span> screenRatio = item.<span class="hljs-property">dWidth</span> / item.<span class="hljs-property">dHeight</span>;<br>        <span class="hljs-keyword">if</span> (imageRatio &gt;= screenRatio) &#123;<br>          sWidth = (item.<span class="hljs-property">dWidth</span> * imgObj.<span class="hljs-property">height</span>) / item.<span class="hljs-property">dHeight</span>;<br>          sHeight = imgObj.<span class="hljs-property">height</span>;<br>          sx = (imgObj.<span class="hljs-property">width</span> - sWidth) / <span class="hljs-number">2</span>;<br>          sy = <span class="hljs-number">0</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          sWidth = imgObj.<span class="hljs-property">width</span>;<br>          sHeight = (item.<span class="hljs-property">dHeight</span> * imgObj.<span class="hljs-property">width</span>) / item.<span class="hljs-property">dWidth</span>;<br>          sx = <span class="hljs-number">0</span>;<br>          sy = (imgObj.<span class="hljs-property">height</span> - sHeight) / <span class="hljs-number">2</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> &#123;<br>          sx,<br>          sy,<br>          sWidth,<br>          sHeight,<br>        &#125;;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        sWidth = imgObj.<span class="hljs-property">width</span>;<br>        sHeight = imgObj.<span class="hljs-property">height</span>;<br>        <span class="hljs-keyword">return</span> &#123;<br>          sx,<br>          sy,<br>          sWidth,<br>          sHeight,<br>        &#125;;<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-title function_">setCanvasSize</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">canvasPixelWidth</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">width</span>,<br>        <span class="hljs-attr">canvasPixelHeight</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>.<span class="hljs-property">height</span>,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">calcCanvasSize</span>(<span class="hljs-params">w, h</span>) &#123;<br>      <span class="hljs-comment">// 如果canvas上的style内联width/height非常大，那么，真机上绘制图片时，可能会白屏</span><br>      <span class="hljs-comment">// https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html</span><br>      <span class="hljs-comment">// 渲染高度限制：IOS实际像素 &lt; 4096，实际高度需 &lt; 4096/3 = 1356</span><br>      <span class="hljs-comment">// 即：如果canvas的内联样式宽/高度在1350以内，真机可以正常渲染</span><br>      <span class="hljs-comment">// 此处为了兼容性，函数会直接将canvas的内联宽高缩放至屏幕大小</span><br>      <span class="hljs-keyword">if</span> (w &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span> || h &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>) &#123;<br>        <span class="hljs-keyword">let</span> screenRatio = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span> / <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>;<br>        <span class="hljs-keyword">let</span> selfRatio = w / h;<br>        <span class="hljs-keyword">if</span> (screenRatio &gt; selfRatio) &#123;<br>          w = (w * <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>) / h;<br>          h = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenHeight</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          h = (h * <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span>) / w;<br>          w = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">screenWidth</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">return</span> &#123; w, h &#125;;<br>    &#125;,<br><br>    <span class="hljs-title function_">getNode</span>(<span class="hljs-params">id</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">res, rej</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> query = wx.<span class="hljs-title function_">createSelectorQuery</span>().<span class="hljs-title function_">in</span>(<span class="hljs-variable language_">this</span>);<br>        query<br>          .<span class="hljs-title function_">select</span>(id)<br>          .<span class="hljs-title function_">fields</span>(&#123; <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">size</span>: <span class="hljs-literal">true</span> &#125;)<br>          .<span class="hljs-title function_">exec</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (e[<span class="hljs-number">0</span>]) &#123;<br>              <span class="hljs-title function_">res</span>(e);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              <span class="hljs-title function_">rej</span>(e);<br>            &#125;<br>          &#125;);<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">makeCanvasDisplayBetter</span>(<span class="hljs-params">nodeInfo</span>) &#123;<br>      <span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">node</span>: canvas &#125; = nodeInfo;<br>      <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>      <span class="hljs-comment">// 此处将canvas的尺寸扩大（3倍）,缩放扩大（3倍），</span><br>      <span class="hljs-comment">// 并且在style内联样式中又指定canvas的宽（1倍）和高（1倍），来实现更清晰的canvas显示效果。</span><br>      <span class="hljs-comment">// 原理：生成3倍大小canvas，通过css缩放到1倍宽高的dom中显示。</span><br>      <span class="hljs-comment">// 相当于将900*900的图片，展示到一个300*300大小的dom框中，清晰度会提高。</span><br>      <span class="hljs-comment">// 微信小程序会显示canvas的最大尺寸为：4096*4096，超出会报错</span><br>      <span class="hljs-keyword">const</span> dpr = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcDPR</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">pixelRatio</span>);<br>      canvas.<span class="hljs-property">width</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> * dpr;<br>      canvas.<span class="hljs-property">height</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span> * dpr;<br>      ctx.<span class="hljs-title function_">scale</span>(dpr, dpr);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        canvas,<br>        ctx,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">calcDPR</span>(<span class="hljs-params">pixelRatio</span>) &#123;<br>      <span class="hljs-keyword">let</span> dpr = pixelRatio;<br>      <span class="hljs-keyword">if</span> (<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span> * pixelRatio &gt; <span class="hljs-number">4096</span> ||<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span> * pixelRatio &gt; <span class="hljs-number">4096</span><br>      ) &#123;<br>        <span class="hljs-keyword">const</span> shortDPR = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">calcDPR</span>(pixelRatio - <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">return</span> shortDPR;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> dpr;<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-title function_">saveFileToAlbum</span>(<span class="hljs-params"></span>) &#123;<br>      wx.<span class="hljs-title function_">canvasToTempFilePath</span>(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">canvas</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvas</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>          wx.<span class="hljs-title function_">saveImageToPhotosAlbum</span>(&#123;<br>            <span class="hljs-attr">filePath</span>: res.<span class="hljs-property">tempFilePath</span>,<br>            <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&quot;finish&quot;</span>);<br>              <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>              &#125;);<br>            &#125;,<br>            <span class="hljs-attr">complete</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>              wx.<span class="hljs-title function_">hideLoading</span>();<br>            &#125;,<br>          &#125;);<br>        &#125;,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">justGenerateImageAndReturnPath</span>(<span class="hljs-params"></span>) &#123;<br>      wx.<span class="hljs-title function_">canvasToTempFilePath</span>(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">canvas</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvas</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">if</span> (res.<span class="hljs-property">tempFilePath</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&quot;filepath&quot;</span>, res.<span class="hljs-property">tempFilePath</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>              <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>            &#125;);<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;生图失败&quot;</span>);<br>          &#125;<br>        &#125;,<br>        <span class="hljs-attr">complete</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>          wx.<span class="hljs-title function_">hideLoading</span>();<br>        &#125;,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-title function_">drawRadiusRect</span>(<span class="hljs-params">x, y, w, h, r</span>) &#123;<br>      <span class="hljs-keyword">const</span> br = r;<br>      <span class="hljs-keyword">let</span> ctx = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>;<br>      ctx.<span class="hljs-title function_">beginPath</span>();<br>      ctx.<span class="hljs-title function_">moveTo</span>(x + br, y); <span class="hljs-comment">// 移动到左上角的点</span><br>      ctx.<span class="hljs-title function_">lineTo</span>(x + w - br, y); <span class="hljs-comment">// 画上边的线</span><br>      ctx.<span class="hljs-title function_">arcTo</span>(x + w, y, x + w, y + br, br); <span class="hljs-comment">// 画右上角的弧</span><br>      ctx.<span class="hljs-title function_">lineTo</span>(x + w, y + h - br); <span class="hljs-comment">// 画右边的线</span><br>      ctx.<span class="hljs-title function_">arcTo</span>(x + w, y + h, x + w - br, y + h, br); <span class="hljs-comment">// 画右下角的弧</span><br>      ctx.<span class="hljs-title function_">lineTo</span>(x + br, y + h); <span class="hljs-comment">// 画下边的线</span><br>      ctx.<span class="hljs-title function_">arcTo</span>(x, y + h, x, y + h - br, br); <span class="hljs-comment">// 画左下角的弧</span><br>      ctx.<span class="hljs-title function_">lineTo</span>(x, y + br); <span class="hljs-comment">// 画左边的线</span><br>      ctx.<span class="hljs-title function_">arcTo</span>(x, y, x + br, y, br); <span class="hljs-comment">// 画左上角的弧</span><br>      ctx.<span class="hljs-title function_">closePath</span>();<br>    &#125;,<br><br>    <span class="hljs-comment">//判断字符是否是 中文符号</span><br>    <span class="hljs-title function_">patchZhMark</span>(<span class="hljs-params">temp</span>) &#123;<br>      <span class="hljs-keyword">var</span> reg =<br>        <span class="hljs-regexp">/[\u3002|\uff1f|\uff01|\uff0c|\u3001|\uff1b|\uff1a|\u201c|\u201d|\u2018|\u2019|\uff08|\uff09|\u300a|\u300b|\u3008|\u3009|\u3010|\u3011|\u300e|\u300f|\u300c|\u300d|\ufe43|\ufe44|\u3014|\u3015|\u2026|\u2014|\uff5e|\ufe4f|\uffe5]/</span>;<br>      <span class="hljs-keyword">if</span> (reg.<span class="hljs-title function_">test</span>(temp)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-comment">//判断字符是否是 英文半角符号</span><br>    <span class="hljs-title function_">patchEnMark</span>(<span class="hljs-params">temp</span>) &#123;<br>      <span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/[\x21-\x2f\x3a-\x40\x5b-\x60\x7B-\x7F]/</span>;<br>      <span class="hljs-keyword">if</span> (reg.<span class="hljs-title function_">test</span>(temp)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-title function_">clearCanvas</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">clearRect</span>(<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelWidth</span>,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">canvasPixelHeight</span><br>      );<br>    &#125;,<br><br>    <span class="hljs-comment">// ------------------功能函数-----------------</span><br>  &#125;,<br>&#125;);<br><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.save-dom-canvas-container</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">9999px</span>;<br>  <span class="hljs-attribute">left</span>: -<span class="hljs-number">9999px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;save-dom-canvas-container&quot;</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">&quot;&#123;&#123;show&#125;&#125;&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span></span><br><span class="hljs-tag">    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;2d&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;saveDomOffsetCanvas&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:&#123;&#123;canvasPixelWidth&#125;&#125;px;height:&#123;&#123;canvasPixelHeight&#125;&#125;px&quot;</span></span><br><span class="hljs-tag">  /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="下拉刷新组件"><a href="#下拉刷新组件" class="headerlink" title="下拉刷新组件"></a>下拉刷新组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scroll-y</span></span><br><span class="hljs-tag">  <span class="hljs-attr">enable-passive</span>=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">enhanced</span>=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bounces</span>=<span class="hljs-string">&quot;&#123;&#123;false&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">fast-deceleration</span>=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">refresher-enabled</span>=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">lower-threshold</span>=<span class="hljs-string">&quot;&#123;&#123;100&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">refresher-threshold</span>=<span class="hljs-string">&quot;&#123;&#123;refresherThresholdHeight&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">refresher-default-style</span>=<span class="hljs-string">&quot;none&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">refresher-triggered</span>=<span class="hljs-string">&quot;&#123;&#123;triggered&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height:&#123;&#123;contentHeight&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bindrefresherrefresh</span>=<span class="hljs-string">&quot;onDefaultRefresh&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bindrefresherpulling</span>=<span class="hljs-string">&quot;onPulling&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bindrefresherrestore</span>=<span class="hljs-string">&quot;onRestore&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bindscrolltolower</span>=<span class="hljs-string">&quot;onLoadmore&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bind:touchend</span>=<span class="hljs-string">&quot;dragend&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>  <span class="hljs-comment">&lt;!-- scroll-view 自定义下拉刷新节点需要声明为 slot=&quot;refresher&quot; --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;refresher&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;refresh-container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom-refresh-container&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height:&#123;&#123;refresherThresholdHeight&#125;&#125;px&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123;refreshLogo&#125;&#125;&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;aspectFit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom-refresh-bc-image&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">block</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">&quot;&#123;&#123;refreshstate == &#x27;pulldown&#x27;&#125;&#125;&quot;</span>&gt;</span>下拉刷新<span class="hljs-tag">&lt;/<span class="hljs-name">block</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">block</span> <span class="hljs-attr">wx:elif</span>=<span class="hljs-string">&quot;&#123;&#123;refreshstate == &#x27;loosen&#x27;&#125;&#125;&quot;</span>&gt;</span>松手刷新<span class="hljs-tag">&lt;/<span class="hljs-name">block</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">block</span> <span class="hljs-attr">wx:elif</span>=<span class="hljs-string">&quot;&#123;&#123;refreshstate == &#x27;loading&#x27;&#125;&#125;&quot;</span>&gt;</span>刷新中...<span class="hljs-tag">&lt;/<span class="hljs-name">block</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- bounces： ios上该属性需要关闭，否则会导致第二次下拉刷新时，屏幕抖动 --&gt;</span><br>  <span class="hljs-comment">&lt;!-- 在ios中，当view overflow:auto时，view在下拉到顶部或者底部时会有一部分弹性距离，但是当这个view内有setData发生时，view会立即复原，从而导致你在拉到底部时弹性距离刚出现一部分又被setData复原了 ，如果一直拉住不放就会一直重复这个过程，所有在我们看来就是页面在疯狂的抖动了--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.refresh-container</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-flow</span>: column nowrap;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: flex-end;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br><br>  <span class="hljs-comment">/* background: linear-gradient(</span><br><span class="hljs-comment">    180deg,</span><br><span class="hljs-comment">    #ffe7b9 12.78%,</span><br><span class="hljs-comment">    #fff2d8 22.45%,</span><br><span class="hljs-comment">    #fffbf2 32.77%,</span><br><span class="hljs-comment">    #fffbf2 78.45%,</span><br><span class="hljs-comment">    #fff 87.05%</span><br><span class="hljs-comment">  ); */</span><br>&#125;<br><br><span class="hljs-selector-class">.bottom-refresh-container</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-flow</span>: column nowrap;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">80px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#d2ab64</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">500</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">letter-spacing</span>: <span class="hljs-number">1px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.bottom-refresh-bc-image</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">80%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.1</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; getStaticUrl &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@/utils/assets&quot;</span>);<br><br><span class="hljs-title class_">Component</span>(&#123;<br>  <span class="hljs-attr">options</span>: &#123;&#125;,<br>  <span class="hljs-attr">properties</span>: &#123;<br>    <span class="hljs-attr">contentHeight</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;500px&quot;</span>,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">timeout</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">triggered</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">refreshstate</span>: <span class="hljs-string">&quot;pulldown&quot;</span>,<br>    <span class="hljs-attr">refreshLogo</span>: <span class="hljs-title function_">getStaticUrl</span>(<span class="hljs-string">&quot;header/full_name_with_bg_short.png&quot;</span>),<br>    <span class="hljs-attr">refresherThresholdHeight</span>: <span class="hljs-number">80</span>,<br>  &#125;,<br>  <span class="hljs-title function_">ready</span>(<span class="hljs-params"></span>) &#123;&#125;,<br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-title function_">debounce</span>(<span class="hljs-params">fn, wait</span>) &#123;<br>      <span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">timeout</span>: <span class="hljs-literal">null</span>,<br>      &#125;);<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">if</span> (that.<span class="hljs-property">data</span>.<span class="hljs-property">timeout</span> !== <span class="hljs-literal">null</span>) &#123;<br>          <span class="hljs-built_in">clearTimeout</span>(that.<span class="hljs-property">data</span>.<span class="hljs-property">timeout</span>);<br>        &#125;<br>        <span class="hljs-keyword">const</span> timeout = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-title function_">fn</span>();<br>        &#125;, wait);<br>        that.<span class="hljs-title function_">setData</span>(&#123;<br>          timeout,<br>        &#125;);<br>      &#125;;<br>    &#125;,<br>    <span class="hljs-title function_">onLoadmore</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">debounce</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&quot;loadmore&quot;</span>);<br>        wx.<span class="hljs-title function_">vibrateShort</span>();<br>      &#125;, <span class="hljs-number">500</span>)();<br>    &#125;,<br><br>    <span class="hljs-title function_">onPulling</span>(<span class="hljs-params">evt</span>) &#123;<br>      <span class="hljs-keyword">let</span> p = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(<br>        evt.<span class="hljs-property">detail</span>.<span class="hljs-property">dy</span> / (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">refresherThresholdHeight</span> + <span class="hljs-number">20</span>),<br>        <span class="hljs-number">1</span><br>      );<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">p</span> = p ? p : <span class="hljs-number">0</span>;<br>      <span class="hljs-keyword">if</span> (p &gt;= <span class="hljs-number">0.8</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          <span class="hljs-attr">refreshstate</span>: <span class="hljs-string">&quot;loosen&quot;</span>,<br>        &#125;);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          <span class="hljs-attr">refreshstate</span>: <span class="hljs-string">&quot;pulldown&quot;</span>,<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    <span class="hljs-title function_">onDefaultRefresh</span>(<span class="hljs-params"></span>) &#123;<br>      wx.<span class="hljs-title function_">vibrateShort</span>();<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&quot;refresh&quot;</span>);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">debounce</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">settriggered</span>(<span class="hljs-literal">false</span>);<br>      &#125;, <span class="hljs-number">1000</span>)();<br>    &#125;,<br>    <span class="hljs-title function_">onRestore</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;自定义下拉刷新被复位&quot;</span>);<br>    &#125;,<br><br>    <span class="hljs-title function_">dragend</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">p</span> &gt; <span class="hljs-number">0.6</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">refreshstate</span> !== <span class="hljs-string">&quot;loading&quot;</span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          <span class="hljs-attr">refreshstate</span>: <span class="hljs-string">&quot;loading&quot;</span>,<br>        &#125;);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">settriggered</span>(<span class="hljs-literal">false</span>);<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-title function_">settriggered</span>(<span class="hljs-params">flag</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(<br>          &#123;<br>            <span class="hljs-attr">triggered</span>: flag,<br>          &#125;,<br>          <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-title function_">resolve</span>();<br>          &#125;<br>        );<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>&#125;);<br><br></code></pre></td></tr></table></figure><h4 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">scroller</span></span><br><span class="hljs-tag">  <span class="hljs-attr">contentHeight</span>=<span class="hljs-string">&quot;calc(100vh - 194.2308rpx)&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bind:refresh</span>=<span class="hljs-string">&quot;onReachTop&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bind:loadmore</span>=<span class="hljs-string">&quot;onReachBottom&quot;</span></span><br><span class="hljs-tag">&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">scroller</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="按顺序执行异步请求问题"><a href="#按顺序执行异步请求问题" class="headerlink" title="按顺序执行异步请求问题"></a>按顺序执行异步请求问题</h3><h3 id="约定了-loadLogin-特定周期，以解决发起请求的-token-获取顺序问题"><a href="#约定了-loadLogin-特定周期，以解决发起请求的-token-获取顺序问题" class="headerlink" title="约定了 loadLogin 特定周期，以解决发起请求的 token 获取顺序问题"></a>约定了 loadLogin 特定周期，以解决发起请求的 token 获取顺序问题</h3><p>使用场景：当一进入页面时，需要先发起 token 请求，等接口返回 token 后，再发起其他请求。</p><p>使用方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;&#125;,<br><span class="hljs-title function_">onLoadLogin</span>(<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-comment">// index/index接口需要先获取token再发起请求，所以需要放入onLoadLogin周期中使用，</span><br>   <span class="hljs-comment">//在此周期内发起的请求都已经携带了token</span><br>  <span class="hljs-title class_">Api</span>.<span class="hljs-title function_">request</span>(<span class="hljs-string">&quot;index/index&quot;</span>, &#123;&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;首页接口:&#x27;</span>, result);<br>   &#125;);<br>&#125;,<br></code></pre></td></tr></table></figure><p>使用文档：<a href="https://github.com/1977474741/spa-custom-hooks">spa-custom-hooks</a></p><h3 id="带点击效果的组件"><a href="#带点击效果的组件" class="headerlink" title="带点击效果的组件"></a>带点击效果的组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tap-hover-container&quot;</span> <span class="hljs-attr">hover-class</span>=<span class="hljs-string">&quot;hover-with-opacity-&#123;&#123;type&#125;&#125;&quot;</span> <span class="hljs-attr">hover-stay-time</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.hover-with-opacity-scale</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.94</span>, <span class="hljs-number">0.94</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.9</span>;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hover-with-opacity-bc</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f7f7f7</span>;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.9</span>;<br>&#125;<br><br><span class="hljs-selector-class">.tap-hover-container</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Component</span>(&#123;<br>  <span class="hljs-attr">properties</span>: &#123;<br>    <span class="hljs-attr">type</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;scale&quot;</span>,<br>    &#125;,<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tap-hover-scale-container</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tap-hover-scale-container</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="拖拽-缩放-旋转组件"><a href="#拖拽-缩放-旋转组件" class="headerlink" title="拖拽/缩放/旋转组件"></a>拖拽/缩放/旋转组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- gesture-view.wxml --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span></span><br><span class="hljs-tag">  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gesture-wrapper&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">catch:touchstart</span>=<span class="hljs-string">&quot;touchStart&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">catch:touchmove</span>=<span class="hljs-string">&quot;touchMove&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">catch:touchend</span>=<span class="hljs-string">&quot;touchEnd&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: &#123;&#123;width&#125;&#125;; height: &#123;&#123;height&#125;&#125;; overflow: hidden;&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;gesture-ref&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 0; height: 0&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span></span><br><span class="hljs-tag">    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content-container&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: &#123;&#123;width&#125;&#125;; height: &#123;&#123;height&#125;&#125;; transform: &#123;&#123;transform&#125;&#125;; transform-origin: 0 0;&quot;</span></span><br><span class="hljs-tag">  &gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// gesture-view.js</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CSSMatrix</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./dommatrix&quot;</span>);<br><br><span class="hljs-title class_">Component</span>(&#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 组件的属性列表</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">properties</span>: &#123;<br>    <span class="hljs-attr">width</span>: &#123;<br>      <span class="hljs-comment">// 宽度</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;300rpx&quot;</span>,<br>    &#125;,<br>    <span class="hljs-attr">height</span>: &#123;<br>      <span class="hljs-comment">// 高度</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;200rpx&quot;</span>,<br>    &#125;,<br>    <span class="hljs-attr">translateX</span>: &#123;<br>      <span class="hljs-comment">// 是否开启横向移动，关闭请使用 translateX=&quot;&#123;&#123;false&#125;&#125;&quot;</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Boolean</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">translateXValue</span>: &#123;<br>      <span class="hljs-comment">// 横向移动初始值，单位px</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>    <span class="hljs-attr">translateY</span>: &#123;<br>      <span class="hljs-comment">// 是否开启纵向移动，关闭请使用 translateY=&quot;&#123;&#123;false&#125;&#125;&quot;</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Boolean</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">translateYValue</span>: &#123;<br>      <span class="hljs-comment">// 纵向移动初始值，单位px</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>    <span class="hljs-attr">scale</span>: &#123;<br>      <span class="hljs-comment">// 是否开启缩放，关闭请使用 scale=&quot;&#123;&#123;false&#125;&#125;&quot;</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Boolean</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">scaleValue</span>: &#123;<br>      <span class="hljs-comment">// 缩放初始值</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-number">1.0</span>,<br>    &#125;,<br>    <span class="hljs-attr">scaleMin</span>: &#123;<br>      <span class="hljs-comment">// 缩放范围最小值</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-number">0.1</span>,<br>    &#125;,<br>    <span class="hljs-attr">scaleMax</span>: &#123;<br>      <span class="hljs-comment">// 缩放范围最大值</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-number">2.0</span>,<br>    &#125;,<br>    <span class="hljs-attr">rotate</span>: &#123;<br>      <span class="hljs-comment">// 是否开启旋转，关闭请使用 rotate=&quot;&#123;&#123;false&#125;&#125;&quot;</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Boolean</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">rotateValue</span>: &#123;<br>      <span class="hljs-comment">// 旋转初始度数</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 组件的初始数据</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">startScale</span>: -<span class="hljs-number">1</span>,<br>    <span class="hljs-attr">startDistance</span>: -<span class="hljs-number">1</span>,<br>    <span class="hljs-attr">transform</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">transformMatrix</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">startTransformMatrix</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-attr">startRotate</span>: -<span class="hljs-number">1</span>,<br>    <span class="hljs-attr">startAngle</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">startOrigin</span>: &#123; <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">0</span> &#125;,<br>    <span class="hljs-attr">startTouches</span>: [],<br>  &#125;,<br><br>  <span class="hljs-attr">observers</span>: &#123;<br>    <span class="hljs-attr">transformMatrix</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">transformMatrix</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">transform</span>: transformMatrix.<span class="hljs-title function_">toString</span>(),<br>      &#125;);<br>    &#125;,<br>    <span class="hljs-attr">translateYValue</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">y</span>) &#123;<br>      <span class="hljs-keyword">let</span> initialTransformMatrix = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CSSMatrix</span>()<br>        .<span class="hljs-title function_">scale</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleValue</span>)<br>        .<span class="hljs-title function_">rotate</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">rotateValue</span>)<br>        .<span class="hljs-title function_">translate</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateXValue</span>, y);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">transformMatrix</span>: initialTransformMatrix,<br>        <span class="hljs-attr">startTransformMatrix</span>: initialTransformMatrix,<br>      &#125;);<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-attr">lifetimes</span>: &#123;<br>    <span class="hljs-attr">ready</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">let</span> initialTransformMatrix = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CSSMatrix</span>()<br>        .<span class="hljs-title function_">scale</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleValue</span>)<br>        .<span class="hljs-title function_">rotate</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">rotateValue</span>)<br>        .<span class="hljs-title function_">translate</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateXValue</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateYValue</span>);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">transformMatrix</span>: initialTransformMatrix,<br>        <span class="hljs-attr">startTransformMatrix</span>: initialTransformMatrix,<br>      &#125;);<br>    &#125;,<br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 组件的方法列表</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-title function_">getTouchDistance</span>(<span class="hljs-params">touches</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">hypot</span>(<br>        touches[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span> - touches[<span class="hljs-number">1</span>].<span class="hljs-property">clientX</span>,<br>        touches[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span> - touches[<span class="hljs-number">1</span>].<span class="hljs-property">clientY</span><br>      );<br>    &#125;,<br><br>    <span class="hljs-title function_">getTouchAngle</span>(<span class="hljs-params">touches</span>) &#123;<br>      <span class="hljs-keyword">const</span> x = touches[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span> - touches[<span class="hljs-number">1</span>].<span class="hljs-property">clientX</span>;<br>      <span class="hljs-keyword">const</span> y = touches[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span> - touches[<span class="hljs-number">1</span>].<span class="hljs-property">clientY</span>;<br>      <span class="hljs-keyword">return</span> (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">atan2</span>(y, x) * <span class="hljs-number">180</span>) / <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>;<br>    &#125;,<br><br>    <span class="hljs-title function_">midpoint</span>(<span class="hljs-params">touches</span>) &#123;<br>      <span class="hljs-keyword">let</span> [t1, t2] = touches;<br>      <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">x</span>: (t1.<span class="hljs-property">clientX</span> + t2.<span class="hljs-property">clientX</span>) / <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">y</span>: (t1.<span class="hljs-property">clientY</span> + t2.<span class="hljs-property">clientY</span>) / <span class="hljs-number">2</span>,<br>      &#125;;<br>    &#125;,<br><br>    <span class="hljs-attr">touchStart</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>      <span class="hljs-keyword">const</span> touches = e.<span class="hljs-property">touches</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startTouches</span> = touches;<br>      <span class="hljs-keyword">if</span> (touches.<span class="hljs-property">length</span> === <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">let</span> startOrigin = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">midpoint</span>(touches);<br>        <span class="hljs-keyword">const</span> that = <span class="hljs-variable language_">this</span>;<br>        <span class="hljs-comment">// #gesture-ref is of no transform</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">createSelectorQuery</span>()<br>          .<span class="hljs-title function_">select</span>(<span class="hljs-string">&quot;#gesture-ref&quot;</span>)<br>          .<span class="hljs-title function_">boundingClientRect</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">rect</span>) &#123;<br>            startOrigin = &#123;<br>              <span class="hljs-attr">x</span>: startOrigin.<span class="hljs-property">x</span> - rect.<span class="hljs-property">left</span>,<br>              <span class="hljs-attr">y</span>: startOrigin.<span class="hljs-property">y</span> - rect.<span class="hljs-property">top</span>,<br>            &#125;;<br>            that.<span class="hljs-title function_">setData</span>(&#123;<br>              startOrigin,<br>              <span class="hljs-attr">startDistance</span>: that.<span class="hljs-title function_">getTouchDistance</span>(touches),<br>              <span class="hljs-attr">startAngle</span>: that.<span class="hljs-title function_">getTouchAngle</span>(touches),<br>            &#125;);<br>          &#125;)<br>          .<span class="hljs-title function_">exec</span>();<br>      &#125;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">startRotate</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">rotateValue</span>,<br>        <span class="hljs-attr">startScale</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleValue</span>,<br>        <span class="hljs-attr">startTransformMatrix</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">transformMatrix</span>,<br>      &#125;);<br>    &#125;,<br><br>    <span class="hljs-attr">touchMove</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>      <span class="hljs-keyword">const</span> touches = e.<span class="hljs-property">touches</span>;<br>      <span class="hljs-keyword">const</span> &#123; startTouches, startScale, startRotate, startAngle &#125; = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>;<br>      <span class="hljs-keyword">if</span> (touches.<span class="hljs-property">length</span> === <span class="hljs-number">2</span> &amp;&amp; startTouches.<span class="hljs-property">length</span> === <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">let</span> curScale = startScale,<br>          delta_scale = <span class="hljs-number">1.0</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scale</span>) &#123;<br>          curScale =<br>            startScale *<br>            (<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getTouchDistance</span>(touches) / <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startDistance</span>);<br>          <span class="hljs-keyword">if</span> (curScale &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleMin</span>) curScale = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleMin</span>;<br>          <span class="hljs-keyword">if</span> (curScale &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleMax</span>) curScale = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">scaleMax</span>;<br>          delta_scale = curScale / startScale;<br>        &#125;<br><br>        <span class="hljs-keyword">let</span> curRotate = startRotate,<br>          delta_rotate = <span class="hljs-number">0.0</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">rotate</span>) &#123;<br>          delta_rotate = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getTouchAngle</span>(touches) - startAngle;<br>          curRotate = startRotate + delta_rotate;<br>        &#125;<br><br>        <span class="hljs-keyword">const</span> mp_init = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">midpoint</span>(startTouches);<br>        <span class="hljs-keyword">const</span> mp_cur = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">midpoint</span>(touches);<br>        <span class="hljs-keyword">const</span> translateX = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateX</span> ? mp_cur.<span class="hljs-property">x</span> - mp_init.<span class="hljs-property">x</span> : <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">const</span> translateY = <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateY</span> ? mp_cur.<span class="hljs-property">y</span> - mp_init.<span class="hljs-property">y</span> : <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">let</span> transformMatrix = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CSSMatrix</span>()<br>          .<span class="hljs-title function_">translate</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startOrigin</span>.<span class="hljs-property">x</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startOrigin</span>.<span class="hljs-property">y</span>)<br>          .<span class="hljs-title function_">translate</span>(translateX, translateY)<br>          .<span class="hljs-title function_">rotate</span>(delta_rotate)<br>          .<span class="hljs-title function_">scale</span>(delta_scale)<br>          .<span class="hljs-title function_">translate</span>(-<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startOrigin</span>.<span class="hljs-property">x</span>, -<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startOrigin</span>.<span class="hljs-property">y</span>)<br>          .<span class="hljs-title function_">multiply</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startTransformMatrix</span>);<br><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          <span class="hljs-attr">scaleValue</span>: curScale,<br>          <span class="hljs-attr">rotateValue</span>: curRotate,<br>          <span class="hljs-attr">transformMatrix</span>: transformMatrix,<br>        &#125;);<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (startTouches.<span class="hljs-property">length</span> !== <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">let</span> transformMatrix = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CSSMatrix</span>()<br>          .<span class="hljs-title function_">translate</span>(<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateX</span><br>              ? touches[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span> - startTouches[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span><br>              : <span class="hljs-number">0</span>,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">translateY</span><br>              ? touches[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span> - startTouches[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span><br>              : <span class="hljs-number">0</span><br>          )<br>          .<span class="hljs-title function_">multiply</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">startTransformMatrix</span>);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          <span class="hljs-attr">transformMatrix</span>: transformMatrix,<br>        &#125;);<br>      &#125;<br>    &#125;,<br><br>    <span class="hljs-attr">touchEnd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;&#125;,<br>  &#125;,<br>&#125;);<br><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// dommatrix.js</span><br><span class="hljs-meta">&quot;use strict&quot;</span>;<br><span class="hljs-keyword">var</span> Z = <span class="hljs-title class_">Object</span>.<span class="hljs-property">defineProperty</span>;<br><span class="hljs-keyword">var</span> <span class="hljs-title function_">z</span> = (<span class="hljs-params">s, t, e</span>) =&gt;<br>  t <span class="hljs-keyword">in</span> s<br>    ? <span class="hljs-title function_">Z</span>(s, t, &#123; <span class="hljs-attr">enumerable</span>: !<span class="hljs-number">0</span>, <span class="hljs-attr">configurable</span>: !<span class="hljs-number">0</span>, <span class="hljs-attr">writable</span>: !<span class="hljs-number">0</span>, <span class="hljs-attr">value</span>: e &#125;)<br>    : (s[t] = e);<br><span class="hljs-keyword">var</span> <span class="hljs-title function_">p</span> = (<span class="hljs-params">s, t, e</span>) =&gt; (<span class="hljs-title function_">z</span>(s, <span class="hljs-keyword">typeof</span> t != <span class="hljs-string">&quot;symbol&quot;</span> ? t + <span class="hljs-string">&quot;&quot;</span> : t, e), e);<br><span class="hljs-keyword">const</span> $ = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">b</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">c</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">e</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">f</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m11</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">m12</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m13</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m14</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m21</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m22</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">m23</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m24</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m31</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m32</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m33</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">m34</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m41</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m42</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m43</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">m44</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">is2D</span>: !<span class="hljs-number">0</span>,<br>    <span class="hljs-attr">isIdentity</span>: !<span class="hljs-number">0</span>,<br>  &#125;,<br>  E = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span><br>    (s <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Float64Array</span> ||<br>      s <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Float32Array</span> ||<br>      (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(s) &amp;&amp; s.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">t</span>) =&gt;</span> <span class="hljs-keyword">typeof</span> t == <span class="hljs-string">&quot;number&quot;</span>))) &amp;&amp;<br>    [<span class="hljs-number">6</span>, <span class="hljs-number">16</span>].<span class="hljs-title function_">some</span>(<span class="hljs-function">(<span class="hljs-params">t</span>) =&gt;</span> s.<span class="hljs-property">length</span> === t),<br>  P = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span><br>    s <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">DOMMatrix</span> ||<br>    s <span class="hljs-keyword">instanceof</span> y ||<br>    (<span class="hljs-keyword">typeof</span> s == <span class="hljs-string">&quot;object&quot;</span> &amp;&amp; <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>($).<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">t</span>) =&gt;</span> s &amp;&amp; t <span class="hljs-keyword">in</span> s)),<br>  g = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> t = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>(),<br>      e = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(s);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">E</span>(e))<br>      <span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(<br>        <span class="hljs-string">`CSSMatrix: &quot;<span class="hljs-subst">$&#123;e.join(<span class="hljs-string">&quot;,&quot;</span>)&#125;</span>&quot; must be an array with 6/16 numbers.`</span><br>      );<br>    <span class="hljs-keyword">if</span> (e.<span class="hljs-property">length</span> === <span class="hljs-number">16</span>) &#123;<br>      <span class="hljs-keyword">const</span> [n, i, r, a, l, m, h, c, u, f, w, o, d, A, M, b] = e;<br>      (t.<span class="hljs-property">m11</span> = n),<br>        (t.<span class="hljs-property">a</span> = n),<br>        (t.<span class="hljs-property">m21</span> = l),<br>        (t.<span class="hljs-property">c</span> = l),<br>        (t.<span class="hljs-property">m31</span> = u),<br>        (t.<span class="hljs-property">m41</span> = d),<br>        (t.<span class="hljs-property">e</span> = d),<br>        (t.<span class="hljs-property">m12</span> = i),<br>        (t.<span class="hljs-property">b</span> = i),<br>        (t.<span class="hljs-property">m22</span> = m),<br>        (t.<span class="hljs-property">d</span> = m),<br>        (t.<span class="hljs-property">m32</span> = f),<br>        (t.<span class="hljs-property">m42</span> = A),<br>        (t.<span class="hljs-property">f</span> = A),<br>        (t.<span class="hljs-property">m13</span> = r),<br>        (t.<span class="hljs-property">m23</span> = h),<br>        (t.<span class="hljs-property">m33</span> = w),<br>        (t.<span class="hljs-property">m43</span> = M),<br>        (t.<span class="hljs-property">m14</span> = a),<br>        (t.<span class="hljs-property">m24</span> = c),<br>        (t.<span class="hljs-property">m34</span> = o),<br>        (t.<span class="hljs-property">m44</span> = b);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.<span class="hljs-property">length</span> === <span class="hljs-number">6</span>) &#123;<br>      <span class="hljs-keyword">const</span> [n, i, r, a, l, m] = e;<br>      (t.<span class="hljs-property">m11</span> = n),<br>        (t.<span class="hljs-property">a</span> = n),<br>        (t.<span class="hljs-property">m12</span> = i),<br>        (t.<span class="hljs-property">b</span> = i),<br>        (t.<span class="hljs-property">m21</span> = r),<br>        (t.<span class="hljs-property">c</span> = r),<br>        (t.<span class="hljs-property">m22</span> = a),<br>        (t.<span class="hljs-property">d</span> = a),<br>        (t.<span class="hljs-property">m41</span> = l),<br>        (t.<span class="hljs-property">e</span> = l),<br>        (t.<span class="hljs-property">m42</span> = m),<br>        (t.<span class="hljs-property">f</span> = m);<br>    &#125;<br>    <span class="hljs-keyword">return</span> t;<br>  &#125;,<br>  X = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">P</span>(s))<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">g</span>([<br>        s.<span class="hljs-property">m11</span>,<br>        s.<span class="hljs-property">m12</span>,<br>        s.<span class="hljs-property">m13</span>,<br>        s.<span class="hljs-property">m14</span>,<br>        s.<span class="hljs-property">m21</span>,<br>        s.<span class="hljs-property">m22</span>,<br>        s.<span class="hljs-property">m23</span>,<br>        s.<span class="hljs-property">m24</span>,<br>        s.<span class="hljs-property">m31</span>,<br>        s.<span class="hljs-property">m32</span>,<br>        s.<span class="hljs-property">m33</span>,<br>        s.<span class="hljs-property">m34</span>,<br>        s.<span class="hljs-property">m41</span>,<br>        s.<span class="hljs-property">m42</span>,<br>        s.<span class="hljs-property">m43</span>,<br>        s.<span class="hljs-property">m44</span>,<br>      ]);<br>    <span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(<br>      <span class="hljs-string">`CSSMatrix: &quot;<span class="hljs-subst">$&#123;<span class="hljs-built_in">JSON</span>.stringify(</span></span><br><span class="hljs-subst"><span class="hljs-string">        s</span></span><br><span class="hljs-subst"><span class="hljs-string">      )&#125;</span>&quot; is not a DOMMatrix / CSSMatrix / JSON compatible object.`</span><br>    );<br>  &#125;,<br>  O = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> s != <span class="hljs-string">&quot;string&quot;</span>)<br>      <span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">`CSSMatrix: &quot;<span class="hljs-subst">$&#123;<span class="hljs-built_in">JSON</span>.stringify(s)&#125;</span>&quot; is not a string.`</span>);<br>    <span class="hljs-keyword">const</span> t = <span class="hljs-title class_">String</span>(s).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\s/g</span>, <span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">let</span> e = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>();<br>    <span class="hljs-keyword">const</span> n = <span class="hljs-string">`CSSMatrix: invalid transform string &quot;<span class="hljs-subst">$&#123;s&#125;</span>&quot;`</span>;<br>    <span class="hljs-keyword">return</span> (<br>      t<br>        .<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;)&quot;</span>)<br>        .<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">i</span>) =&gt;</span> i)<br>        .<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">i</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">const</span> [r, a] = i.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;(&quot;</span>);<br>          <span class="hljs-keyword">if</span> (!a) <span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(n);<br>          <span class="hljs-keyword">const</span> l = a<br>              .<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;,&quot;</span>)<br>              .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span><br>                o.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;rad&quot;</span>)<br>                  ? <span class="hljs-built_in">parseFloat</span>(o) * (<span class="hljs-number">180</span> / <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>)<br>                  : <span class="hljs-built_in">parseFloat</span>(o)<br>              ),<br>            [m, h, c, u] = l,<br>            f = [m, h, c],<br>            w = [m, h, c, u];<br>          <span class="hljs-keyword">if</span> (r === <span class="hljs-string">&quot;perspective&quot;</span> &amp;&amp; m &amp;&amp; [h, c].<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> o === <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>))<br>            e.<span class="hljs-property">m34</span> = -<span class="hljs-number">1</span> / m;<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>            r.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;matrix&quot;</span>) &amp;&amp;<br>            [<span class="hljs-number">6</span>, <span class="hljs-number">16</span>].<span class="hljs-title function_">includes</span>(l.<span class="hljs-property">length</span>) &amp;&amp;<br>            l.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> !<span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(+o))<br>          ) &#123;<br>            <span class="hljs-keyword">const</span> o = l.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">d</span>) =&gt;</span> (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(d) &lt; <span class="hljs-number">1e-6</span> ? <span class="hljs-number">0</span> : d));<br>            e = e.<span class="hljs-title function_">multiply</span>(<span class="hljs-title function_">g</span>(o));<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (r === <span class="hljs-string">&quot;translate3d&quot;</span> &amp;&amp; f.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> !<span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(+o)))<br>            e = e.<span class="hljs-title function_">translate</span>(m, h, c);<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (r === <span class="hljs-string">&quot;translate&quot;</span> &amp;&amp; m &amp;&amp; c === <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>)<br>            e = e.<span class="hljs-title function_">translate</span>(m, h || <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (r === <span class="hljs-string">&quot;rotate3d&quot;</span> &amp;&amp; w.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> !<span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(+o)) &amp;&amp; u)<br>            e = e.<span class="hljs-title function_">rotateAxisAngle</span>(m, h, c, u);<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (r === <span class="hljs-string">&quot;rotate&quot;</span> &amp;&amp; m &amp;&amp; [h, c].<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> o === <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>))<br>            e = e.<span class="hljs-title function_">rotate</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, m);<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>            r === <span class="hljs-string">&quot;scale3d&quot;</span> &amp;&amp;<br>            f.<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> !<span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(+o)) &amp;&amp;<br>            f.<span class="hljs-title function_">some</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> o !== <span class="hljs-number">1</span>)<br>          )<br>            e = e.<span class="hljs-title function_">scale</span>(m, h, c);<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>            r === <span class="hljs-string">&quot;scale&quot;</span> &amp;&amp;<br>            !<span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(m) &amp;&amp;<br>            m !== <span class="hljs-number">1</span> &amp;&amp;<br>            c === <span class="hljs-keyword">void</span> <span class="hljs-number">0</span><br>          ) &#123;<br>            <span class="hljs-keyword">const</span> d = <span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(+h) ? m : h;<br>            e = e.<span class="hljs-title function_">scale</span>(m, d, <span class="hljs-number">1</span>);<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>            r === <span class="hljs-string">&quot;skew&quot;</span> &amp;&amp;<br>            (m || (!<span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(m) &amp;&amp; h)) &amp;&amp;<br>            c === <span class="hljs-keyword">void</span> <span class="hljs-number">0</span><br>          )<br>            e = e.<span class="hljs-title function_">skew</span>(m, h || <span class="hljs-number">0</span>);<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>            [<span class="hljs-string">&quot;translate&quot;</span>, <span class="hljs-string">&quot;rotate&quot;</span>, <span class="hljs-string">&quot;scale&quot;</span>, <span class="hljs-string">&quot;skew&quot;</span>].<span class="hljs-title function_">some</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span><br>              r.<span class="hljs-title function_">includes</span>(o)<br>            ) &amp;&amp;<br>            <span class="hljs-regexp">/[XYZ]/</span>.<span class="hljs-title function_">test</span>(r) &amp;&amp;<br>            m &amp;&amp;<br>            [h, c].<span class="hljs-title function_">every</span>(<span class="hljs-function">(<span class="hljs-params">o</span>) =&gt;</span> o === <span class="hljs-keyword">void</span> <span class="hljs-number">0</span>)<br>          )<br>            <span class="hljs-keyword">if</span> (r === <span class="hljs-string">&quot;skewX&quot;</span> || r === <span class="hljs-string">&quot;skewY&quot;</span>) e = e[r](m);<br>            <span class="hljs-keyword">else</span> &#123;<br>              <span class="hljs-keyword">const</span> o = r.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[XYZ]/</span>, <span class="hljs-string">&quot;&quot;</span>),<br>                d = r.<span class="hljs-title function_">replace</span>(o, <span class="hljs-string">&quot;&quot;</span>),<br>                A = [<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;Z&quot;</span>].<span class="hljs-title function_">indexOf</span>(d),<br>                M = o === <span class="hljs-string">&quot;scale&quot;</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>,<br>                b = [A === <span class="hljs-number">0</span> ? m : M, A === <span class="hljs-number">1</span> ? m : M, A === <span class="hljs-number">2</span> ? m : M];<br>              e = e[o](...b);<br>            &#125;<br>          <span class="hljs-keyword">else</span> <span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(n);<br>        &#125;),<br>      e<br>    );<br>  &#125;,<br>  x = <span class="hljs-function">(<span class="hljs-params">s, t</span>) =&gt;</span><br>    t<br>      ? [s.<span class="hljs-property">a</span>, s.<span class="hljs-property">b</span>, s.<span class="hljs-property">c</span>, s.<span class="hljs-property">d</span>, s.<span class="hljs-property">e</span>, s.<span class="hljs-property">f</span>]<br>      : [<br>          s.<span class="hljs-property">m11</span>,<br>          s.<span class="hljs-property">m12</span>,<br>          s.<span class="hljs-property">m13</span>,<br>          s.<span class="hljs-property">m14</span>,<br>          s.<span class="hljs-property">m21</span>,<br>          s.<span class="hljs-property">m22</span>,<br>          s.<span class="hljs-property">m23</span>,<br>          s.<span class="hljs-property">m24</span>,<br>          s.<span class="hljs-property">m31</span>,<br>          s.<span class="hljs-property">m32</span>,<br>          s.<span class="hljs-property">m33</span>,<br>          s.<span class="hljs-property">m34</span>,<br>          s.<span class="hljs-property">m41</span>,<br>          s.<span class="hljs-property">m42</span>,<br>          s.<span class="hljs-property">m43</span>,<br>          s.<span class="hljs-property">m44</span>,<br>        ],<br>  Y = <span class="hljs-function">(<span class="hljs-params">s, t, e</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> n = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>();<br>    <span class="hljs-keyword">return</span> (n.<span class="hljs-property">m41</span> = s), (n.<span class="hljs-property">e</span> = s), (n.<span class="hljs-property">m42</span> = t), (n.<span class="hljs-property">f</span> = t), (n.<span class="hljs-property">m43</span> = e), n;<br>  &#125;,<br>  F = <span class="hljs-function">(<span class="hljs-params">s, t, e</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> n = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>(),<br>      i = <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>,<br>      r = s * i,<br>      a = t * i,<br>      l = e * i,<br>      m = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(r),<br>      h = -<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(r),<br>      c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(a),<br>      u = -<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(a),<br>      f = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(l),<br>      w = -<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(l),<br>      o = c * f,<br>      d = -c * w;<br>    (n.<span class="hljs-property">m11</span> = o), (n.<span class="hljs-property">a</span> = o), (n.<span class="hljs-property">m12</span> = d), (n.<span class="hljs-property">b</span> = d), (n.<span class="hljs-property">m13</span> = u);<br>    <span class="hljs-keyword">const</span> A = h * u * f + m * w;<br>    (n.<span class="hljs-property">m21</span> = A), (n.<span class="hljs-property">c</span> = A);<br>    <span class="hljs-keyword">const</span> M = m * f - h * u * w;<br>    <span class="hljs-keyword">return</span> (<br>      (n.<span class="hljs-property">m22</span> = M),<br>      (n.<span class="hljs-property">d</span> = M),<br>      (n.<span class="hljs-property">m23</span> = -h * c),<br>      (n.<span class="hljs-property">m31</span> = h * w - m * u * f),<br>      (n.<span class="hljs-property">m32</span> = h * f + m * u * w),<br>      (n.<span class="hljs-property">m33</span> = m * c),<br>      n<br>    );<br>  &#125;,<br>  T = <span class="hljs-function">(<span class="hljs-params">s, t, e, n</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> i = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>(),<br>      r = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(s * s + t * t + e * e);<br>    <span class="hljs-keyword">if</span> (r === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> i;<br>    <span class="hljs-keyword">const</span> a = s / r,<br>      l = t / r,<br>      m = e / r,<br>      h = n * (<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">360</span>),<br>      c = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(h),<br>      u = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(h),<br>      f = c * c,<br>      w = a * a,<br>      o = l * l,<br>      d = m * m,<br>      A = <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * (o + d) * f;<br>    (i.<span class="hljs-property">m11</span> = A), (i.<span class="hljs-property">a</span> = A);<br>    <span class="hljs-keyword">const</span> M = <span class="hljs-number">2</span> * (a * l * f + m * c * u);<br>    (i.<span class="hljs-property">m12</span> = M), (i.<span class="hljs-property">b</span> = M), (i.<span class="hljs-property">m13</span> = <span class="hljs-number">2</span> * (a * m * f - l * c * u));<br>    <span class="hljs-keyword">const</span> b = <span class="hljs-number">2</span> * (l * a * f - m * c * u);<br>    (i.<span class="hljs-property">m21</span> = b), (i.<span class="hljs-property">c</span> = b);<br>    <span class="hljs-keyword">const</span> k = <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * (d + w) * f;<br>    <span class="hljs-keyword">return</span> (<br>      (i.<span class="hljs-property">m22</span> = k),<br>      (i.<span class="hljs-property">d</span> = k),<br>      (i.<span class="hljs-property">m23</span> = <span class="hljs-number">2</span> * (l * m * f + a * c * u)),<br>      (i.<span class="hljs-property">m31</span> = <span class="hljs-number">2</span> * (m * a * f + l * c * u)),<br>      (i.<span class="hljs-property">m32</span> = <span class="hljs-number">2</span> * (m * l * f - a * c * u)),<br>      (i.<span class="hljs-property">m33</span> = <span class="hljs-number">1</span> - <span class="hljs-number">2</span> * (w + o) * f),<br>      i<br>    );<br>  &#125;,<br>  I = <span class="hljs-function">(<span class="hljs-params">s, t, e</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> n = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>();<br>    <span class="hljs-keyword">return</span> (n.<span class="hljs-property">m11</span> = s), (n.<span class="hljs-property">a</span> = s), (n.<span class="hljs-property">m22</span> = t), (n.<span class="hljs-property">d</span> = t), (n.<span class="hljs-property">m33</span> = e), n;<br>  &#125;,<br>  v = <span class="hljs-function">(<span class="hljs-params">s, t</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> e = <span class="hljs-keyword">new</span> <span class="hljs-title function_">y</span>();<br>    <span class="hljs-keyword">if</span> (s) &#123;<br>      <span class="hljs-keyword">const</span> n = (s * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / <span class="hljs-number">180</span>,<br>        i = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">tan</span>(n);<br>      (e.<span class="hljs-property">m21</span> = i), (e.<span class="hljs-property">c</span> = i);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (t) &#123;<br>      <span class="hljs-keyword">const</span> n = (t * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>) / <span class="hljs-number">180</span>,<br>        i = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">tan</span>(n);<br>      (e.<span class="hljs-property">m12</span> = i), (e.<span class="hljs-property">b</span> = i);<br>    &#125;<br>    <span class="hljs-keyword">return</span> e;<br>  &#125;,<br>  R = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span> <span class="hljs-title function_">v</span>(s, <span class="hljs-number">0</span>),<br>  D = <span class="hljs-function">(<span class="hljs-params">s</span>) =&gt;</span> <span class="hljs-title function_">v</span>(<span class="hljs-number">0</span>, s),<br>  N = <span class="hljs-function">(<span class="hljs-params">s, t</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> e = t.<span class="hljs-property">m11</span> * s.<span class="hljs-property">m11</span> + t.<span class="hljs-property">m12</span> * s.<span class="hljs-property">m21</span> + t.<span class="hljs-property">m13</span> * s.<span class="hljs-property">m31</span> + t.<span class="hljs-property">m14</span> * s.<span class="hljs-property">m41</span>,<br>      n = t.<span class="hljs-property">m11</span> * s.<span class="hljs-property">m12</span> + t.<span class="hljs-property">m12</span> * s.<span class="hljs-property">m22</span> + t.<span class="hljs-property">m13</span> * s.<span class="hljs-property">m32</span> + t.<span class="hljs-property">m14</span> * s.<span class="hljs-property">m42</span>,<br>      i = t.<span class="hljs-property">m11</span> * s.<span class="hljs-property">m13</span> + t.<span class="hljs-property">m12</span> * s.<span class="hljs-property">m23</span> + t.<span class="hljs-property">m13</span> * s.<span class="hljs-property">m33</span> + t.<span class="hljs-property">m14</span> * s.<span class="hljs-property">m43</span>,<br>      r = t.<span class="hljs-property">m11</span> * s.<span class="hljs-property">m14</span> + t.<span class="hljs-property">m12</span> * s.<span class="hljs-property">m24</span> + t.<span class="hljs-property">m13</span> * s.<span class="hljs-property">m34</span> + t.<span class="hljs-property">m14</span> * s.<span class="hljs-property">m44</span>,<br>      a = t.<span class="hljs-property">m21</span> * s.<span class="hljs-property">m11</span> + t.<span class="hljs-property">m22</span> * s.<span class="hljs-property">m21</span> + t.<span class="hljs-property">m23</span> * s.<span class="hljs-property">m31</span> + t.<span class="hljs-property">m24</span> * s.<span class="hljs-property">m41</span>,<br>      l = t.<span class="hljs-property">m21</span> * s.<span class="hljs-property">m12</span> + t.<span class="hljs-property">m22</span> * s.<span class="hljs-property">m22</span> + t.<span class="hljs-property">m23</span> * s.<span class="hljs-property">m32</span> + t.<span class="hljs-property">m24</span> * s.<span class="hljs-property">m42</span>,<br>      m = t.<span class="hljs-property">m21</span> * s.<span class="hljs-property">m13</span> + t.<span class="hljs-property">m22</span> * s.<span class="hljs-property">m23</span> + t.<span class="hljs-property">m23</span> * s.<span class="hljs-property">m33</span> + t.<span class="hljs-property">m24</span> * s.<span class="hljs-property">m43</span>,<br>      h = t.<span class="hljs-property">m21</span> * s.<span class="hljs-property">m14</span> + t.<span class="hljs-property">m22</span> * s.<span class="hljs-property">m24</span> + t.<span class="hljs-property">m23</span> * s.<span class="hljs-property">m34</span> + t.<span class="hljs-property">m24</span> * s.<span class="hljs-property">m44</span>,<br>      c = t.<span class="hljs-property">m31</span> * s.<span class="hljs-property">m11</span> + t.<span class="hljs-property">m32</span> * s.<span class="hljs-property">m21</span> + t.<span class="hljs-property">m33</span> * s.<span class="hljs-property">m31</span> + t.<span class="hljs-property">m34</span> * s.<span class="hljs-property">m41</span>,<br>      u = t.<span class="hljs-property">m31</span> * s.<span class="hljs-property">m12</span> + t.<span class="hljs-property">m32</span> * s.<span class="hljs-property">m22</span> + t.<span class="hljs-property">m33</span> * s.<span class="hljs-property">m32</span> + t.<span class="hljs-property">m34</span> * s.<span class="hljs-property">m42</span>,<br>      f = t.<span class="hljs-property">m31</span> * s.<span class="hljs-property">m13</span> + t.<span class="hljs-property">m32</span> * s.<span class="hljs-property">m23</span> + t.<span class="hljs-property">m33</span> * s.<span class="hljs-property">m33</span> + t.<span class="hljs-property">m34</span> * s.<span class="hljs-property">m43</span>,<br>      w = t.<span class="hljs-property">m31</span> * s.<span class="hljs-property">m14</span> + t.<span class="hljs-property">m32</span> * s.<span class="hljs-property">m24</span> + t.<span class="hljs-property">m33</span> * s.<span class="hljs-property">m34</span> + t.<span class="hljs-property">m34</span> * s.<span class="hljs-property">m44</span>,<br>      o = t.<span class="hljs-property">m41</span> * s.<span class="hljs-property">m11</span> + t.<span class="hljs-property">m42</span> * s.<span class="hljs-property">m21</span> + t.<span class="hljs-property">m43</span> * s.<span class="hljs-property">m31</span> + t.<span class="hljs-property">m44</span> * s.<span class="hljs-property">m41</span>,<br>      d = t.<span class="hljs-property">m41</span> * s.<span class="hljs-property">m12</span> + t.<span class="hljs-property">m42</span> * s.<span class="hljs-property">m22</span> + t.<span class="hljs-property">m43</span> * s.<span class="hljs-property">m32</span> + t.<span class="hljs-property">m44</span> * s.<span class="hljs-property">m42</span>,<br>      A = t.<span class="hljs-property">m41</span> * s.<span class="hljs-property">m13</span> + t.<span class="hljs-property">m42</span> * s.<span class="hljs-property">m23</span> + t.<span class="hljs-property">m43</span> * s.<span class="hljs-property">m33</span> + t.<span class="hljs-property">m44</span> * s.<span class="hljs-property">m43</span>,<br>      M = t.<span class="hljs-property">m41</span> * s.<span class="hljs-property">m14</span> + t.<span class="hljs-property">m42</span> * s.<span class="hljs-property">m24</span> + t.<span class="hljs-property">m43</span> * s.<span class="hljs-property">m34</span> + t.<span class="hljs-property">m44</span> * s.<span class="hljs-property">m44</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">g</span>([e, n, i, r, a, l, m, h, c, u, f, w, o, d, A, M]);<br>  &#125;;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">y</span> &#123;<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> (<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">a</span> = <span class="hljs-number">1</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">b</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">c</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">d</span> = <span class="hljs-number">1</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">e</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">f</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m11</span> = <span class="hljs-number">1</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m12</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m13</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m14</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m21</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m22</span> = <span class="hljs-number">1</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m23</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m24</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m31</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m32</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m33</span> = <span class="hljs-number">1</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m34</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m41</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m42</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m43</span> = <span class="hljs-number">0</span>),<br>      (<span class="hljs-variable language_">this</span>.<span class="hljs-property">m44</span> = <span class="hljs-number">1</span>),<br>      t ? <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setMatrixValue</span>(t) : <span class="hljs-variable language_">this</span><br>    );<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title function_">isIdentity</span>() &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m11</span> === <span class="hljs-number">1</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m12</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m13</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m14</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m21</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m22</span> === <span class="hljs-number">1</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m23</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m24</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m31</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m32</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m33</span> === <span class="hljs-number">1</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m34</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m41</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m42</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m43</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m44</span> === <span class="hljs-number">1</span><br>    );<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title function_">is2D</span>() &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m31</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m32</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m33</span> === <span class="hljs-number">1</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m34</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m43</span> === <span class="hljs-number">0</span> &amp;&amp;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">m44</span> === <span class="hljs-number">1</span><br>    );<br>  &#125;<br>  <span class="hljs-title function_">setMatrixValue</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> t == <span class="hljs-string">&quot;string&quot;</span> &amp;&amp; t.<span class="hljs-property">length</span> &amp;&amp; t !== <span class="hljs-string">&quot;none&quot;</span><br>      ? <span class="hljs-title function_">O</span>(t)<br>      : <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(t) ||<br>        t <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Float64Array</span> ||<br>        t <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Float32Array</span><br>      ? <span class="hljs-title function_">g</span>(t)<br>      : <span class="hljs-keyword">typeof</span> t == <span class="hljs-string">&quot;object&quot;</span><br>      ? <span class="hljs-title function_">X</span>(t)<br>      : <span class="hljs-variable language_">this</span>;<br>  &#125;<br>  <span class="hljs-title function_">toFloat32Array</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Float32Array</span>.<span class="hljs-title function_">from</span>(<span class="hljs-title function_">x</span>(<span class="hljs-variable language_">this</span>, t));<br>  &#125;<br>  <span class="hljs-title function_">toFloat64Array</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Float64Array</span>.<span class="hljs-title function_">from</span>(<span class="hljs-title function_">x</span>(<span class="hljs-variable language_">this</span>, t));<br>  &#125;<br>  <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">is2D</span>: t &#125; = <span class="hljs-variable language_">this</span>,<br>      e = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">toFloat64Array</span>(t).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;, &quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;t ? <span class="hljs-string">&quot;matrix&quot;</span> : <span class="hljs-string">&quot;matrix3d&quot;</span>&#125;</span>(<span class="hljs-subst">$&#123;e&#125;</span>)`</span>;<br>  &#125;<br>  <span class="hljs-title function_">toJSON</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">is2D</span>: t, <span class="hljs-attr">isIdentity</span>: e &#125; = <span class="hljs-variable language_">this</span>;<br>    <span class="hljs-keyword">return</span> &#123; ...<span class="hljs-variable language_">this</span>, <span class="hljs-attr">is2D</span>: t, <span class="hljs-attr">isIdentity</span>: e &#125;;<br>  &#125;<br>  <span class="hljs-title function_">multiply</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, t);<br>  &#125;<br>  <span class="hljs-title function_">translate</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>    <span class="hljs-keyword">const</span> i = t;<br>    <span class="hljs-keyword">let</span> r = e,<br>      a = n;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="hljs-keyword">typeof</span> r &gt; <span class="hljs-string">&quot;u&quot;</span> &amp;&amp; (r = <span class="hljs-number">0</span>), <span class="hljs-keyword">typeof</span> a &gt; <span class="hljs-string">&quot;u&quot;</span> &amp;&amp; (a = <span class="hljs-number">0</span>), <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">Y</span>(i, r, a))<br>    );<br>  &#125;<br>  <span class="hljs-title function_">scale</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>    <span class="hljs-keyword">const</span> i = t;<br>    <span class="hljs-keyword">let</span> r = e,<br>      a = n;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="hljs-keyword">typeof</span> r &gt; <span class="hljs-string">&quot;u&quot;</span> &amp;&amp; (r = t), <span class="hljs-keyword">typeof</span> a &gt; <span class="hljs-string">&quot;u&quot;</span> &amp;&amp; (a = <span class="hljs-number">1</span>), <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">I</span>(i, r, a))<br>    );<br>  &#125;<br>  <span class="hljs-title function_">rotate</span>(<span class="hljs-params">t, e, n</span>) &#123;<br>    <span class="hljs-keyword">let</span> i = t,<br>      r = e || <span class="hljs-number">0</span>,<br>      a = n || <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="hljs-keyword">typeof</span> t == <span class="hljs-string">&quot;number&quot;</span> &amp;&amp;<br>        <span class="hljs-keyword">typeof</span> e &gt; <span class="hljs-string">&quot;u&quot;</span> &amp;&amp;<br>        <span class="hljs-keyword">typeof</span> n &gt; <span class="hljs-string">&quot;u&quot;</span> &amp;&amp;<br>        ((a = i), (i = <span class="hljs-number">0</span>), (r = <span class="hljs-number">0</span>)),<br>      <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">F</span>(i, r, a))<br>    );<br>  &#125;<br>  <span class="hljs-title function_">rotateAxisAngle</span>(<span class="hljs-params">t, e, n, i</span>) &#123;<br>    <span class="hljs-keyword">if</span> ([t, e, n, i].<span class="hljs-title function_">some</span>(<span class="hljs-function">(<span class="hljs-params">r</span>) =&gt;</span> <span class="hljs-title class_">Number</span>.<span class="hljs-built_in">isNaN</span>(+r)))<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;CSSMatrix: expecting 4 values&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">T</span>(t, e, n, i));<br>  &#125;<br>  <span class="hljs-title function_">skewX</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">R</span>(t));<br>  &#125;<br>  <span class="hljs-title function_">skewY</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">D</span>(t));<br>  &#125;<br>  <span class="hljs-title function_">skew</span>(<span class="hljs-params">t, e</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">N</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-title function_">v</span>(t, e));<br>  &#125;<br>  <span class="hljs-title function_">transformPoint</span>(<span class="hljs-params">t</span>) &#123;<br>    <span class="hljs-keyword">const</span> e = <span class="hljs-variable language_">this</span>.<span class="hljs-property">m11</span> * t.<span class="hljs-property">x</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m21</span> * t.<span class="hljs-property">y</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m31</span> * t.<span class="hljs-property">z</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m41</span> * t.<span class="hljs-property">w</span>,<br>      n = <span class="hljs-variable language_">this</span>.<span class="hljs-property">m12</span> * t.<span class="hljs-property">x</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m22</span> * t.<span class="hljs-property">y</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m32</span> * t.<span class="hljs-property">z</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m42</span> * t.<span class="hljs-property">w</span>,<br>      i = <span class="hljs-variable language_">this</span>.<span class="hljs-property">m13</span> * t.<span class="hljs-property">x</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m23</span> * t.<span class="hljs-property">y</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m33</span> * t.<span class="hljs-property">z</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m43</span> * t.<span class="hljs-property">w</span>,<br>      r = <span class="hljs-variable language_">this</span>.<span class="hljs-property">m14</span> * t.<span class="hljs-property">x</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m24</span> * t.<span class="hljs-property">y</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m34</span> * t.<span class="hljs-property">z</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">m44</span> * t.<span class="hljs-property">w</span>;<br>    <span class="hljs-keyword">return</span> t <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">DOMPoint</span><br>      ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMPoint</span>(e, n, i, r)<br>      : &#123; <span class="hljs-attr">x</span>: e, <span class="hljs-attr">y</span>: n, <span class="hljs-attr">z</span>: i, <span class="hljs-attr">w</span>: r &#125;;<br>  &#125;<br>&#125;<br><span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;Translate&quot;</span>, Y),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;Rotate&quot;</span>, F),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;RotateAxisAngle&quot;</span>, T),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;Scale&quot;</span>, I),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;SkewX&quot;</span>, R),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;SkewY&quot;</span>, D),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;Skew&quot;</span>, v),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;Multiply&quot;</span>, N),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;fromArray&quot;</span>, g),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;fromMatrix&quot;</span>, X),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;fromString&quot;</span>, O),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;toArray&quot;</span>, x),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;isCompatibleArray&quot;</span>, E),<br>  <span class="hljs-title function_">p</span>(y, <span class="hljs-string">&quot;isCompatibleObject&quot;</span>, P);<br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = y;<br><span class="hljs-comment">//# sourceMappingURL=dommatrix.cjs.map</span><br></code></pre></td></tr></table></figure><p> 使用</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">gesture-view</span></span><br><span class="hljs-tag">  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100vw&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100vh&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">translateYValue</span>=<span class="hljs-string">&quot;&#123;&#123;translateYValue&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scaleMin</span>=<span class="hljs-string">&quot;&#123;&#123;0.6&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">rotate</span>=<span class="hljs-string">&quot;&#123;&#123;false&#125;&#125;&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>text<br><span class="hljs-tag">&lt;/<span class="hljs-name">gesture-view</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span></span><br><span class="hljs-tag">  <span class="hljs-attr">animation</span>=<span class="hljs-string">&quot;&#123;&#123;animationData&#125;&#125;&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>somethings<br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">bind:tap</span>=<span class="hljs-string">&quot;switch&quot;</span>&gt;</span><br>  切换<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">data</span>:&#123;<br>  <span class="hljs-attr">animation</span>: <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">animationDuration</span>: <span class="hljs-number">300</span>,<br>&#125;,<br><br><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animation</span> = wx.<span class="hljs-title function_">createAnimation</span>(&#123;<br>    <span class="hljs-attr">duration</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animationDuration</span>,<br>  &#125;);<br>&#125;,<br><br><span class="hljs-keyword">switch</span>()&#123;<br>   <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animation</span>.<span class="hljs-title function_">scale</span>(<span class="hljs-number">0.96</span>).<span class="hljs-title function_">opacity</span>(<span class="hljs-number">0.6</span>).<span class="hljs-title function_">step</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>      <span class="hljs-attr">animationData</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animation</span>.<span class="hljs-title function_">export</span>(),<br>    &#125;);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animation</span>.<span class="hljs-title function_">scale</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">opacity</span>(<span class="hljs-number">1</span>).<span class="hljs-title function_">step</span>();<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>        <span class="hljs-attr">animationData</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animation</span>.<span class="hljs-title function_">export</span>(),<br>      &#125;);<br>    &#125;, <span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animationDuration</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="微信小程序各种分享逻辑"><a href="#微信小程序各种分享逻辑" class="headerlink" title="微信小程序各种分享逻辑"></a>微信小程序各种分享逻辑</h3><h4 id="小程序原生页面内分享（open-type-”share）"><a href="#小程序原生页面内分享（open-type-”share）" class="headerlink" title="小程序原生页面内分享（open-type=”share）"></a>小程序原生页面内分享（open-type=”share）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;active-share-button&quot;</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">&quot;share&quot;</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;share-action-text&quot;</span>&gt;</span>分享<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Page</span>(&#123;<br>  <span class="hljs-title function_">onShareAppMessage</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function"><span class="hljs-params">resolve</span> =&gt;</span> &#123;<br>      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolve</span>(&#123;<br>          <span class="hljs-attr">userName</span>: <span class="hljs-string">&#x27;小程序原始id&#x27;</span>,  <br>          <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;pages/index/index&#x27;</span>,<br>          <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;标题&#x27;</span>,<br>          <span class="hljs-attr">imagePath</span>: <span class="hljs-string">&#x27;/pages/thumb.png&#x27;</span>,<br>          <span class="hljs-attr">webpageUrl</span>: <span class="hljs-string">&#x27;www.qq.com&#x27;</span>,<br>          <span class="hljs-attr">withShareTicket</span>: <span class="hljs-literal">true</span>,<br>          <span class="hljs-attr">miniprogramType</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">scene</span>: <span class="hljs-number">0</span>, <br>        &#125;)<br>      &#125;, <span class="hljs-number">2000</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">userName</span>: <span class="hljs-string">&#x27;小程序原始id&#x27;</span>,  <br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;pages/index/index&#x27;</span>,<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;标题&#x27;</span>,<br>      <span class="hljs-attr">imagePath</span>: <span class="hljs-string">&#x27;/pages/thumb.png&#x27;</span>,<br>      <span class="hljs-attr">webpageUrl</span>: <span class="hljs-string">&#x27;www.qq.com&#x27;</span>,<br>      <span class="hljs-attr">withShareTicket</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">miniprogramType</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">scene</span>: <span class="hljs-number">0</span>, <br>      promise <br>    &#125;<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><blockquote><p>此分享按钮点击后，可以直接调用起微信官方的分享弹窗，不需用通过点击右上角的三个点来进行分享</p></blockquote><h4 id="微信小程序原生页面调用分享和下载弹窗"><a href="#微信小程序原生页面调用分享和下载弹窗" class="headerlink" title="微信小程序原生页面调用分享和下载弹窗"></a>微信小程序原生页面调用分享和下载弹窗</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">wx.showShareImageMenu(&#123;<br>      path: this.data.domCanvasUrl,<br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><p>打开分享图片弹窗，可以将图片发送给朋友、收藏或下载</p></blockquote><h4 id="微信小程序webview页面分享（jssdk）"><a href="#微信小程序webview页面分享（jssdk）" class="headerlink" title="微信小程序webview页面分享（jssdk）"></a>微信小程序webview页面分享（jssdk）</h4><p>文档：<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#2">点击查看</a></p><ol><li>引入jssdk</li></ol><p>在需要调用JS接口的页面引入如下JS文件：<a href="http://res.wx.qq.com/open/js/jweixin-1.6.0.js">http://res.wx.qq.com/open/js/jweixin-1.6.0.js</a> （支持https）</p><ol start="2"><li>配置config</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 通过后端接口获取wx.config需要的参数</span><br>wx.<span class="hljs-title function_">config</span>(&#123;<br>  <span class="hljs-attr">debug</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span><br>  <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 必填，公众号的唯一标识</span><br>  <span class="hljs-attr">timestamp</span>: , <span class="hljs-comment">// 必填，生成签名的时间戳</span><br>  <span class="hljs-attr">nonceStr</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 必填，生成签名的随机串</span><br>  <span class="hljs-attr">signature</span>: <span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-comment">// 必填，签名</span><br>  <span class="hljs-attr">jsApiList</span>: [] <span class="hljs-comment">// 必填，需要使用的JS接口列表</span><br>&#125;);<br>wx.<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;   <span class="hljs-comment">//需在用户可能点击分享按钮前就先调用</span><br>  wx.<span class="hljs-title function_">updateAppMessageShareData</span>(&#123; <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 分享标题</span><br>    <span class="hljs-attr">desc</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 分享描述</span><br>    <span class="hljs-attr">link</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span><br>    <span class="hljs-attr">imgUrl</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 分享图标</span><br>    <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">// 设置成功</span><br>    &#125;<br>  &#125;)<br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><p>此行为只能设置webview中的分享内容，如：标题、文案、图片等，但是无法直接唤起微信分享弹窗，需要用户手动点击右上角三个点来进行分享，所以一般需要一个提示蒙层来提醒用户点击右上角的三个点来分享</p></blockquote><h3 id="微信小程序原生页面跳转其他小程序"><a href="#微信小程序原生页面跳转其他小程序" class="headerlink" title="微信小程序原生页面跳转其他小程序"></a>微信小程序原生页面跳转其他小程序</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.<span class="hljs-title function_">navigateToMiniProgram</span>(&#123;<br>  <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;1111&#x27;</span>,<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;page/index/index?id=123&#x27;</span>,<br>  <span class="hljs-attr">extraData</span>: &#123;<br>    <span class="hljs-attr">foo</span>: <span class="hljs-string">&#x27;bar&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">envVersion</span>: <span class="hljs-string">&#x27;develop&#x27;</span>,<br>  <span class="hljs-title function_">success</span>(<span class="hljs-params">res</span>) &#123;<br>    <span class="hljs-comment">// 打开成功</span><br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="微信小程序webview页面内唤起其他小程序-开放标签"><a href="#微信小程序webview页面内唤起其他小程序-开放标签" class="headerlink" title="微信小程序webview页面内唤起其他小程序(开放标签)"></a>微信小程序webview页面内唤起其他小程序(开放标签)</h4><p>文档：<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#21">点击查看</a></p><p>跳转小程序：wx-open-launch-weapp<br>用于页面中提供一个可跳转指定小程序的按钮。使用此标签后，用户需在网页内点击标签按钮方可跳转小程序。H5通过开放标签打开小程序的场景值为1167。</p><p>使用步骤</p><ol><li>引入jssdk</li></ol><p>在需要调用JS接口的页面引入如下JS文件：<a href="http://res.wx.qq.com/open/js/jweixin-1.6.0.js">http://res.wx.qq.com/open/js/jweixin-1.6.0.js</a> （支持https）</p><ol start="2"><li>配置config</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.<span class="hljs-title function_">config</span>(&#123;<br>  <span class="hljs-attr">debug</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印</span><br>  <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 必填，公众号的唯一标识</span><br>  <span class="hljs-attr">timestamp</span>: , <span class="hljs-comment">// 必填，生成签名的时间戳</span><br>  <span class="hljs-attr">nonceStr</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 必填，生成签名的随机串</span><br>  <span class="hljs-attr">signature</span>: <span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-comment">// 必填，签名</span><br>  <span class="hljs-attr">jsApiList</span>: [], <span class="hljs-comment">// 必填，需要使用的JS接口列表</span><br>  <span class="hljs-attr">openTagList</span>: [] <span class="hljs-comment">// 可选，需要使用的开放标签列表，例如[&#x27;wx-open-launch-app&#x27;]</span><br>&#125;);<br></code></pre></td></tr></table></figure><ol start="3"><li>在dom结构中添加wx-open-launch-weapp标签</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">wx-open-launch-weapp</span></span><br><span class="hljs-tag">  <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;launch-btn&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">appid</span>=<span class="hljs-string">&quot;wx12345678&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;pages/home/index?user=123&amp;action=abc&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/wxtag-template&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span><br><span class="language-xml"><span class="language-handlebars">    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"><span class="hljs-selector-class">.btn</span> &#123; <span class="hljs-attribute">padding</span>: <span class="hljs-number">12px</span> &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>打开小程序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">  </span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wx-open-launch-weapp</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;launch-btn&#x27;</span>);</span><br><span class="language-javascript">  btn.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;launch&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;success&#x27;</span>);</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript">  btn.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;fail&#x27;</span>, e.<span class="hljs-property">detail</span>);</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>点击页面中的分享按钮后，会自动唤起跳转目标小程序的弹窗</p></blockquote><h3 id="动画帧实现图片大小跟随scroll-view滚动而变化"><a href="#动画帧实现图片大小跟随scroll-view滚动而变化" class="headerlink" title="动画帧实现图片大小跟随scroll-view滚动而变化"></a>动画帧实现图片大小跟随scroll-view滚动而变化</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html">查看文档</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scroll-y</span>=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">enhanced</span>=<span class="hljs-string">&quot;&#123;&#123;true&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">bounces</span>=<span class="hljs-string">&quot;&#123;&#123;false&#125;&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main-appreciate-content-container&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;scroller&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">image</span></span><br><span class="hljs-tag">      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;collection_image&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;full-screen-image&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;aspectFit&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123;collectionInfo.cover_img&#125;&#125;&quot;</span></span><br><span class="hljs-tag">    /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">onReady</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">_animate</span>();<br>&#125;,<br><br><span class="hljs-title function_">_animate</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;执行&quot;</span>);<br>  wx.<span class="hljs-title function_">createSelectorQuery</span>()<br>    .<span class="hljs-title function_">select</span>(<span class="hljs-string">&quot;#scroller&quot;</span>)<br>    .<span class="hljs-title function_">fields</span>(<br>      &#123;<br>        <span class="hljs-attr">scrollOffset</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">size</span>: <span class="hljs-literal">true</span>,<br>      &#125;,<br>      <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;res: &quot;</span>, res);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">animate</span>(<br>          <span class="hljs-string">&quot;#collection_image&quot;</span>,<br>          [<br>            &#123;<br>              <span class="hljs-attr">transform</span>: <span class="hljs-string">&quot;scale(1) translateY(0)&quot;</span>,<br>            &#125;,<br>            &#123;<br>              <span class="hljs-attr">transform</span>: <span class="hljs-string">`scale(.6) translateY(-88%)`</span>,<br>            &#125;,<br>          ],<br>          <span class="hljs-number">2000</span>,<br>          &#123;<br>            <span class="hljs-attr">scrollSource</span>: <span class="hljs-string">&quot;#scroller&quot;</span>,<br>            <span class="hljs-attr">timeRange</span>: <span class="hljs-number">4000</span>,<br>            <span class="hljs-attr">startScrollOffset</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">endScrollOffset</span>: <span class="hljs-number">1200</span>,<br>          &#125;<br>        );<br>      &#125;<br>    )<br>    .<span class="hljs-title function_">exec</span>();<br>&#125;,<br></code></pre></td></tr></table></figure><blockquote><p>随着scroll-view的上下滑动，内部的collection_image图片也会根据关键帧自动进行缩放和平移</p></blockquote><h3 id="发起请求api封装"><a href="#发起请求api封装" class="headerlink" title="发起请求api封装"></a>发起请求api封装</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 记录失败请求最大次数的map</span><br><span class="hljs-keyword">let</span> maxRequestNumberMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">request</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">url, options = &#123;&#125;</span>) =&gt; &#123;<br>  <span class="hljs-comment">//console.log(&quot;options: &quot;, options);</span><br>  <span class="hljs-keyword">if</span> (url == <span class="hljs-string">&quot;&quot;</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;请求地址必传....&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> token = wx.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&quot;token&quot;</span>);<br>  <span class="hljs-keyword">const</span> wxRequestPromise = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    wx.<span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: httpApi + <span class="hljs-string">&quot;/&quot;</span> + url,<br>      <span class="hljs-attr">method</span>: options.<span class="hljs-property">method</span> || <span class="hljs-string">&quot;POST&quot;</span>,<br>      <span class="hljs-attr">data</span>: options.<span class="hljs-property">data</span> || &#123;&#125;,<br>      <span class="hljs-attr">header</span>: &#123;<br>        <span class="hljs-title class_">Authorization</span>: token ? <span class="hljs-string">&quot;Bearer &quot;</span> + token : <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-attr">version</span>: <span class="hljs-string">&quot;0.0.0&quot;</span>,<br>      &#125;,<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolve</span>(res.<span class="hljs-property">data</span>);<br>      &#125;,<br>      <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">reject</span>(&#123; <span class="hljs-attr">err</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;执行失败&quot;</span>, <span class="hljs-attr">data</span>: err &#125;);<br>      &#125;,<br>    &#125;);<br>  &#125;);<br><br>  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> wxRequestPromise;<br>  <span class="hljs-keyword">let</span> responseData = &#123;&#125;; <span class="hljs-comment">// 最终请求接口返回的数据</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isRequestSuccess</span>(result.<span class="hljs-property">code</span>)) &#123;<br>    <span class="hljs-keyword">if</span> (options?.<span class="hljs-property">resolve</span> === <span class="hljs-string">&quot;full&quot;</span>) &#123;<br>      <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(responseData, &#123; <span class="hljs-attr">err</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;执行成功&quot;</span>, <span class="hljs-attr">data</span>: result &#125;);<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;result: &quot;</span>, result);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(responseData, &#123;<br>        <span class="hljs-attr">err</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;执行成功&quot;</span>,<br>        <span class="hljs-attr">data</span>: result.<span class="hljs-property">data</span>,<br>      &#125;);<br>    &#125;<br>    <span class="hljs-keyword">return</span> responseData;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 记录当前接口的返回token不正确的次数，超过3次，我们认为是进入了死循环，终止再次请求</span><br>    <span class="hljs-keyword">if</span> (<br>      result.<span class="hljs-property">code</span> == <span class="hljs-string">&#x27;40101&#x27;</span> &amp;&amp;<br>      (maxRequestNumberMap.<span class="hljs-title function_">get</span>(url) &lt; <span class="hljs-number">3</span> ||<br>        maxRequestNumberMap.<span class="hljs-title function_">get</span>(url) == <span class="hljs-literal">undefined</span>)<br>    ) &#123;<br>      <span class="hljs-keyword">if</span> (maxRequestNumberMap.<span class="hljs-title function_">get</span>(url) === <span class="hljs-literal">undefined</span>) &#123;<br>        maxRequestNumberMap.<span class="hljs-title function_">set</span>(url, <span class="hljs-number">1</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">let</span> oldNumber = maxRequestNumberMap.<span class="hljs-title function_">get</span>(url);<br>        maxRequestNumberMap.<span class="hljs-title function_">set</span>(url, oldNumber + <span class="hljs-number">1</span>);<br>      &#125;<br>      <span class="hljs-comment">// 未登录或者token过期，需要先更新token，再重新发起请求，并合并数据</span><br>      <span class="hljs-keyword">const</span> appInstance = <span class="hljs-title function_">getApp</span>();<br>      <span class="hljs-keyword">await</span> <span class="hljs-title function_">updateUserInfoByWXLogin</span>(appInstance);<br>      <span class="hljs-keyword">const</span> innerRequest = <span class="hljs-keyword">await</span> <span class="hljs-title function_">request</span>(url, options);<br>      <span class="hljs-keyword">if</span> (options?.<span class="hljs-property">resolve</span> === <span class="hljs-string">&quot;full&quot;</span>) &#123;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(responseData, &#123;<br>          <span class="hljs-attr">err</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;执行成功&quot;</span>,<br>          <span class="hljs-attr">data</span>: innerRequest,<br>        &#125;);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(responseData, &#123;<br>          <span class="hljs-attr">err</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;执行成功&quot;</span>,<br>          <span class="hljs-attr">data</span>: innerRequest.<span class="hljs-property">data</span>,<br>        &#125;);<br>      &#125;<br>      <span class="hljs-keyword">return</span> responseData;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">if</span> (result.<span class="hljs-property">msg</span>) &#123;<br>       wx.<span class="hljs-title function_">showToast</span>(&#123;<br>         <span class="hljs-attr">title</span>: result.<span class="hljs-property">msg</span>,<br>         <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;error&#x27;</span>,<br>         <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>       &#125;)<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(&#123; result &#125;);<br>    &#125;<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isRequestSuccess</span>(<span class="hljs-params">code</span>) &#123;<br>  <span class="hljs-keyword">let</span> pass =<br>    code == <span class="hljs-string">&#x27;20001&#x27;</span> || code == <span class="hljs-string">&#x27;20101&#x27;</span> || code == <span class="hljs-string">&#x27;20401&#x27;</span>;<br>  <span class="hljs-keyword">return</span> pass;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">updateUserInfoByWXLogin</span>(<span class="hljs-params">app</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 通过wx.login获取微信code</span><br>    <span class="hljs-comment">// 使用该code去后端换取用户信息、openId、unionId等</span><br>    wx.<span class="hljs-title function_">login</span>(&#123;<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> url = <span class="hljs-string">&quot;index/login&quot;</span>;<br>        <span class="hljs-keyword">let</span> options = &#123; <span class="hljs-attr">code</span>: res.<span class="hljs-property">code</span> &#125;;<br>        wx.<span class="hljs-title function_">request</span>(&#123;<br>          <span class="hljs-attr">url</span>: httpApi + <span class="hljs-string">&quot;/&quot;</span> + url,<br>          <span class="hljs-attr">method</span>: options.<span class="hljs-property">method</span> || <span class="hljs-string">&quot;POST&quot;</span>,<br>          <span class="hljs-attr">data</span>: options || &#123;&#125;,<br>          <span class="hljs-attr">header</span>: &#123;&#125;,<br>          <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">const</span> result = res.<span class="hljs-property">data</span>;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;result: ---------&quot;</span>, result);<br>            <span class="hljs-keyword">const</span> &#123; user &#125; = result.<span class="hljs-property">data</span>;<br>            wx.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;userInfo&quot;</span>, user);<br>            wx.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;openId&quot;</span>, user.<span class="hljs-property">wx_user</span>.<span class="hljs-property">openid</span>);<br>            wx.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;unionId&quot;</span>, user.<span class="hljs-property">wx_user</span>.<span class="hljs-property">unionid</span>);<br>            wx.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;token&quot;</span>, result.<span class="hljs-property">data</span>.<span class="hljs-property">token</span>);<br>            wx.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&quot;shopToken&quot;</span>, result.<span class="hljs-property">data</span>.<span class="hljs-property">shop_token</span>);<br><br>            <span class="hljs-comment">//console.log(app, &quot;获取小程序主体&quot;);</span><br>            app.<span class="hljs-property">globalData</span>.<span class="hljs-property">token</span> = result.<span class="hljs-property">data</span>.<span class="hljs-property">token</span>;<br>            <span class="hljs-title function_">resolve</span>(&#123; <span class="hljs-attr">token</span>: result.<span class="hljs-property">data</span>.<span class="hljs-property">token</span> &#125;);<br>          &#125;,<br>        &#125;);<br>      &#125;,<br>    &#125;);<br>  &#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="wxParse组件库"><a href="#wxParse组件库" class="headerlink" title="wxParse组件库"></a>wxParse组件库</h3><p>微信小程序提供的rich-text仅适合简单富文本业务，复杂业务如：视频播放等无法比较好的展示出来，所以需要有额外的富文本解析组件来实现，如：mp-html等，<br>但是mp-html对视频解析是有问题的，所以引入了 wxParse组件库</p><p>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;wxParse nodes=<span class="hljs-string">&quot;&#123;&#123; currentArticleInfo.content &#125;&#125;&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><p>wxParse组件代码位于：根目录/example-code/微信小程序使用/wxParse</p><p>组件支持markdown和html两种解析模式</p><h3 id="调用微信支付功能"><a href="#调用微信支付功能" class="headerlink" title="调用微信支付功能"></a>调用微信支付功能</h3><p>调用支付方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">shopRequest</span>(<span class="hljs-string">&quot;checkout/confirm&quot;</span>, &#123;<br>    <span class="hljs-attr">data</span>: orderData,<br>  &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>      <span class="hljs-title function_">usePayment</span>(res.<span class="hljs-property">provider</span>., res.<span class="hljs-property">order_id</span>)<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;支付成功&#x27;</span>)<br>    &#125;)<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>支付方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; shopRequest &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./api&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">usePayment</span>(<span class="hljs-params">provider, order_id</span>) &#123;<br>   <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">shopRequest</span>(<span class="hljs-string">`orders/<span class="hljs-subst">$&#123;order_id&#125;</span>/pay`</span>)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        wx.<span class="hljs-title function_">requestPayment</span>(&#123;<br>          <span class="hljs-comment">// provider: &quot;wxpay&quot;,</span><br>          <span class="hljs-attr">provider</span>: provider,<br>          <span class="hljs-attr">timeStamp</span>: <span class="hljs-title class_">String</span>(res.<span class="hljs-property">timeStamp</span>),<br>          <span class="hljs-attr">nonceStr</span>: res.<span class="hljs-property">nonceStr</span>,<br>          <span class="hljs-attr">package</span>: res.<span class="hljs-property">package</span>,<br>          <span class="hljs-attr">signType</span>: res.<span class="hljs-property">signType</span>,<br>          <span class="hljs-attr">paySign</span>: res.<span class="hljs-property">paySign</span>,<br>          <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) &#123;<br>            <span class="hljs-title function_">resolve</span>(res);<br>          &#125;,<br>          <span class="hljs-attr">fail</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) &#123;<br>            <span class="hljs-title function_">reject</span>(err);<br>          &#125;,<br>          <span class="hljs-attr">complete</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res);<br>          &#125;,<br>        &#125;);<br>      &#125;)<br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">reject</span>(err);<br>      &#125;);<br>  &#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>实现步骤：</p><blockquote><ol><li>checkout/confirm传入支付数据，生成订单信息；</li><li>获取到生成的订单信息后，填入支付方式(provider)和订单id(order_id)，调用usePayment；</li><li>usePayment通过order_id接口查询到wx.requestPayment支付方法所需要的数据，则可以调起官方微信支付功能</li></ol></blockquote><p>tips：</p><blockquote><p>provider：支付方式，这是与后端约定的一个自定义属性，非支付必选属性，此处wxpay为微信支付的意思</p></blockquote><h3 id="微信判断蓝牙权限"><a href="#微信判断蓝牙权限" class="headerlink" title="微信判断蓝牙权限"></a>微信判断蓝牙权限</h3><p>微信蓝牙权限分为3种：1.手机蓝牙权限；2.手机授予微信蓝牙权限；3.微信授予小程序蓝牙权限。</p><p>那么怎么精准的提示用户哪些权限没有开启呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// ----------------------首先判断微信授予小程序蓝牙权限---------------------------</span><br><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">askForAuth</span>(<span class="hljs-string">&quot;scope.bluetooth&quot;</span>, &#123;<br>    <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;定位功能需要使用“蓝牙”权限&quot;</span>,<br>  &#125;);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;res:askForAuth &quot;</span>, res);<br><br>  <span class="hljs-keyword">if</span> (!res) &#123;<br>    <span class="hljs-title function_">showToastWithoutIcon</span>(<span class="hljs-string">&quot;请确保小程序蓝牙权限已授权！&quot;</span>, &#123;<br>      <span class="hljs-attr">duration</span>: <span class="hljs-number">5000</span>,<br>    &#125;);<br>    <span class="hljs-title function_">sendSelfTrackEvent</span>(&#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>      <span class="hljs-attr">data</span>: &#123;<br>        <span class="hljs-attr">bluetooth</span>: <span class="hljs-string">&quot;小程序未授权蓝牙权限&quot;</span>,<br>      &#125;,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-comment">// ------------------------然后判断手机授予微信蓝牙权限---------------------------</span><br>wx.<span class="hljs-title function_">openBluetoothAdapter</span>(&#123;<br>    <span class="hljs-attr">mode</span>: <span class="hljs-string">&quot;peripheral&quot;</span>,<br>    <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(err);<br>      <span class="hljs-keyword">if</span> (err.<span class="hljs-property">errCode</span> === <span class="hljs-number">10001</span>) &#123;<br>        <span class="hljs-title function_">showToastWithoutIcon</span>(<span class="hljs-string">&quot;请确保手机已经授权微信的蓝牙权限&quot;</span>, &#123;<br>          <span class="hljs-attr">duration</span>: <span class="hljs-number">5000</span>,<br>        &#125;);<br>        <span class="hljs-title function_">sendSelfTrackEvent</span>(&#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>          <span class="hljs-attr">data</span>: &#123;<br>            <span class="hljs-attr">bluetooth</span>: <span class="hljs-string">&quot;手机未授权微信蓝牙权限&quot;</span>,<br>          &#125;,<br>        &#125;);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 未知蓝牙错误，需要查询微信开发者文档</span><br>        <span class="hljs-title function_">showToastWithoutIcon</span>(<span class="hljs-string">&quot;蓝牙工作异常！请稍后再试~&quot;</span>, &#123;<br>          <span class="hljs-attr">duration</span>: <span class="hljs-number">5000</span>,<br>        &#125;);<br>        <span class="hljs-title function_">sendSelfTrackEvent</span>(&#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>          <span class="hljs-attr">data</span>: &#123;<br>            <span class="hljs-attr">bluetooth</span>: <span class="hljs-string">&quot;蓝牙错误码：&quot;</span> + <span class="hljs-title class_">String</span>(err.<span class="hljs-property">errCode</span>),<br>          &#125;,<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">success</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> systemSetting = wx.<span class="hljs-title function_">getSystemSetting</span>();<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>        <span class="hljs-string">&quot;systemSetting.bluetoothEnabled: &quot;</span>,<br>        systemSetting.<span class="hljs-property">bluetoothEnabled</span><br>      );<br>      <span class="hljs-comment">// --------------------最后判断手机蓝牙权限------------------------</span><br>      <span class="hljs-comment">//必须要手机蓝牙开启并且授予微信蓝牙权限，bluetoothEnabled才为true</span><br>      <span class="hljs-keyword">if</span> (!systemSetting.<span class="hljs-property">bluetoothEnabled</span>) &#123;<br>        <span class="hljs-title function_">showToastWithoutIcon</span>(<span class="hljs-string">&quot;请确保手机蓝牙已打开！&quot;</span>, &#123;<br>          <span class="hljs-attr">duration</span>: <span class="hljs-number">5000</span>,<br>        &#125;);<br>        <span class="hljs-title function_">sendSelfTrackEvent</span>(&#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>          <span class="hljs-attr">data</span>: &#123;<br>            <span class="hljs-attr">bluetooth</span>: <span class="hljs-string">&quot;手机蓝牙未打开&quot;</span>,<br>          &#125;,<br>        &#125;);<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;success: &quot;</span>, success);<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&quot;isBluetoothReady&quot;</span>);<br>      wx.<span class="hljs-title function_">onBluetoothAdapterStateChange</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> &#123; available &#125; = res;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;available: &quot;</span>, available);<br>        <span class="hljs-keyword">if</span> (!available) &#123;<br>          <span class="hljs-comment">// 手机未打开蓝牙权限</span><br>          <span class="hljs-title function_">showToastWithoutIcon</span>(<span class="hljs-string">&quot;请打开手机蓝牙权限&quot;</span>);<br>          <span class="hljs-title function_">sendSelfTrackEvent</span>(&#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>            <span class="hljs-attr">data</span>: &#123;<br>              <span class="hljs-attr">bluetooth</span>: <span class="hljs-string">&quot;手机未打开蓝牙权限&quot;</span>,<br>            &#125;,<br>          &#125;);<br>        &#125;<br>      &#125;);<br>    &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 工具函数</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">askForAuth</span>(<span class="hljs-params"></span><br><span class="hljs-params">  scope,</span><br><span class="hljs-params">  config = &#123; content: <span class="hljs-string">&quot;需要授权才能继续操作&quot;</span> &#125;</span><br><span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">getSetting</span>)();<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">authSetting</span>[scope]) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br><br>  res = <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>    wx.<span class="hljs-title function_">authorize</span>(&#123;<br>      scope,<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>),<br>      <span class="hljs-attr">fail</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">false</span>),<br>    &#125;);<br>  &#125;);<br>  <span class="hljs-keyword">if</span> (res) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">showAuthModal</span>(scope, config);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">showAuthModal</span>(<span class="hljs-params">scope, config = &#123; content: <span class="hljs-string">&quot;&quot;</span> &#125;</span>) &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> defaultConfig = &#123;<br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;提示&quot;</span>,<br>      <span class="hljs-attr">confirmText</span>: <span class="hljs-string">&quot;立即授权&quot;</span>,<br>      <span class="hljs-attr">confirmColor</span>: <span class="hljs-string">&quot;#02BB00&quot;</span>,<br>    &#125;;<br><br>    <span class="hljs-keyword">const</span> &#123; confirm &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">showModal</span>)(&#123;<br>      ...defaultConfig,<br>      ...config,<br>    &#125;);<br>    <span class="hljs-keyword">if</span> (confirm) &#123;<br>      <span class="hljs-keyword">const</span> &#123;<br>        <span class="hljs-attr">authSetting</span>: &#123; [scope]: isAuth &#125;,<br>      &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">promisify</span>(wx.<span class="hljs-property">openSetting</span>)();<br>      <span class="hljs-keyword">if</span> (isAuth) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">showAuthModal</span>(scope, config);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(e);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">promisify</span>(<span class="hljs-params">fn, context</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...config</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>      config[<span class="hljs-number">0</span>] = &#123;<br>        ...config[<span class="hljs-number">0</span>],<br>        <span class="hljs-attr">success</span>: resolve,<br>        <span class="hljs-attr">fail</span>: reject,<br>      &#125;;<br>      <span class="hljs-keyword">const</span> result = fn.<span class="hljs-title function_">apply</span>(context || wx, config);<br>      <span class="hljs-keyword">if</span> (config &amp;&amp; <span class="hljs-keyword">typeof</span> config.<span class="hljs-property">result</span> === <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>        config.<span class="hljs-title function_">result</span>(result);<br>      &#125;<br>    &#125;);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="scroll-view中的元素无法通过z-index覆盖scroll-view外的元素"><a href="#scroll-view中的元素无法通过z-index覆盖scroll-view外的元素" class="headerlink" title="scroll-view中的元素无法通过z-index覆盖scroll-view外的元素"></a>scroll-view中的元素无法通过z-index覆盖scroll-view外的元素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs wxml">&lt;view class=&quot;container&quot;&gt;<br>  &lt;view style=&quot;height: 40vh; background-color: red; width: 100vw&quot;&gt;&lt;/view&gt;<br>  &lt;scroll-view scroll-y=&quot;&#123;&#123;true&#125;&#125;&quot; class=&quot;scroll-view-container&quot;&gt;<br>    &lt;!-- 通过root-portal设置元素层级有效 --&gt;<br>    &lt;root-portal enable=&quot;&#123;&#123;true&#125;&#125;&quot; style=&quot;width: 100vw; height: 220rpx&quot;&gt;<br>      &lt;view class=&quot;inner&quot;&gt;我是弹出层&lt;/view&gt;<br>    &lt;/root-portal&gt;<br><br>    &lt;!-- 通过z-index设置元素层级无效 --&gt;<br>    &lt;!-- &lt;view class=&quot;inner-no-portal&quot;&gt;我是弹出层&lt;/view&gt; --&gt;<br>  &lt;/scroll-view&gt;<br>  &lt;view class=&quot;mask&quot;&gt; &lt;/view&gt;<br>&lt;/view&gt;<br><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-flow</span>: column nowrap;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: flex-start;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mask</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>($color: <span class="hljs-number">#000</span>, $alpha: <span class="hljs-number">80%</span>);<br>  inset: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.inner</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-flow</span>: column nowrap;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">220</span>rpx;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>&#125;<br><br><span class="hljs-selector-class">.inner-no-portal</span> &#123;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-flow</span>: column nowrap;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">220</span>rpx;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js相关使用</title>
    <link href="/2022/09/14/JS%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/09/14/JS%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="js-相关使用"><a href="#js-相关使用" class="headerlink" title="js 相关使用"></a>js 相关使用</h2><span id="more"></span><h3 id="常用判断工具"><a href="#常用判断工具" class="headerlink" title="常用判断工具"></a>常用判断工具</h3><blockquote><p>JavaScript 有很多的判断工具，如 Lodash.js 这些库来辅助判断，里面有额外的很多对象、数组、函数。以下记录一些手写的 js 方法，包含各种判断：是否是链接，是否为空，是否是对象，是否为空等常用功能，</p></blockquote><h4 id="通用判断功能"><a href="#通用判断功能" class="headerlink" title="通用判断功能"></a>通用判断功能</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> toString = <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">is</span>(<span class="hljs-params">val: unknown, type: string</span>) &#123;<br><span class="hljs-keyword">return</span> toString.<span class="hljs-title function_">call</span>(val) === <span class="hljs-string">`[object <span class="hljs-subst">$&#123;type&#125;</span>]`</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> isDef&lt;T = unknown&gt;(val?: T): val is T &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> val !== <span class="hljs-string">&#x27;undefined&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> isUnDef&lt;T = unknown&gt;(val?: T): val is T &#123;<br><span class="hljs-keyword">return</span> !<span class="hljs-title function_">isDef</span>(val);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isObject</span>(<span class="hljs-params">val: any</span>): val is <span class="hljs-title class_">Record</span>&lt;any, any&gt; &#123;<br><span class="hljs-keyword">return</span> val !== <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Object&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> isEmpty&lt;T = unknown&gt;(<span class="hljs-attr">val</span>: T): val is T &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_">isArray</span>(val) || <span class="hljs-title function_">isString</span>(val)) &#123;<br><span class="hljs-keyword">return</span> val.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (val <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Map</span> || val <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Set</span>) &#123;<br><span class="hljs-keyword">return</span> val.<span class="hljs-property">size</span> === <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_">isObject</span>(val)) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(val).<span class="hljs-property">length</span> === <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isDate</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-title class_">Date</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Date&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isNull</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-literal">null</span> &#123;<br><span class="hljs-keyword">return</span> val === <span class="hljs-literal">null</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isNullAndUnDef</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-literal">null</span> | <span class="hljs-literal">undefined</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">isUnDef</span>(val) &amp;&amp; <span class="hljs-title function_">isNull</span>(val);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isNullOrUnDef</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-literal">null</span> | <span class="hljs-literal">undefined</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">isUnDef</span>(val) || <span class="hljs-title function_">isNull</span>(val);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isNumber</span>(<span class="hljs-params">val: unknown</span>): val is number &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Number&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> isPromise&lt;T = any&gt;(<span class="hljs-attr">val</span>: unknown): val is <span class="hljs-title class_">Promise</span>&lt;T&gt; &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Promise&#x27;</span>) &amp;&amp; <span class="hljs-title function_">isObject</span>(val) &amp;&amp; <span class="hljs-title function_">isFunction</span>(val.<span class="hljs-property">then</span>) &amp;&amp; <span class="hljs-title function_">isFunction</span>(val.<span class="hljs-property">catch</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isString</span>(<span class="hljs-params">val: unknown</span>): val is string &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;String&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isFunction</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-title class_">Function</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">&#x27;function&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isBoolean</span>(<span class="hljs-params">val: unknown</span>): val is boolean &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Boolean&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isRegExp</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-title class_">RegExp</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;RegExp&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isArray</span>(<span class="hljs-params">val: any</span>): val is <span class="hljs-title class_">Array</span>&lt;any&gt; &#123;<br><span class="hljs-keyword">return</span> val &amp;&amp; <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(val);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isWindow</span>(<span class="hljs-params">val: any</span>): val is <span class="hljs-title class_">Window</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span> !== <span class="hljs-string">&#x27;undefined&#x27;</span> &amp;&amp; <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Window&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isElement</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-title class_">Element</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">isObject</span>(val) &amp;&amp; !!val.<span class="hljs-property">tagName</span>;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isMap</span>(<span class="hljs-params">val: unknown</span>): val is <span class="hljs-title class_">Map</span>&lt;any, any&gt; &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">is</span>(val, <span class="hljs-string">&#x27;Map&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isServer = <span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span> === <span class="hljs-string">&#x27;undefined&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> isClient = !isServer;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">isUrl</span>(<span class="hljs-params">path: string</span>): boolean &#123;<br><span class="hljs-keyword">const</span> reg =<br><span class="hljs-regexp">/(((^https?:(?:\/\/)?)(?:[-;:&amp;=\+\$,\w]+@)?[A-Za-z0-9.-]+(?::\d+)?|(?:www.|[-;:&amp;=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]_)?\??(?:[-\+=&amp;;%@.\w_]_)#?(?:[\w]\*))?)$/</span>;<br><span class="hljs-keyword">return</span> reg.<span class="hljs-title function_">test</span>(path);<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js">只允许输入数字(整数：小数点不能输入)<br><br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> onkeyup=<span class="hljs-string">&quot;value=value.replace(/[^\d]/g,&#x27;&#x27;)&quot;</span> &gt;<br><br>允许输入小数(两位小数)<br><br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> onkeyup=<span class="hljs-string">&quot;value=value.replace(/^\D*(\d*(?:\.\d&#123;0,2&#125;)?).*$/g, &#x27;$1&#x27;)&quot;</span> &gt;<br><br>允许输入小数(一位小数)<br><br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> onkeyup=<span class="hljs-string">&quot;value=value.replace(/^\D*(\d*(?:\.\d&#123;0,1&#125;)?).*$/g, &#x27;$1&#x27;)&quot;</span> &gt;<br><br>开头不能为<span class="hljs-number">0</span>，且不能输入小数<br><br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> onkeyup=<span class="hljs-string">&quot;value=value.replace(/[^\d]/g,&#x27;&#x27;).replace(/^0&#123;1,&#125;/g,&#x27;&#x27;)&quot;</span> &gt;<br><br>只能输入数字或小数且第一位不能是<span class="hljs-number">0</span>和点且只能有一个点<br><br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> onkeyup=<span class="hljs-string">&quot;value=value.replace(/[^1-9]&#123;0,1&#125;(\d*(?:\.\d&#123;0,2&#125;)?).*$/g, &#x27;$1&#x27;)&quot;</span> &gt;<br><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 只允许输入数字，并且只能保留两位小数，不能以小数点开头，不能以小数点结尾</span><br><span class="hljs-keyword">let</span> judge = <span class="hljs-regexp">/^([1-9][\d]&#123;0,&#125;|0)(\.[\d]&#123;1,2&#125;)?$/</span>; <span class="hljs-comment">//限制小数点前无穷位，小数点后2位数</span><br>judge.<span class="hljs-title function_">test</span>(value);<br></code></pre></td></tr></table></figure><h3 id="纯-js-实现上传视频，截取关键帧及全屏截图"><a href="#纯-js-实现上传视频，截取关键帧及全屏截图" class="headerlink" title="纯 js 实现上传视频，截取关键帧及全屏截图"></a>纯 js 实现上传视频，截取关键帧及全屏截图</h3><p>Web 端的截图(生成图片)并不算是个高频的需求，资料自然也不算多，查来查去，也不过 Canvas 和 SVG 两种实现方案，原理大概相似，都非真正义上的截图而是把 DOM 转为图片，然而实现方式却截然不同。</p><!-- more --><blockquote><p>context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);</p></blockquote><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>对上传的视频进行截图，生成对应帧图片。对网站页面进行截图</p><h4 id="实现视频截图"><a href="#实现视频截图" class="headerlink" title="实现视频截图"></a>实现视频截图</h4><ol><li><p>上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html\">&lt;el-upload<br>  class=&quot;upload-demo&quot;<br>  :before-upload=&quot;beforeUpload&quot;<br>  :action=&quot;uploadUrl&quot;<br>  :on-success=&quot;uploadSuccess&quot;<br>  :file-list=&quot;fileList&quot;<br>&gt;<br>  &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt;<br>&lt;/el-upload&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">beforeUpload</span>(<span class="hljs-params">file</span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">movieUrl</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">createObjectURL</span>(file);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>通过 canvas 转出 img</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">shootIt</span>(<span class="hljs-params"></span>) &#123;<br>     <span class="hljs-keyword">let</span> video = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">uploadVideo</span>;<br>     <span class="hljs-keyword">let</span> imgHeight = <span class="hljs-number">0</span>;<br>     <span class="hljs-keyword">let</span> imgWidth = <span class="hljs-number">0</span>;<br>     <span class="hljs-keyword">let</span> videoWidth = <span class="hljs-number">0</span>;<br>     <span class="hljs-keyword">let</span> videoHeight = <span class="hljs-number">0</span>;<br>     <span class="hljs-keyword">let</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>);<br>     <span class="hljs-keyword">let</span> canvasCtx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>     <span class="hljs-comment">//获取展示的video宽高作为画布的宽高和临时视频截图的宽高</span><br>     <span class="hljs-variable language_">this</span>.<span class="hljs-property">info</span>.<span class="hljs-property">swidth</span> = canvas.<span class="hljs-property">width</span> = imgWidth = video.<span class="hljs-property">offsetWidth</span>;<br>     <span class="hljs-variable language_">this</span>.<span class="hljs-property">info</span>.<span class="hljs-property">sheight</span> = canvas.<span class="hljs-property">height</span> = imgHeight = video.<span class="hljs-property">offsetHeight</span>;<br>     <span class="hljs-comment">//获取实际视频的宽高，相当于视频分辨率吧</span><br>     videoWidth = video.<span class="hljs-property">videoWidth</span>;<br>     videoHeight = video.<span class="hljs-property">videoHeight</span>;<br>     <span class="hljs-comment">//坐原图像的x,y轴坐标，大小，目标图像的x，y轴标，大小。</span><br>     canvasCtx.<span class="hljs-title function_">drawImage</span>(<br>       video,<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">0</span>,<br>       videoWidth,<br>       videoHeight,<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">0</span>,<br>       imgWidth,<br>       imgHeight<br>     );<br>     <span class="hljs-comment">//把图标base64编码后变成一段url字符串</span><br>     <span class="hljs-keyword">let</span> dataUrl = canvas.<span class="hljs-title function_">toDataURL</span>(<span class="hljs-string">&quot;image/png&quot;</span>);<br>     <span class="hljs-variable language_">this</span>.<span class="hljs-property">shootUrl</span> = dataUrl;<br>     <span class="hljs-comment">// 获取图片的base64格式</span><br>     <span class="hljs-comment">// let shootImage = base64ConvertFile(dataUrl, &quot;haorooms截取视频帧&quot;);</span><br>   &#125;,<br></code></pre></td></tr></table></figure><h4 id="实现网站截图"><a href="#实现网站截图" class="headerlink" title="实现网站截图"></a>实现网站截图</h4><blockquote><p>import html2canvas from ‘html2canvas’</p></blockquote><p><code>html2canvas.js</code>用法其实很简单，通常情况下只需传入需要转换的 DOM 对象就可以了</p><p>代码：定义公共方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> html2canvas <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;html2canvas&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">shootAll</span> = (<span class="hljs-params">dom</span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">html2canvas</span>(dom, &#123;<br>    <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>    <span class="hljs-attr">allowTaint</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">useCORS</span>: <span class="hljs-literal">true</span>,<br>  &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">canvas</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> canvasInfo = &#123;<br>      <span class="hljs-attr">width</span>: canvas.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;width&quot;</span>),<br>      <span class="hljs-attr">height</span>: canvas.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;height&quot;</span>),<br>      <span class="hljs-attr">url</span>: canvas.<span class="hljs-title function_">toDataURL</span>(),<br>    &#125;;<br>    <span class="hljs-comment">// canvas为转换后的Canvas对象</span><br>    <span class="hljs-keyword">return</span> canvasInfo; <span class="hljs-comment">// 导出图片</span><br>  &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><blockquote><p>找到对应 dom 是关键，可以通过点击事件获取到 e，e 携带了全部的路径 path，从 path 中可以获取到父级的 dom，传入前做一下对象是否是 dom 的判断</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">assertElement</span>(<span class="hljs-params">obj</span>) &#123;<br>     <span class="hljs-comment">//判断是不是dom节点</span><br>     <span class="hljs-keyword">var</span> d = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br>     <span class="hljs-keyword">try</span> &#123;<br>       d.<span class="hljs-title function_">appendChild</span>(obj.<span class="hljs-title function_">cloneNode</span>(<span class="hljs-literal">true</span>));<br>       <span class="hljs-keyword">return</span> obj.<span class="hljs-property">nodeType</span> == <span class="hljs-number">1</span> ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span>;<br>     &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>       <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>     &#125;<br>   &#125;,<br>   <span class="hljs-title function_">shootAllPre</span>(<span class="hljs-params">e</span>) &#123;<br>     <span class="hljs-keyword">let</span> shootDom = <span class="hljs-literal">null</span>;<br>     e.<span class="hljs-property">path</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">v</span>) =&gt;</span> &#123;<br>       <span class="hljs-comment">//寻找到 container dom节点</span><br>       <span class="hljs-keyword">let</span> judge = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">assertElement</span>(v);<br>       <span class="hljs-keyword">if</span> (judge &amp;&amp; v.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;class&quot;</span>) == <span class="hljs-string">&quot;container&quot;</span>) &#123;<br>         shootDom = v;<br>       &#125;<br>     &#125;);<br>     <span class="hljs-title function_">shootAll</span>(shootDom).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">shootUrl</span> = res.<span class="hljs-property">url</span>;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">info</span>.<span class="hljs-property">swidth</span> = res.<span class="hljs-property">width</span>;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">info</span>.<span class="hljs-property">sheight</span> = res.<span class="hljs-property">height</span>;<br>     &#125;);<br>   &#125;,<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;shootAllPre&quot;</span>&gt;</span>全屏截图<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="ES6-的解构"><a href="#ES6-的解构" class="headerlink" title="ES6 的解构"></a>ES6 的解构</h3><h3 id="ES6-中-Proxy-的代理和反射"><a href="#ES6-中-Proxy-的代理和反射" class="headerlink" title="ES6 中 Proxy 的代理和反射"></a>ES6 中 Proxy 的代理和反射</h3><h4 id="Proxy-对象"><a href="#Proxy-对象" class="headerlink" title="Proxy 对象"></a>Proxy 对象</h4><p>EcmaScript 2015 中引入了 Proxy 代理 与 Reflect 反射 两个新的内置模块。</p><p>我们可以利用 Proxy 和 Reflect 来实现对于对象的代理劫持操作，类似于 Es 5 中 Object.defineProperty()的效果</p> <!-- more --><h5 id="使用-Proxy"><a href="#使用-Proxy" class="headerlink" title="使用 Proxy"></a>使用 Proxy</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;wang.haoyu&quot;</span>,<br>&#125;;<br><br><span class="hljs-keyword">const</span> proxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(obj, &#123;<br>  <span class="hljs-comment">// get陷阱中target表示原对象 key表示访问的属性名</span><br>  <span class="hljs-title function_">get</span>(<span class="hljs-params">target, key, receiver</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;劫持你的数据访问&quot;</span> + key);<br>    <span class="hljs-keyword">return</span> target[key];<br>  &#125;,<br>  <span class="hljs-title function_">set</span>(<span class="hljs-params">target, key, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`set <span class="hljs-subst">$&#123;key&#125;</span>, old value <span class="hljs-subst">$&#123;target[key]&#125;</span> to <span class="hljs-subst">$&#123;value&#125;</span>`</span>);<br>    target[key] = value;<br>  &#125;,<br>&#125;);<br><br>proxy.<span class="hljs-property">name</span>; <span class="hljs-comment">// 劫持你的数据访问name -&gt; wang.haoyu</span><br></code></pre></td></tr></table></figure><p>当调用 proxy.name 时，会触发 proxy 内置的 get，从而返回 target 的值</p><p>Proxy 的第 2 个参数 handler 除了可以设置 get 和 set 方法外，还有更多丰富的方法：</p><ul><li>get(target, propKey, receiver)：拦截对象属性的读取，比如 proxy.foo 和 proxy[‘foo’]。</li><li>set(target, propKey, value, receiver)：拦截对象属性的设置，比如 proxy.foo = v 或 proxy[‘foo’] = v，返回一 * 个布尔值。</li><li>has(target, propKey)：拦截 propKey in proxy 的操作，返回一个布尔值。</li><li>deleteProperty(target, propKey)：拦截 delete proxy[propKey]的操作，返回一个布尔值。</li><li>ownKeys(target)：拦截 Object.getOwnPropertyNames(proxy)、Object.getOwnPropertySymbols(proxy)、Object. _ keys(proxy)、for…in 循环，返回一个数组。该方法返回目标对象所有自身的属性的属性名，而 Object.keys()的返回结果 _ 仅包括目标对象自身的可遍历属性。</li><li>getOwnPropertyDescriptor(target, propKey)：拦截 Object.getOwnPropertyDescriptor(proxy, propKey)，返回属 * 性的描述对象。</li><li>defineProperty(target, propKey, propDesc)：拦截 Object.defineProperty(proxy, propKey, propDesc）、 * Object.defineProperties(proxy, propDescs)，返回一个布尔值。</li><li>preventExtensions(target)：拦截 Object.preventExtensions(proxy)，返回一个布尔值。</li><li>getPrototypeOf(target)：拦截 Object.getPrototypeOf(proxy)，返回一个对象。</li><li>isExtensible(target)：拦截 Object.isExtensible(proxy)，返回一个布尔值。</li><li>setPrototypeOf(target, proto)：拦截 Object.setPrototypeOf(proxy, proto)，返回一个布尔值。如果目标对象是函 * 数，那么还有两种额外操作可以拦截。</li><li>apply(target, object, args)：拦截 Proxy 实例作为函数调用的操作，比如 proxy(…args)、proxy.call(object, .. * .args)、proxy.apply(…)。</li><li>construct(target, args)：拦截 Proxy 实例作为构造函数调用的操作，比如 new proxy(…args)。</li></ul><h4 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h4><p>Proxy 与 Reflect 可以说形影不离了，Reflect 里所有的方法和使用方式与 Proxy 完全一样。</p><p>例如上面 Proxy 里的 get(), set()和 deleteProperty()方法我们都是直接操作原代理对象的，这里我们改成使用 Reflect 来操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> personProxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(person, &#123;<br>  <span class="hljs-title function_">get</span>(<span class="hljs-params">target, key, receiver</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`get value by <span class="hljs-subst">$&#123;key&#125;</span>`</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">get</span>(target, key, receiver);<br>  &#125;,<br>  <span class="hljs-title function_">set</span>(<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`set <span class="hljs-subst">$&#123;key&#125;</span>, old value <span class="hljs-subst">$&#123;target[key]&#125;</span> to <span class="hljs-subst">$&#123;value&#125;</span>`</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">set</span>(target, key, value, receiver);<br>  &#125;,<br>  <span class="hljs-title function_">deleteProperty</span>(<span class="hljs-params">target, key, receiver</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`delete key <span class="hljs-subst">$&#123;key&#125;</span>`</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">deleteProperty</span>(target, key, receiver);<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><blockquote><p>问： target[key] 和 Reflect.get(target, key, receiver) 的效果是一样的。那为什么要多一个 Reflect 反射呢？<br>答：注意到 Proxy 里头的 get 等还有一个“多余的传入参数”：receiver，它和 Reflect.get 的第三个参数是配套的。<br>如果那个你的 Proxy 里头的 target 还是一个 proxy，并且对 receiver 有自己的用途，那么只能用 Reflect.get(target,prop,receiver)，将 receiver 正确地传递进去。也就是保证 this 的指向正确性</p></blockquote><h4 id="Vue3-的优化"><a href="#Vue3-的优化" class="headerlink" title="Vue3 的优化"></a>Vue3 的优化</h4><p>Vue3 可以通过 Proxy 直接劫持数组，从而实现对应数组的监听了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>];<br><span class="hljs-keyword">const</span> arrProxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(arr, &#123;<br>  <span class="hljs-title function_">get</span>(<span class="hljs-params">target, key, receiver</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arrProxy.get&quot;</span>, target, key);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">get</span>(target, key, receiver);<br>  &#125;,<br>  <span class="hljs-title function_">set</span>(<span class="hljs-params">target, key, value, receiver</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arrProxy.set&quot;</span>, target, key, value);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">set</span>(target, key, value, receiver);<br>  &#125;,<br>  <span class="hljs-title function_">deleteProperty</span>(<span class="hljs-params">target, key</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arrProxy.deleteProperty&quot;</span>, target, key);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">deleteProperty</span>(target, key);<br>  &#125;,<br>&#125;);<br><br>arrProxy[<span class="hljs-number">2</span>] = <span class="hljs-number">22</span>; <span class="hljs-comment">// arrProxy.set (4) [1, 2, 3, 4] 2 22</span><br>arrProxy[<span class="hljs-number">3</span>]; <span class="hljs-comment">// arrProxy.get (4) [1, 2, 22, 4] 3</span><br><span class="hljs-keyword">delete</span> arrProxy[<span class="hljs-number">2</span>]; <span class="hljs-comment">// arrProxy.deleteProperty (4) [1, 2, 22, 4] 2</span><br>arrProxy.<span class="hljs-title function_">push</span>(<span class="hljs-number">5</span>); <span class="hljs-comment">// push操作比较复杂，这里进行了多个get()和set()操作</span><br>arrProxy.<span class="hljs-property">length</span>; <span class="hljs-comment">// arrProxy.get (5) [1, 2, empty, 4, 5] length</span><br></code></pre></td></tr></table></figure><p>可以看到无论获取、删除还是修改数据，都可以感知到。还有数组原型链上的一些方法，如：</p><ul><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li><li>splice()</li><li>sort()</li><li>reverse()</li></ul><p>也都能通过 Proxy 中的代理方法劫持到。</p><h3 id="全面屏宽高比对"><a href="#全面屏宽高比对" class="headerlink" title="全面屏宽高比对"></a>全面屏宽高比对</h3><h4 id="判断逻辑"><a href="#判断逻辑" class="headerlink" title="判断逻辑"></a>判断逻辑</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> HIGH_SCREEN 常见全面屏比例9：19，也是最多的设备，市面最高全面屏比例9：20</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> SHORT_SCREEN 市面最矮全面屏比例9：18</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> NOT_FULL__SCREEN 市面上最刹那关键非全面屏比例9：16</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getDeviceScreenRate</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> width = <span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-property">width</span>;<br>  <span class="hljs-keyword">const</span> height = <span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-property">height</span>;<br>  <span class="hljs-keyword">const</span> aspect = height / width;<br>  <span class="hljs-keyword">if</span> (aspect &lt; <span class="hljs-number">1.8</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;NOT_FULL__SCREEN&quot;</span>;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (aspect &gt;= <span class="hljs-number">1.8</span> &amp;&amp; aspect &lt; <span class="hljs-number">2.09</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;SHORT_SCREEN&quot;</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;HIGH_SCREEN&quot;</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取地址栏参数"><a href="#获取地址栏参数" class="headerlink" title="获取地址栏参数"></a>获取地址栏参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">sp</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>).<span class="hljs-property">searchParams</span>;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">sp</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;onlyCamera&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="循环调用实现序列帧"><a href="#循环调用实现序列帧" class="headerlink" title="循环调用实现序列帧"></a>循环调用实现序列帧</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span>  &#123;<span class="hljs-type">Function</span>&#125; fn 内部执行函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">rAF</span> = (<span class="hljs-params">fn</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span>) &#123;<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span> =<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span> ||<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span> ||<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span> ||<br>      <span class="hljs-keyword">function</span> (<span class="hljs-params">callback</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(callback, <span class="hljs-number">1000</span> / <span class="hljs-number">60</span>);<br>      &#125;;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">requestAnimationFrame</span>(fn);<br>&#125;;<br><br><span class="hljs-keyword">const</span> maxFpsNumberFor2D = <span class="hljs-number">30</span>;<br><span class="hljs-keyword">let</span> lastTime = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> myReq = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">renderImage</span>(<span class="hljs-params">imageNow, imageNum, Fn, endCallback, limit</span>) &#123;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">scroll</span>(<span class="hljs-params">imageNow, Fn</span>) &#123;<br>    <span class="hljs-keyword">if</span> (imageNow &gt;= imageNum) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;序列帧执行完毕，调用回调函数--------&quot;</span>, imageNum);<br>      endCallback &amp;&amp; <span class="hljs-title function_">endCallback</span>();<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-title class_">Fn</span>(imageNow);<br>    <span class="hljs-keyword">let</span> finalLimit = limit ? limit : maxFpsNumberFor2D;<br>    <span class="hljs-keyword">if</span> (finalLimit) &#123;<br>      <span class="hljs-keyword">let</span> currentTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br>      <span class="hljs-keyword">if</span> (currentTime - lastTime &gt; finalLimit) &#123;<br>        imageNow++;<br>        lastTime = currentTime;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      imageNow++;<br>    &#125;<br><br>    myReq = <span class="hljs-title function_">rAF</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">scroll</span>(imageNow, <span class="hljs-title class_">Fn</span>));<br>  &#125;<br>  <span class="hljs-title function_">scroll</span>(imageNow, <span class="hljs-title class_">Fn</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">clearRaf</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">if</span> (myReq) &#123;<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">cancelAnimationFrame</span>(myReq);<br>    myReq = <span class="hljs-literal">null</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>提前加载所有图片</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js">    <span class="hljs-keyword">async</span> <span class="hljs-title function_">generateImages</span>(<span class="hljs-params">path, max, pre</span>) &#123;<br>      <span class="hljs-comment">// eslint-disable-next-line no-unused-vars</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">res, rej</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> sources = [];<br>        <span class="hljs-comment">//构建图片序列数据</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= max; i++) &#123;<br>          sources[i] = <span class="hljs-built_in">require</span>(<span class="hljs-string">`@/assets/images/<span class="hljs-subst">$&#123;path&#125;</span>/<span class="hljs-subst">$&#123;pre&#125;</span><span class="hljs-subst">$&#123;</span></span><br><span class="hljs-subst"><span class="hljs-string">            i &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&quot;00&quot;</span> + i : i &lt; <span class="hljs-number">100</span> &amp;&amp; i &gt;= <span class="hljs-number">10</span> ? <span class="hljs-string">&quot;0&quot;</span> + i : i</span></span><br><span class="hljs-subst"><span class="hljs-string">          &#125;</span>.webp`</span>); <span class="hljs-comment">//根据项目修改</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> loadedImages = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">let</span> numImages = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">let</span> images = [];<br>        numImages = sources.<span class="hljs-property">length</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, len = sources.<span class="hljs-property">length</span>; i &lt; len; i++) &#123;<br>          images[i] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Image</span>();<br>          images[i].<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-comment">//当所有图片加载完成时，执行回调函数callback</span><br>            <span class="hljs-keyword">if</span> (++loadedImages &gt;= numImages) &#123;<br>              <span class="hljs-title function_">res</span>(images);<br>            &#125;<br>          &#125;;<br>          images[i].<span class="hljs-property">src</span> = sources[i];<br>        &#125;<br>      &#125;);<br>    &#125;,<br><span class="hljs-keyword">let</span> images = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">generateImages</span>(<span class="hljs-string">&quot;zoom&quot;</span>, <span class="hljs-number">45</span>, <span class="hljs-string">&quot;&quot;</span>);<br></code></pre></td></tr></table></figure><p>使用循环调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> imageNum = images.<span class="hljs-property">length</span>;<br><span class="hljs-keyword">let</span> imageNow = <span class="hljs-number">0</span>;<br><br><span class="hljs-title function_">renderImage</span>(<br>  imageNow,<br>  imageNum,<br>  <span class="hljs-function">(<span class="hljs-params">imageNow</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&quot;rgba(0,0,0,0)&quot;</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">drawImage</span>(images[imageNow], <span class="hljs-number">0</span>, dy, imageWidth, imageHeight);<br>  &#125;,<br>  <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&quot;ended&quot;</span>);<br>  &#125;,<br>  limit<br>);<br></code></pre></td></tr></table></figure><h3 id="canvas-计算适配宽高"><a href="#canvas-计算适配宽高" class="headerlink" title="canvas 计算适配宽高"></a>canvas 计算适配宽高</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">imageSizeFill</span>(<span class="hljs-params">imageSize, w, h</span>) &#123;<br>  <span class="hljs-comment">// 宽高小于目标图形时，差距大的边变相等优先</span><br>  <span class="hljs-comment">// 宽高大于目标图形时，差距小的边变相等优先</span><br>  <span class="hljs-comment">// 宽高一个大于目标图形，一个小于目标图形时，小的边优先执行以上规则</span><br>  <span class="hljs-keyword">var</span> scaleW = <span class="hljs-literal">null</span>;<br>  <span class="hljs-keyword">var</span> scaleH = <span class="hljs-literal">null</span>;<br>  <span class="hljs-keyword">if</span> (imageSize.<span class="hljs-property">width</span> &lt; w) &#123;<br>    <span class="hljs-comment">// 如果原有图片宽度小于画图宽度</span><br>    <span class="hljs-keyword">if</span> (imageSize.<span class="hljs-property">height</span> &lt; h) &#123;<br>      <span class="hljs-comment">// 如果原有图片高度小于画图高度</span><br>      <span class="hljs-comment">// 计算宽度比</span><br>      scaleW = w / imageSize.<span class="hljs-property">width</span>;<br>      <span class="hljs-comment">// 计算高度比</span><br>      scaleH = h / imageSize.<span class="hljs-property">height</span>;<br>      <span class="hljs-keyword">if</span> (scaleW &gt; scaleH) &#123;<br>        <span class="hljs-comment">// 如果宽度比更大，代表宽度相差更多，需要变大更多，所以宽度等于画图宽度，高度同比例变大后截取，比例相同则无论哪种方式都会同比例放大</span><br>        imageSize.<span class="hljs-property">height</span> = (imageSize.<span class="hljs-property">height</span> / imageSize.<span class="hljs-property">width</span>) * w;<br>        imageSize.<span class="hljs-property">width</span> = w;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 如果高度比更大，代表高度相差更多，需要变大更多，所以高度等于画图高度，宽度同比例变大后截取，比例相同则无论哪种方式都会同比例放大</span><br>        imageSize.<span class="hljs-property">width</span> = (imageSize.<span class="hljs-property">width</span> / imageSize.<span class="hljs-property">height</span>) * h;<br>        imageSize.<span class="hljs-property">height</span> = h;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">// 如果原有图片高度大于等于画图高度，则一定是宽度等于画图宽度，高度同比例变大后截取</span><br>      imageSize.<span class="hljs-property">height</span> = (imageSize.<span class="hljs-property">height</span> / imageSize.<span class="hljs-property">width</span>) * w;<br>      imageSize.<span class="hljs-property">width</span> = w;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 如果原有图片宽度大于等于画图宽度</span><br>    <span class="hljs-keyword">if</span> (imageSize.<span class="hljs-property">height</span> &gt; h) &#123;<br>      <span class="hljs-comment">// 计算宽度比</span><br>      scaleW = w / imageSize.<span class="hljs-property">width</span>;<br>      <span class="hljs-comment">// 计算高度比</span><br>      scaleH = h / imageSize.<span class="hljs-property">height</span>;<br>      <span class="hljs-keyword">if</span> (scaleW &gt; scaleH) &#123;<br>        <span class="hljs-comment">// 如果宽度比更大，代表宽度相差更少，需要变小更少，所以宽度等于画图宽度，高度同比例变大后截取，比例相同则无论哪种方式都会同比例放大</span><br>        imageSize.<span class="hljs-property">height</span> = (imageSize.<span class="hljs-property">height</span> / imageSize.<span class="hljs-property">width</span>) * w;<br>        imageSize.<span class="hljs-property">width</span> = w;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 如果高度比更大，代表高度相差更少，需要变小更少，所以高度等于画图高度，宽度同比例变大后截取，比例相同则无论哪种方式都会同比例放大</span><br>        imageSize.<span class="hljs-property">width</span> = (imageSize.<span class="hljs-property">width</span> / imageSize.<span class="hljs-property">height</span>) * h;<br>        imageSize.<span class="hljs-property">height</span> = h;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">// 如果原有图片高度小于等于画图高度，则一定是高度等于画图高度，宽度同比例变大后截取</span><br>      imageSize.<span class="hljs-property">width</span> = (imageSize.<span class="hljs-property">width</span> / imageSize.<span class="hljs-property">height</span>) * h;<br>      imageSize.<span class="hljs-property">height</span> = h;<br>    &#125;<br>  &#125;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;改变imageSize&quot;</span>, imageSize.<span class="hljs-property">width</span>, imageSize.<span class="hljs-property">height</span>);<br>  <span class="hljs-keyword">let</span> dx = (w - imageSize.<span class="hljs-property">width</span>) / <span class="hljs-number">2</span>;<br>  <span class="hljs-keyword">let</span> dy = (h - imageSize.<span class="hljs-property">height</span>) / <span class="hljs-number">2</span>;<br><br>  <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">imageWidth</span>: imageSize.<span class="hljs-property">width</span>, <span class="hljs-attr">imageHeight</span>: imageSize.<span class="hljs-property">height</span>, dx, dy &#125;;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode配置项文件</title>
    <link href="/2022/02/11/vscode%E9%85%8D%E7%BD%AE%E9%A1%B9%E6%96%87%E4%BB%B6/"/>
    <url>/2022/02/11/vscode%E9%85%8D%E7%BD%AE%E9%A1%B9%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="vs-code-插件记录-更新中"><a href="#vs-code-插件记录-更新中" class="headerlink" title="vs code 插件记录(更新中)"></a>vs code 插件记录(更新中)</h3><p>vscode 会使用比较多的插件，记录：</p><ol><li>Code Spell Checker</li><li>Auto Rename Tag（修改标签）</li><li>Chinese (Simplified) Language Pack for VS Code</li><li>EditorConfig for VS Code</li><li>微信小程序开发工具</li><li>ESLint</li><li>javascript console utils</li><li>Prettier</li><li>px to rem &amp; rpx &amp; vw (cssrem)</li><li>GitLens</li><li>one dark pro</li><li>Stylelint</li><li>TODO Highlight</li><li>Vue - Official</li><li>WXML - Language Service</li></ol><h3 id="vscode-配置项文件"><a href="#vscode-配置项文件" class="headerlink" title="vscode 配置项文件"></a>vscode 配置项文件</h3><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;[css]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[html]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[javascript]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[json]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[jsonc]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[markdown]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[typescript]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[vue]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;[less]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;cSpell.userWords&quot;</span>: [<br>    <span class="hljs-string">&quot;aliyuncs&quot;</span>,<br>    <span class="hljs-string">&quot;antd&quot;</span>,<br>    <span class="hljs-string">&quot;antv&quot;</span>,<br>    <span class="hljs-string">&quot;axios&quot;</span>,<br>    <span class="hljs-string">&quot;breakline&quot;</span>,<br>    <span class="hljs-string">&quot;cnpm&quot;</span>,<br>    <span class="hljs-string">&quot;commitlint&quot;</span>,<br>    <span class="hljs-string">&quot;demi&quot;</span>,<br>    <span class="hljs-string">&quot;endregion&quot;</span>,<br>    <span class="hljs-string">&quot;gifsicle&quot;</span>,<br>    <span class="hljs-string">&quot;iconify&quot;</span>,<br>    <span class="hljs-string">&quot;Lazyload&quot;</span>,<br>    <span class="hljs-string">&quot;leemeng&quot;</span>,<br>    <span class="hljs-string">&quot;logicflow&quot;</span>,<br>    <span class="hljs-string">&quot;maxlength&quot;</span>,<br>    <span class="hljs-string">&quot;mozjpeg&quot;</span>,<br>    <span class="hljs-string">&quot;msapplication&quot;</span>,<br>    <span class="hljs-string">&quot;optipng&quot;</span>,<br>    <span class="hljs-string">&quot;pnpm&quot;</span>,<br>    <span class="hljs-string">&quot;pxtorem&quot;</span>,<br>    <span class="hljs-string">&quot;saas&quot;</span>,<br>    <span class="hljs-string">&quot;scripthost&quot;</span>,<br>    <span class="hljs-string">&quot;sider&quot;</span>,<br>    <span class="hljs-string">&quot;styl&quot;</span>,<br>    <span class="hljs-string">&quot;stylelint&quot;</span>,<br>    <span class="hljs-string">&quot;styleselect&quot;</span>,<br>    <span class="hljs-string">&quot;tailwindcss&quot;</span>,<br>    <span class="hljs-string">&quot;templ&quot;</span>,<br>    <span class="hljs-string">&quot;unref&quot;</span>,<br>    <span class="hljs-string">&quot;vant&quot;</span>,<br>    <span class="hljs-string">&quot;vicons&quot;</span>,<br>    <span class="hljs-string">&quot;viewerjs&quot;</span>,<br>    <span class="hljs-string">&quot;vite&quot;</span>,<br>    <span class="hljs-string">&quot;vitejs&quot;</span>,<br>    <span class="hljs-string">&quot;vuejs&quot;</span>,<br>    <span class="hljs-string">&quot;vuex&quot;</span>,<br>    <span class="hljs-string">&quot;wanxue&quot;</span>,<br>    <span class="hljs-string">&quot;webpackbar&quot;</span>,<br>    <span class="hljs-string">&quot;webstorm&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;debug.toolBarLocation&quot;</span>: <span class="hljs-string">&quot;docked&quot;</span>,<br>  <span class="hljs-string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;source.fixAll.eslint&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;source.organizeImports&quot;</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// 这个属性能够在保存时，自动调整 import 语句相关顺序，能够让你的 import 语句按照字母顺序进行排列</span><br>  &#125;,<br>  <span class="hljs-string">&quot;editor.fontFamily&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;editor.fontLigatures&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;editor.fontSize&quot;</span>: <span class="hljs-number">16</span>,<br>  <span class="hljs-string">&quot;editor.formatOnSave&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;editor.lineHeight&quot;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&quot;editor.maxTokenizationLineLength&quot;</span>: <span class="hljs-number">40000</span>,<br>  <span class="hljs-string">&quot;editor.minimap.renderCharacters&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;editor.minimap.scale&quot;</span>: <span class="hljs-number">2</span>,<br>  <span class="hljs-string">&quot;editor.minimap.showSlider&quot;</span>: <span class="hljs-string">&quot;always&quot;</span>,<br>  <span class="hljs-string">&quot;editor.mouseWheelZoom&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;editor.quickSuggestions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;strings&quot;</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-string">&quot;editor.suggestSelection&quot;</span>: <span class="hljs-string">&quot;first&quot;</span>,<br>  <span class="hljs-string">&quot;editor.tabCompletion&quot;</span>: <span class="hljs-string">&quot;on&quot;</span>, <span class="hljs-comment">// 用来在出现推荐值时，按下Tab键是否自动填入最佳推荐值</span><br>  <span class="hljs-string">&quot;editor.tabSize&quot;</span>: <span class="hljs-number">2</span>,<br>  <span class="hljs-string">&quot;editor.unicodeHighlight.invisibleCharacters&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;explorer.confirmDelete&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;files.associations&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;.env.*&quot;</span>: <span class="hljs-string">&quot;dotenv&quot;</span>,<br>    <span class="hljs-string">&quot;*.js&quot;</span>: <span class="hljs-string">&quot;javascriptreact&quot;</span>,<br>    <span class="hljs-string">&quot;*.tsx&quot;</span>: <span class="hljs-string">&quot;javascriptreact&quot;</span>,<br>    <span class="hljs-string">&quot;*.jsx&quot;</span>: <span class="hljs-string">&quot;javascriptreact&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;git.autofetch&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;js/ts.implicitProjectConfig.checkJs&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;js/ts.implicitProjectConfig.strictFunctionTypes&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;security.workspace.trust.untrustedFiles&quot;</span>: <span class="hljs-string">&quot;open&quot;</span>,<br>  <span class="hljs-string">&quot;terminal.explorerKind&quot;</span>: <span class="hljs-string">&quot;external&quot;</span>,<br>  <span class="hljs-string">&quot;terminal.external.osxExec&quot;</span>: <span class="hljs-string">&quot;iTerm.app&quot;</span>,<br>  <span class="hljs-string">&quot;terminal.integrated.confirmOnExit&quot;</span>: <span class="hljs-string">&quot;always&quot;</span>,<br>  <span class="hljs-string">&quot;terminal.integrated.cursorBlinking&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;terminal.integrated.cursorStyle&quot;</span>: <span class="hljs-string">&quot;line&quot;</span>,<br>  <span class="hljs-string">&quot;terminal.integrated.fontFamily&quot;</span>: <span class="hljs-string">&quot;consolas&quot;</span>,<br>  <span class="hljs-string">&quot;terminal.integrated.fontSize&quot;</span>: <span class="hljs-number">14</span>,<br>  <span class="hljs-string">&quot;terminal.integrated.gpuAcceleration&quot;</span>: <span class="hljs-string">&quot;canvas&quot;</span>,<br>  <span class="hljs-comment">// #让vue中的js按&quot;prettier&quot;格式进行格式化</span><br>  <span class="hljs-string">&quot;vetur.format.defaultFormatter.html&quot;</span>: <span class="hljs-string">&quot;js-beautify-html&quot;</span>,<br>  <span class="hljs-string">&quot;vetur.format.defaultFormatter.js&quot;</span>: <span class="hljs-string">&quot;prettier-eslint&quot;</span>,<br>  <span class="hljs-string">&quot;vetur.format.defaultFormatterOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;js-beautify-html&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;end_with_newline&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;semi&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;singleQuote&quot;</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-comment">// #vue组件中html代码格式化样式</span><br>      <span class="hljs-string">&quot;wrap_attributes&quot;</span>: <span class="hljs-string">&quot;auto&quot;</span>,<br>      <span class="hljs-string">&quot;wrap_line_length&quot;</span>: <span class="hljs-number">200</span><br>    &#125;,<br>    <span class="hljs-string">&quot;prettier&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;editor.tabSize&quot;</span>: <span class="hljs-number">2</span>,<br>      <span class="hljs-string">&quot;semi&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;singleQuote&quot;</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-string">&quot;prettyhtml&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;printWidth&quot;</span>: <span class="hljs-number">160</span>,<br>      <span class="hljs-string">&quot;singleQuote&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;sortAttributes&quot;</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-string">&quot;wrapAttributes&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">&quot;window.autoDetectColorScheme&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;window.newWindowDimensions&quot;</span>: <span class="hljs-string">&quot;offset&quot;</span>,<br>  <span class="hljs-string">&quot;workbench.editor.decorations.colors&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;workbench.editorAssociations&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;*.plist&quot;</span>: <span class="hljs-string">&quot;default&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;workbench.tree.renderIndentGuides&quot;</span>: <span class="hljs-string">&quot;always&quot;</span>,<br>  <span class="hljs-string">&quot;workbench.view.alwaysShowHeaderActions&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;bracketPairColorizer.depreciation-notice&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;editor.parameterHints.enabled&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;vsicons.dontShowNewVersionMessage&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;[javascriptreact]&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;editor.defaultFormatter&quot;</span>: <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;workbench.startupEditor&quot;</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>  <span class="hljs-string">&quot;gitlens.defaultDateShortFormat&quot;</span>: <span class="hljs-literal">null</span>,<br>  <span class="hljs-string">&quot;editor.inlineSuggest.enabled&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;explorer.sortOrder&quot;</span>: <span class="hljs-string">&quot;modified&quot;</span>,<br>  <span class="hljs-string">&quot;gitlens.codeLens.authors.enabled&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;javascript.updateImportsOnFileMove.enabled&quot;</span>: <span class="hljs-string">&quot;never&quot;</span>,<br>  <span class="hljs-string">&quot;vetur.validation.script&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;workbench.iconTheme&quot;</span>: <span class="hljs-string">&quot;vscode-icons&quot;</span>,<br>  <span class="hljs-string">&quot;typescript.updateImportsOnFileMove.enabled&quot;</span>: <span class="hljs-string">&quot;never&quot;</span>,<br>  <span class="hljs-string">&quot;vetur.languageFeatures.updateImportOnFileMove&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="vscode本地配置文件"><a href="#vscode本地配置文件" class="headerlink" title="vscode本地配置文件"></a>vscode本地配置文件</h3><p>.vscode文件夹下包含两个文件</p><ol><li>extensions.json</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;recommendations&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;dbaeumer.vscode-eslint&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;stylelint.vscode-stylelint&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;qiu8310.minapp-vscode&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;wayou.vscode-todo-highlight&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;editorconfig.editorconfig&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;streetsidesoftware.code-spell-checker&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;crazyurus.miniprogram-vscode-extension&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;cipchk.cssrem&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>settings.json</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;minapp-vscode.wxmlFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;prettier&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[wxml]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;qiu8310.minapp-vscode&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[wxss]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;prettier.documentSelectors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;wxss&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.formatOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.codeActionsOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;source.fixAll.eslint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;explicit&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;source.fixAll.stylelint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;explicit&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;eslint.format.enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;css.validate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;less.validate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;scss.validate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;stylelint.snippet&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;css&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;less&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;postcss&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;scss&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;stylelint.validate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;css&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;less&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;postcss&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;scss&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;sass&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;vue&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[javascript]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[json]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;cSpell.words&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;Pathfinding&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;cssrem.wxss&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;cssrem.wxssScreenWidth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">750</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;cssrem.wxssDeviceWidth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">390</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NPM使用</title>
    <link href="/2021/09/15/NPM%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/09/15/NPM%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="NPM使用"><a href="#NPM使用" class="headerlink" title="NPM使用"></a>NPM使用</h2><span id="more"></span><h3 id="使用淘宝-npm-镜像"><a href="#使用淘宝-npm-镜像" class="headerlink" title="使用淘宝 npm 镜像"></a>使用淘宝 npm 镜像</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install --registry=<span class="hljs-attr">http</span>:<span class="hljs-comment">//registry.npmmirror.com</span><br></code></pre></td></tr></table></figure><h3 id="更换淘宝源"><a href="#更换淘宝源" class="headerlink" title="更换淘宝源"></a>更换淘宝源</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install -g cnpm --registry=<span class="hljs-attr">https</span>:<span class="hljs-comment">//registry.npm.taobao.org</span><br>cnpm install<br></code></pre></td></tr></table></figure><h3 id="更换-npm-源"><a href="#更换-npm-源" class="headerlink" title="更换 npm 源"></a>更换 npm 源</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">npm config set registry=<span class="hljs-attr">http</span>:<span class="hljs-comment">//registry.npmjs.org</span><br>pnpm install<br></code></pre></td></tr></table></figure><h3 id="使用-npmrc来控制安装源"><a href="#使用-npmrc来控制安装源" class="headerlink" title="使用.npmrc来控制安装源"></a>使用.npmrc来控制安装源</h3><p>根目录下新建一个.npmrc文件，内容如下即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">registry=<span class="hljs-attr">https</span>:<span class="hljs-comment">//registry.npmmirror.com</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WS使用</title>
    <link href="/2020/07/12/WS%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/07/12/WS%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="WS使用"><a href="#WS使用" class="headerlink" title="WS使用"></a>WS使用</h2><p>WebSocket 是 HTML5 出的东西（协议），也就是说 HTTP 协议没有变化，或者说没关系，但 HTTP 是不支持持久连接的（长连接，循环连接的不算）首先 HTTP 有 1.1 和 1.0 之说，也就是所谓的 keep-alive，把多个 HTTP 请求合并为一个，但是 Websocket 其实是一个新协议，跟 HTTP 协议基本没有关系，只是为了兼容现有浏览器的握手规范而已，</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>提供一个图片下载至服务器进度的功能，需要实时获取服务器下载图片的张数。实现方法如下：</p><p>1.直接采用轮询的方法，每隔一段时间请求图片下载数据</p><p>2.采用长连接，建立起 ws 链接后，可以直接接受到服务器发来的数据，知道有一方主动断开链接</p><h3 id="VUE-中使用-ws"><a href="#VUE-中使用-ws" class="headerlink" title="VUE 中使用 ws"></a>VUE 中使用 ws</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">createWS</span>(<span class="hljs-params"></span>) &#123;<br>     <span class="hljs-keyword">let</span> token = sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;token&#x27;</span>)<br>       ? sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;token&#x27;</span>)<br>       : <span class="hljs-literal">false</span><br>     <span class="hljs-keyword">if</span> (token) &#123;<br>       <span class="hljs-comment">//判断当前浏览器是否支持WebSocket, 主要此处要更换为自己的地址</span><br>       <span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;WebSocket&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span>) &#123;<br>         <span class="hljs-keyword">let</span> websocket = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocket</span>(<br>           <span class="hljs-string">`ws://192.168.1.126:9527/api/litchi/<span class="hljs-subst">$&#123;token&#125;</span>`</span><br>         )<br>         websocket.<span class="hljs-property">onopen</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>           <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Connection open ...&#x27;</span>)<br>           sessionStorage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;isWSConnectioning&#x27;</span>, <span class="hljs-literal">true</span>)<br>         &#125;<br>         websocket.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>           <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event, <span class="hljs-string">&#x27;关闭的回调&#x27;</span>)<br>         &#125;)<br>         websocket.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>           <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event, <span class="hljs-string">&#x27;失败的回调&#x27;</span>)<br>         &#125;)<br>         <span class="hljs-comment">//接收到消息的回调方法</span><br>         websocket.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>           <span class="hljs-keyword">if</span> (event.<span class="hljs-property">data</span>) &#123;<br>           &#125;<br>         &#125;)<br>         websocket.<span class="hljs-property">onmessage</span> = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;&#125;<br>       &#125; <span class="hljs-keyword">else</span> &#123;<br>         <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Not support websocket&#x27;</span>)<br>       &#125;<br>     &#125;<br>   &#125;,<br></code></pre></td></tr></table></figure><p>使用 Tips：使用步骤非常简单。1.new WebSocket 的对象，2.调用对象上的方法，如：open、close、message。3.在对应的事件中进行数据的操作，比如改变页面的进度条和数据。</p><h3 id="业务难点"><a href="#业务难点" class="headerlink" title="业务难点"></a>业务难点</h3><p>实现 ws 不复杂，但是需求中有额外的要求：当用户切换到其他的页面后，再跳转回 ws 的进度条页面后，也需要进度的实时更新。</p><p>这里问题则是：1、当跳转到其他页面后，如何保持 ws 的长连接，2、如何保存当前图片下载进度，3、如何每次进入页面都能够实时更新图片的进度</p><p>解决方案：</p><p>1、因为 vue 是单页面应用，页面跳转本质是页面的路由更换而已。所有，ws 一旦建立了，不会随着页面的跳转而关闭</p><p>2、公共变量的保存一般是 1、VueX 的 store，2、SessionStorage 的浏览器缓存</p><p>3、实时的监听 1、store 的监听可以通过 watch 实现（未实际考察），2、SessionStorage 的监听可以通过‘storage’的事件监听</p><h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><p>采用 SessionStorage 的方案，监听浏览器缓存事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-title function_">resetSetItem</span>(<br>  <span class="hljs-string">&quot;downCheckedImageListSuccess&quot;</span>,<br>  <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">downCheckedImageListSuccess</span>)<br>);<br></code></pre></td></tr></table></figure><p>上面写了一个自定义的事件 resetSetItem，这个事件是用来保存数据入浏览器缓存的。</p><p>为什么不用浏览器的 SessionStorage.setItem 和 window.addEventListener(‘storage’)事件呢？</p><p>实际使用中发现，当页面跳转后再回到下载进度页面后，监听有失效的情况。没有触发页面的数据更新。（当然有可能是我自己没有搞懂）。总之，查询了搜索引擎后采用了另外一种方案:</p><p>1.main.js 中 vue 原型上添加自定义事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 添加全局事件监控方法</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">resetSetItem</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">key, newVal</span>) &#123;<br>  <span class="hljs-comment">//   if (key === &#x27;downCheckedImageListSuccess&#x27;) &#123;</span><br>  <span class="hljs-comment">// 创建一个StorageEvent事件</span><br>  <span class="hljs-keyword">var</span> newStorageEvent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createEvent</span>(<span class="hljs-string">&quot;StorageEvent&quot;</span>);<br>  <span class="hljs-keyword">const</span> storage = &#123;<br>    <span class="hljs-attr">setItem</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">k, val</span>) &#123;<br>      sessionStorage.<span class="hljs-title function_">setItem</span>(k, val);<br>      <span class="hljs-comment">// 初始化创建的事件</span><br>      newStorageEvent.<span class="hljs-title function_">initStorageEvent</span>(<br>        <span class="hljs-string">&quot;setItem&quot;</span>,<br>        <span class="hljs-literal">false</span>,<br>        <span class="hljs-literal">false</span>,<br>        k,<br>        <span class="hljs-literal">null</span>,<br>        val,<br>        <span class="hljs-literal">null</span>,<br>        <span class="hljs-literal">null</span><br>      );<br>      <span class="hljs-comment">// 派发对象</span><br>      <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">dispatchEvent</span>(newStorageEvent);<br>    &#125;,<br>  &#125;;<br>  <span class="hljs-keyword">return</span> storage.<span class="hljs-title function_">setItem</span>(key, newVal);<br>  <span class="hljs-comment">//   &#125;</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>2.页面初始化时，添加监听事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;setItem&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setNum</span>()<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br> &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>当页面中有调用 resetSetItem 方法时，会触发 setItem 事件中的函数，从而触发页面的数据的更新。</p>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从JavaScript的构造函数讲到多态</title>
    <link href="/2020/07/12/%E4%BB%8EJavaScript%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E8%AE%B2%E5%88%B0%E5%A4%9A%E6%80%81/"/>
    <url>/2020/07/12/%E4%BB%8EJavaScript%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E8%AE%B2%E5%88%B0%E5%A4%9A%E6%80%81/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="从-JavaScript-的构造函数到多态"><a href="#从-JavaScript-的构造函数到多态" class="headerlink" title="从 JavaScript 的构造函数到多态"></a>从 JavaScript 的构造函数到多态</h2><h3 id="我们为什么需要构造函数"><a href="#我们为什么需要构造函数" class="headerlink" title="我们为什么需要构造函数"></a>我们为什么需要构造函数</h3><blockquote><p>在 JavaScript 中，用 new 关键字来调用的函数，称为构造函数。构造函数首字母一般大写</p></blockquote><p>当某种需求下，需要创建多个属性、方法差不多的对象的时候，就需要构造函数。比如：</p><span id="more"></span><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Person</span>(<span class="hljs-params">name, gender, hobby</span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">gender</span> = gender;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">hobby</span> = hobby;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span> = <span class="hljs-number">6</span>;<br>&#125;<br><br><span class="hljs-keyword">var</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&quot;zs&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>, <span class="hljs-string">&quot;basketball&quot;</span>);<br></code></pre></td></tr></table></figure><p>上述代码，可以通过 new 关键字，创建一个新对象，这个对象默认就携带了 age 属性，并且这属性的值是 6。</p><h3 id="new-做了什么？"><a href="#new-做了什么？" class="headerlink" title="new 做了什么？"></a>new 做了什么？</h3><p>其实我们可以不用 new，最开始本来是这样的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> obj = &#123;&#125;;<br>obj.<span class="hljs-property">_proto_</span> = <span class="hljs-title class_">Fun</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>;<br><span class="hljs-title class_">Fun</span>.<span class="hljs-title function_">call</span>(obj);<br><span class="hljs-keyword">return</span> obj;<br></code></pre></td></tr></table></figure><ol><li>定义一个空对象</li><li>将 obj 对象的原型指向构造函数的原型</li><li>修改 obj 对象的 this 指向，即 call 它一下</li><li>将这个新的 obj 返回出去</li></ol><p>每当我们调用构造函数生成一个新对象的时候，都需要执行一下以上的 4 步，这太麻烦了，不如用一个关键字来代替这四步，即 new 关键字。</p><h3 id="由构造函数想到继承"><a href="#由构造函数想到继承" class="headerlink" title="由构造函数想到继承"></a>由构造函数想到继承</h3><p>通过 new 关键字新得到了一个实实在在的对象，但是这个对象内容是默认的。即构造函数是什么属性和方法，生成的对象也是对应的方法。</p><p>我如果要生成不同的对象，就需要重新生成对象的模板（它的构造函数）再进行实例化，这也太麻烦了。</p><p><strong>我能不能直接通过某种方式改变构造函数，用来生成新的对象？</strong></p><p>这个就是继承！</p><p>简单点说，就是以前：从模板&gt;生成实例，现在：从模板&gt;修改一下之前的模板&gt;生成实例</p><h4 id="组合继承"><a href="#组合继承" class="headerlink" title="组合继承"></a>组合继承</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Person</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">jump</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;3m&quot;</span>);<br>  &#125;;<br>&#125;<br><span class="hljs-title class_">Person</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">age</span> = <span class="hljs-number">10</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">LittlePerson</span>(<span class="hljs-params">name, sex</span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">sex</span> = sex; <span class="hljs-comment">//重点！ 新添加了一个sex属性</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">pet</span> = <span class="hljs-string">&quot;dog&quot;</span>; <span class="hljs-comment">//重点！ 新添加了一个pet属性，他们都拥有一只狗</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">say</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;good morning&quot;</span>);<br>  &#125;;<br>  <span class="hljs-title class_">Person</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, name); <span class="hljs-comment">//构造函数继承</span><br>&#125;<br><span class="hljs-title class_">LittlePerson</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(); <span class="hljs-comment">//原型继承</span><br><br><span class="hljs-keyword">let</span> littleTom = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LittlePerson</span>(<span class="hljs-string">&quot;Tom&quot;</span>, <span class="hljs-string">&quot;man&quot;</span>);<br><span class="hljs-keyword">let</span> littleLily = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LittlePerson</span>(<span class="hljs-string">&quot;Lily&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(littleTom.<span class="hljs-property">sex</span>, littleLily.<span class="hljs-property">sex</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(littleLily.<span class="hljs-title function_">say</span>(), <span class="hljs-string">&quot;1111&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(littleLily.<span class="hljs-title function_">jump</span>(), <span class="hljs-string">&quot;222&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(littleTom.<span class="hljs-property">pet</span>);<br></code></pre></td></tr></table></figure><blockquote><p>构造函数继承和原型继承，组合到一起，我们就把它叫做组合继承吧。</p></blockquote><p>这里可以看到，子类中，添加了一些新的属性，sex（性别）和 pet（宠物）。由 LittlePerson 构造函数生成的实例，默认有了新的属性 sex、pet，和 Person 构造函数生成的实例有了区别。</p><p><strong>这样就通过对父类构造函数的修改生成新的之类构造函数，再生成特定的实例！</strong></p><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>上面的继承，可以看到构造函数提供的方法处理是固定的，但是可以通过 多态 来实现 <strong>同一个动作，不同的对象有不同的行为</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Add</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">nothing</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">one</span>(<span class="hljs-params">a</span>) &#123;<br>    <span class="hljs-keyword">return</span> a;<br>  &#125;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">two</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b;<br>  &#125;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> length = <span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">switch</span> (length) &#123;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">nothing</span>();<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">one</span>(<span class="hljs-variable language_">arguments</span>[<span class="hljs-number">0</span>]);<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">two</span>(<span class="hljs-variable language_">arguments</span>[<span class="hljs-number">0</span>], <span class="hljs-variable language_">arguments</span>[<span class="hljs-number">1</span>]);<br>    &#125;<br>  &#125;;<br>&#125;<br><span class="hljs-keyword">var</span> p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Add</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-title function_">add</span>()); <span class="hljs-comment">//0</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>)); <span class="hljs-comment">//10</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p.<span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>)); <span class="hljs-comment">//30</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初始模板</title>
    <link href="/2018/07/12/----------------------/"/>
    <url>/2018/07/12/----------------------/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>初始模板</p><p>初始模板</p>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
